2023-03-27 22:03:10 [scrapy.utils.log] INFO: Scrapy 2.8.0 started (bot: scanHouse)
2023-03-27 22:03:10 [scrapy.utils.log] INFO: Versions: lxml 4.9.2.0, libxml2 2.9.14, cssselect 1.2.0, parsel 1.7.0, w3lib 2.1.1, Twisted 22.10.0, Python 3.8.14 (default, Sep  8 2022, 00:02:10) - [GCC 7.5.0], pyOpenSSL 23.0.0 (OpenSSL 3.0.8 7 Feb 2023), cryptography 39.0.2, Platform Linux-5.4.0-144-generic-x86_64-with-glibc2.27
2023-03-27 22:03:10 [scrapy.crawler] INFO: Overridden settings:
{'BOT_NAME': 'scanHouse',
 'DOWNLOAD_DELAY': 3,
 'DUPEFILTER_CLASS': 'scrapy_splash.SplashAwareDupeFilter',
 'FEED_EXPORT_ENCODING': 'utf-8',
 'HTTPCACHE_STORAGE': 'scrapy_splash.SplashAwareFSCacheStorage',
 'LOG_FILE': 'scanHouse.log',
 'LOG_LEVEL': 2,
 'NEWSPIDER_MODULE': 'scanHouse.spiders',
 'REQUEST_FINGERPRINTER_IMPLEMENTATION': '2.7',
 'SPIDER_MODULES': ['scanHouse.spiders'],
 'TWISTED_REACTOR': 'twisted.internet.asyncioreactor.AsyncioSelectorReactor',
 'USER_AGENT': 'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) '
               'AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148'}
2023-03-27 22:03:10 [asyncio] DEBUG: Using selector: EpollSelector
2023-03-27 22:03:10 [scrapy.utils.log] DEBUG: Using reactor: twisted.internet.asyncioreactor.AsyncioSelectorReactor
2023-03-27 22:03:10 [scrapy.utils.log] DEBUG: Using asyncio event loop: asyncio.unix_events._UnixSelectorEventLoop
2023-03-27 22:03:10 [scrapy.extensions.telnet] INFO: Telnet Password: 2bb75e6510dc8b1d
2023-03-27 22:03:10 [scrapy.middleware] INFO: Enabled extensions:
['scrapy.extensions.corestats.CoreStats',
 'scrapy.extensions.telnet.TelnetConsole',
 'scrapy.extensions.memusage.MemoryUsage',
 'scrapy.extensions.logstats.LogStats']
2023-03-27 22:03:11 [scrapy.middleware] INFO: Enabled downloader middlewares:
['scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware',
 'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware',
 'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware',
 'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware',
 'scrapy.downloadermiddlewares.retry.RetryMiddleware',
 'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware',
 'scrapy.downloadermiddlewares.redirect.RedirectMiddleware',
 'scrapy.downloadermiddlewares.cookies.CookiesMiddleware',
 'scrapy_splash.SplashCookiesMiddleware',
 'scrapy_splash.SplashMiddleware',
 'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware',
 'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware',
 'scrapy.downloadermiddlewares.stats.DownloaderStats']
2023-03-27 22:03:11 [scrapy.middleware] INFO: Enabled spider middlewares:
['scrapy.spidermiddlewares.httperror.HttpErrorMiddleware',
 'scrapy_splash.SplashDeduplicateArgsMiddleware',
 'scrapy.spidermiddlewares.offsite.OffsiteMiddleware',
 'scrapy.spidermiddlewares.referer.RefererMiddleware',
 'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware',
 'scrapy.spidermiddlewares.depth.DepthMiddleware']
2023-03-27 22:03:11 [scrapy.middleware] INFO: Enabled item pipelines:
['scanHouse.pipelines.ScanhousePipeline']
2023-03-27 22:03:11 [scrapy.core.engine] INFO: Spider opened
2023-03-27 22:03:11 [scrapy.extensions.logstats] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
2023-03-27 22:03:11 [scrapy.extensions.telnet] INFO: Telnet console listening on 127.0.0.1:6023
2023-03-27 22:03:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:03:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:03:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:03:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-puerto-madero-capital-51205038.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:03:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-puerto-madero-capital-51205038.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 1500',
 'dormitorios': '2',
 'expensas': ' 55.000',
 'm2_total': '87',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Puerto Madero, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-puerto-madero-capital-51205038.html'}
2023-03-27 22:03:19 [scrapy.crawler] INFO: Received SIGINT, shutting down gracefully. Send again to force 
2023-03-27 22:03:19 [scrapy.core.engine] INFO: Closing spider (shutdown)
2023-03-27 22:03:19 [scrapy.crawler] INFO: Received SIGINT twice, forcing unclean shutdown
2023-03-27 22:03:19 [scrapy.downloadermiddlewares.retry] DEBUG: Retrying <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-2.html via http://0.0.0.0:8050/render.html> (failed 1 times): [<twisted.python.failure.Failure twisted.internet.error.ConnectionLost: Connection to the other side was lost in a non-clean fashion: Connection lost.>]
2023-03-27 22:03:27 [scrapy.utils.log] INFO: Scrapy 2.8.0 started (bot: scanHouse)
2023-03-27 22:03:27 [scrapy.utils.log] INFO: Versions: lxml 4.9.2.0, libxml2 2.9.14, cssselect 1.2.0, parsel 1.7.0, w3lib 2.1.1, Twisted 22.10.0, Python 3.8.14 (default, Sep  8 2022, 00:02:10) - [GCC 7.5.0], pyOpenSSL 23.0.0 (OpenSSL 3.0.8 7 Feb 2023), cryptography 39.0.2, Platform Linux-5.4.0-144-generic-x86_64-with-glibc2.27
2023-03-27 22:03:27 [scrapy.crawler] INFO: Overridden settings:
{'BOT_NAME': 'scanHouse',
 'DOWNLOAD_DELAY': 3,
 'DUPEFILTER_CLASS': 'scrapy_splash.SplashAwareDupeFilter',
 'FEED_EXPORT_ENCODING': 'utf-8',
 'HTTPCACHE_STORAGE': 'scrapy_splash.SplashAwareFSCacheStorage',
 'LOG_FILE': 'scanHouse.log',
 'LOG_LEVEL': 2,
 'NEWSPIDER_MODULE': 'scanHouse.spiders',
 'REQUEST_FINGERPRINTER_IMPLEMENTATION': '2.7',
 'SPIDER_MODULES': ['scanHouse.spiders'],
 'TWISTED_REACTOR': 'twisted.internet.asyncioreactor.AsyncioSelectorReactor',
 'USER_AGENT': 'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) '
               'AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148'}
2023-03-27 22:03:27 [asyncio] DEBUG: Using selector: EpollSelector
2023-03-27 22:03:27 [scrapy.utils.log] DEBUG: Using reactor: twisted.internet.asyncioreactor.AsyncioSelectorReactor
2023-03-27 22:03:27 [scrapy.utils.log] DEBUG: Using asyncio event loop: asyncio.unix_events._UnixSelectorEventLoop
2023-03-27 22:03:27 [scrapy.extensions.telnet] INFO: Telnet Password: 21afc447e5f8e21a
2023-03-27 22:03:27 [scrapy.middleware] INFO: Enabled extensions:
['scrapy.extensions.corestats.CoreStats',
 'scrapy.extensions.telnet.TelnetConsole',
 'scrapy.extensions.memusage.MemoryUsage',
 'scrapy.extensions.logstats.LogStats']
2023-03-27 22:03:27 [scrapy.middleware] INFO: Enabled downloader middlewares:
['scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware',
 'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware',
 'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware',
 'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware',
 'scrapy.downloadermiddlewares.retry.RetryMiddleware',
 'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware',
 'scrapy.downloadermiddlewares.redirect.RedirectMiddleware',
 'scrapy.downloadermiddlewares.cookies.CookiesMiddleware',
 'scrapy_splash.SplashCookiesMiddleware',
 'scrapy_splash.SplashMiddleware',
 'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware',
 'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware',
 'scrapy.downloadermiddlewares.stats.DownloaderStats']
2023-03-27 22:03:27 [scrapy.middleware] INFO: Enabled spider middlewares:
['scrapy.spidermiddlewares.httperror.HttpErrorMiddleware',
 'scrapy_splash.SplashDeduplicateArgsMiddleware',
 'scrapy.spidermiddlewares.offsite.OffsiteMiddleware',
 'scrapy.spidermiddlewares.referer.RefererMiddleware',
 'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware',
 'scrapy.spidermiddlewares.depth.DepthMiddleware']
2023-03-27 22:03:27 [scrapy.middleware] INFO: Enabled item pipelines:
['scanHouse.pipelines.ScanhousePipeline']
2023-03-27 22:03:27 [scrapy.core.engine] INFO: Spider opened
2023-03-27 22:03:27 [scrapy.extensions.logstats] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
2023-03-27 22:03:27 [scrapy.extensions.telnet] INFO: Telnet console listening on 127.0.0.1:6023
2023-03-27 22:03:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:03:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:03:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:03:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-puerto-madero-capital-51205038.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:03:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-puerto-madero-capital-51205038.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 1500',
 'dormitorios': '2',
 'expensas': ' 55.000',
 'm2_total': '87',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Puerto Madero, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-puerto-madero-capital-51205038.html'}
2023-03-27 22:03:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-2.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:03:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:03:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:03:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/elegante-propiedad-con-cochera-51318715.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:03:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/elegante-propiedad-con-cochera-51318715.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av Alvear al 1700',
 'dormitorios': '2',
 'expensas': ' 80.000',
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Elegante Propiedad con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/elegante-propiedad-con-cochera-51318715.html'}
2023-03-27 22:03:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-forum-alquiler-piso-departamento-4-ambientes-51281239.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:03:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:03:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-forum-alquiler-piso-departamento-4-ambientes-51281239.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Juncal al 3100 Entre Av. Coronel Díaz y Bulnes',
 'dormitorios': '3',
 'expensas': ' 110.000',
 'm2_cub': '221',
 'm2_total': '245',
 'moneda': 'USD',
 'title': 'Torre Forum Alquiler Piso Departamento 4 Ambientes Escritorio 2 '
          'Cocheras Fijas Amenities en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-forum-alquiler-piso-departamento-4-ambientes-51281239.html'}
2023-03-27 22:03:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51311288.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:03:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:03:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51311288.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Donado 1755',
 'dormitorios': '1',
 'expensas': ' 10.000',
 'm2_cub': '62',
 'm2_total': '62',
 'moneda': 'USD',
 'title': 'Tres Ambientes a Estrenar en Corredor Donado Holmberg',
 'url': 'https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51311288.html'}
2023-03-27 22:03:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-semipiso-excelente-estado-con-51212909.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:03:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:03:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-semipiso-excelente-estado-con-51212909.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Scalabrini Ortiz Raul Av. al 2700',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes Semipiso Excelente Estado con Patio en '
          'Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-semipiso-excelente-estado-con-51212909.html'}
2023-03-27 22:03:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-puerto-madero-51323688.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:03:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:03:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-puerto-madero-51323688.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor 500',
 'dormitorios': '1',
 'expensas': ' 58.000',
 'm2_cub': '77',
 'm2_total': '81',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Ubicado en Puerto Madero, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-puerto-madero-51323688.html'}
2023-03-27 22:04:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-con-muebles-piso-alto-excelente-vista-51262690.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-con-muebles-piso-alto-excelente-vista-51262690.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 700',
 'dormitorios': '2',
 'expensas': ' 70.000',
 'm2_cub': '89',
 'm2_total': '92',
 'moneda': 'USD',
 'title': 'Alquiler con Muebles, Piso Alto, Excelente Vista',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-con-muebles-piso-alto-excelente-vista-51262690.html'}
2023-03-27 22:04:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-recoleta-51373770.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-recoleta-51373770.html>
{'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Montevideo al 1100',
 'expensas': ' 64.000',
 'm2_cub': '90',
 'm2_total': '98',
 'moneda': '$',
 'title': 'Departamento en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-recoleta-51373770.html'}
2023-03-27 22:04:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-le-parc-torre-rio-51318411.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-le-parc-torre-rio-51318411.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'LE Parc - Puerto Madero - DE Maria 4550',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Departamento en Puerto Madero - Le Parc - Torre Rio - Piso Alto',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-le-parc-torre-rio-51318411.html'}
2023-03-27 22:04:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-1-dormitorio-en-alquiler-en-caballito.-51347364.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-1-dormitorio-en-alquiler-en-caballito.-51347364.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Río de Janeiro al 200',
 'dormitorios': '1',
 'expensas': ' 19.360',
 'm2_cub': '37',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Departamento de 1 Dormitorio en Alquiler en Caballito.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-1-dormitorio-en-alquiler-en-caballito.-51347364.html'}
2023-03-27 22:04:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-al-frente-con-entrada-independiente-3-dorm.-51311718.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-al-frente-con-entrada-independiente-3-dorm.-51311718.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Vuelta de Obligado al al 2901',
 'dormitorios': '3',
 'expensas': ' 12.000',
 'm2_cub': '110',
 'm2_total': '175',
 'moneda': 'USD',
 'title': 'PH Al Frente con Entrada Independiente 3 Dorm.',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-al-frente-con-entrada-independiente-3-dorm.-51311718.html'}
2023-03-27 22:04:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-de-3-dorm.-con-dependencia-en-alquiler-en-51311818.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-de-3-dorm.-con-dependencia-en-alquiler-en-51311818.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Santa Fe al 3300 Piso 6º',
 'dormitorios': '3',
 'expensas': ' 48.006',
 'm2_cub': '83',
 'm2_total': '91',
 'moneda': '$',
 'title': 'Semipiso de 3 Dorm. con Dependencia en Alquiler en Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-de-3-dorm.-con-dependencia-en-alquiler-en-51311818.html'}
2023-03-27 22:04:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-en-palermo-51370387.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-en-palermo-51370387.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Cabildo al 500',
 'dormitorios': '1',
 'expensas': ' 16.636',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento de 2 Ambientes en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-en-palermo-51370387.html'}
2023-03-27 22:04:27 [scrapy.extensions.logstats] INFO: Crawled 15 pages (at 15 pages/min), scraped 13 items (at 13 items/min)
2023-03-27 22:04:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-de-categoria-con-jardin-y-pileta-51357715.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-de-categoria-con-jardin-y-pileta-51357715.html>
{'ambientes': '5',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Malabia al 1700',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '345',
 'm2_total': '350',
 'moneda': 'USD',
 'title': 'Casa de Categoria con Jardin y Pileta',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-de-categoria-con-jardin-y-pileta-51357715.html'}
2023-03-27 22:04:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-dos-dorm.-en-recoleta-51254543.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-dos-dorm.-en-recoleta-51254543.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Juncal al 1800',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_cub': '75',
 'm2_total': '75',
 'moneda': 'USD',
 'title': 'Departamento de Dos Dorm. en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-dos-dorm.-en-recoleta-51254543.html'}
2023-03-27 22:04:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-tres-ambientes-recoleta-con-51331210.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-tres-ambientes-recoleta-con-51331210.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Bilinghurst al 1200',
 'dormitorios': '2',
 'expensas': ' 28.000',
 'm2_cub': '65',
 'm2_total': '72',
 'moneda': '$',
 'title': 'Alquiler Departamento Tres Ambientes Recoleta con Balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-tres-ambientes-recoleta-con-51331210.html'}
2023-03-27 22:04:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/botanico-4-ambientes-alquiler-51306264.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/botanico-4-ambientes-alquiler-51306264.html>
{'ambientes': '4',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Av. Las Heras al 4000',
 'dormitorios': '3',
 'expensas': ' 32.600',
 'm2_cub': '129',
 'm2_total': '129',
 'moneda': 'USD',
 'title': 'Botánico - 4 Ambientes - Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/botanico-4-ambientes-alquiler-51306264.html'}
2023-03-27 22:04:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-3.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-recoleta-av-alvear-1700-51368299.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-recoleta-av-alvear-1700-51368299.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Avda. Alvear al 1700',
 'dormitorios': '2',
 'expensas': ' 70.000',
 'm2_cub': '113',
 'm2_total': '123',
 'moneda': 'USD',
 'title': 'Departamento en Recoleta - Av Alvear 1700',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-recoleta-av-alvear-1700-51368299.html'}
2023-03-27 22:04:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-piso-de-4-amb-c-dep-vista-a-av-pedro-51244608.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-piso-de-4-amb-c-dep-vista-a-av-pedro-51244608.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Av. Pedro Goyena al 800',
 'dormitorios': '3',
 'expensas': ' 54.000',
 'm2_cub': '146',
 'm2_total': '157',
 'moneda': 'USD',
 'title': 'Excelente Piso de 4 Amb C/dep - Vista a Av Pedro Goyena - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-piso-de-4-amb-c-dep-vista-a-av-pedro-51244608.html'}
2023-03-27 22:04:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-forum-alquiler-piso-departamento-4-ambientes-51281232.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-forum-alquiler-piso-departamento-4-ambientes-51281232.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Juncal al 3100 Entre Av. Coronel Díaz y Bulnes',
 'dormitorios': '3',
 'expensas': ' 110.000',
 'm2_cub': '221',
 'm2_total': '245',
 'moneda': 'USD',
 'title': 'Torre Forum Alquiler Piso Departamento 4 Ambientes Escritorio 2 '
          'Cocheras Fijas Amenities en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-forum-alquiler-piso-departamento-4-ambientes-51281232.html'}
2023-03-27 22:04:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-puerto-madero-51314080.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:04:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-puerto-madero-51314080.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 700',
 'dormitorios': '2',
 'expensas': ' 55.000',
 'm2_cub': '92',
 'm2_total': '92',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Ubicado en Puerto Madero, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-puerto-madero-51314080.html'}
2023-03-27 22:04:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51222276.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:04:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51222276.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Santa Fe al 3200',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_cub': '99',
 'm2_total': '99',
 'moneda': 'USD',
 'title': 'Departamento - Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51222276.html'}
2023-03-27 22:05:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/bau-propiedades:-departamento-de-3-ambientes-con-51376396.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/bau-propiedades:-departamento-de-3-ambientes-con-51376396.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av. Del Libertador 5500',
 'dormitorios': '2',
 'expensas': ' 46.000',
 'm2_cub': '91',
 'm2_total': '99',
 'moneda': 'USD',
 'title': 'Bau Propiedades: Departamento de 3 Ambientes con Cochera Amenities, '
          'Belgrano!',
 'url': 'https://www.zonaprop.com.ar/propiedades/bau-propiedades:-departamento-de-3-ambientes-con-51376396.html'}
2023-03-27 22:05:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/chateau-libertador-piso-muy-alto-3-dorm.-en-suite-2-51287223.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/chateau-libertador-piso-muy-alto-3-dorm.-en-suite-2-51287223.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av. del Libertador al 7000',
 'dormitorios': '3',
 'expensas': ' 335.000',
 'm2_cub': '281',
 'm2_total': '281',
 'moneda': 'USD',
 'title': 'Chateau Libertador Piso Muy Alto 3 Dorm. en Suite 2 Cocheras Fijas '
          'Full Amenities Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/chateau-libertador-piso-muy-alto-3-dorm.-en-suite-2-51287223.html'}
2023-03-27 22:05:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-amoblado-con-cochera-51153283.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-amoblado-con-cochera-51153283.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Olga Cossettini al 1500',
 'dormitorios': '1',
 'expensas': ' 35.000',
 'm2_total': '68',
 'moneda': 'USD',
 'title': 'Alquiler Departamento 2 Ambientes Amoblado con Cochera en Puerto '
          'Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-amoblado-con-cochera-51153283.html'}
2023-03-27 22:05:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-forum-alquiler-piso-departamento-4-ambientes-51281237.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-forum-alquiler-piso-departamento-4-ambientes-51281237.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Juncal al 3100 Entre Av. Coronel Díaz y Bulnes',
 'dormitorios': '3',
 'expensas': ' 110.000',
 'm2_cub': '221',
 'm2_total': '245',
 'moneda': 'USD',
 'title': 'Torre Forum Alquiler Piso Departamento 4 Ambientes Escritorio 2 '
          'Cocheras Fijas Amenities en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-forum-alquiler-piso-departamento-4-ambientes-51281237.html'}
2023-03-27 22:05:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-piso-de-4-ambientes-en-torre-premium-51143052.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-piso-de-4-ambientes-en-torre-premium-51143052.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av. del Libertador 4400',
 'dormitorios': '3',
 'expensas': ' 185.000',
 'm2_cub': '315',
 'm2_total': '315',
 'moneda': 'USD',
 'title': 'Excelente Piso de 4 Ambientes en Torre Premium',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-piso-de-4-ambientes-en-torre-premium-51143052.html'}
2023-03-27 22:05:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-amoblado-a-nuevo-con-balcon-51292675.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-amoblado-a-nuevo-con-balcon-51292675.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Paraguay al 2900',
 'expensas': ' 17.300',
 'm2_cub': '24',
 'm2_total': '32',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente Amoblado a Nuevo con Balcón y Terraza '
          'Propia - Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-amoblado-a-nuevo-con-balcon-51292675.html'}
2023-03-27 22:05:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-con-cochera-y-51215305.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-con-cochera-y-51215305.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1400',
 'dormitorios': '1',
 'expensas': ' 70.000',
 'm2_cub': '75',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Espectacular 2 Ambientes en Alquiler con Cochera y Baulera en '
          'Oceana. Puerto Madero.',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-con-cochera-y-51215305.html'}
2023-03-27 22:05:27 [scrapy.extensions.logstats] INFO: Crawled 32 pages (at 17 pages/min), scraped 29 items (at 16 items/min)
2023-03-27 22:05:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-3-ambientes-con-cochera-en-51316811.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-3-ambientes-con-cochera-en-51316811.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Guido al 1900',
 'dormitorios': '2',
 'expensas': ' 150.000',
 'm2_total': '226',
 'moneda': 'USD',
 'title': 'Alquiler de Departamento 3 Ambientes con Cochera en Torre Armani '
          'Apto Profesional',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-3-ambientes-con-cochera-en-51316811.html'}
2023-03-27 22:05:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51146605.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51146605.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Gelly Obes al 2200',
 'dormitorios': '3',
 'expensas': ' 337.000',
 'm2_cub': '322',
 'm2_total': '322',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51146605.html'}
2023-03-27 22:05:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/weik-belgrano-arcos-1400-piso-alto-vista-rio-3-51363762.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/weik-belgrano-arcos-1400-piso-alto-vista-rio-3-51363762.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arcos al 1400',
 'dormitorios': '2',
 'expensas': ' 55.000',
 'm2_cub': '100',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Weik Belgrano Arcos 1400 Piso Alto Vista Rio 3 Ambientes 2 Baños '
          'Coch Amenities a Estrenar',
 'url': 'https://www.zonaprop.com.ar/propiedades/weik-belgrano-arcos-1400-piso-alto-vista-rio-3-51363762.html'}
2023-03-27 22:05:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-edificio-kavanagh-piso-15-de-2-dorm.-en-51238598.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-edificio-kavanagh-piso-15-de-2-dorm.-en-51238598.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Florida al 1000',
 'dormitorios': '2',
 'expensas': ' 100.000',
 'm2_cub': '148',
 'm2_total': '148',
 'moneda': 'USD',
 'title': 'Alquiler Edificio Kavanagh Piso 15, de 2 Dorm. en Suite.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-edificio-kavanagh-piso-15-de-2-dorm.-en-51238598.html'}
2023-03-27 22:05:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-4.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-belgrano-capital-51317469.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-belgrano-capital-51317469.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey Loreto 2000',
 'dormitorios': '3',
 'expensas': ' 80.000',
 'm2_cub': '250',
 'm2_total': '250',
 'moneda': 'USD',
 'title': 'Departamento Piso en Alquiler en Belgrano, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-belgrano-capital-51317469.html'}
2023-03-27 22:05:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-amb.-inmejorable-ubicacion-de-villa-devoto-muy-buen-51184450.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-amb.-inmejorable-ubicacion-de-villa-devoto-muy-buen-51184450.html>
{'ambientes': '3',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Segurola 3240 - Caba.',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '53',
 'm2_total': '55',
 'moneda': '$',
 'title': '3 Amb. Inmejorable Ubicación de Villa Devoto, Muy Buen Estado y '
          'Bajas Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-amb.-inmejorable-ubicacion-de-villa-devoto-muy-buen-51184450.html'}
2023-03-27 22:05:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/estupenda-casa-en-alquiler-en-villa-devoto-uso-51269413.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/estupenda-casa-en-alquiler-en-villa-devoto-uso-51269413.html>
{'ambientes': '6',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Av. Segurola al 4100',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '240',
 'm2_total': '240',
 'moneda': 'USD',
 'title': 'Estupenda Casa en Alquiler en Villa Devoto - Uso Familiar Y/o '
          'Comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/estupenda-casa-en-alquiler-en-villa-devoto-uso-51269413.html'}
2023-03-27 22:05:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-duplex-con-cochera-en-inmejorable-zona-de-51387124.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-duplex-con-cochera-en-inmejorable-zona-de-51387124.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'JERONIMO SALGUERO 1600',
 'dormitorios': '2',
 'expensas': ' 45.000',
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Hermoso Dúplex con Cochera en Inmejorable Zona de Palermo!',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-duplex-con-cochera-en-inmejorable-zona-de-51387124.html'}
2023-03-27 22:05:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51312121.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:05:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:05:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51312121.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey Loreto 2000',
 'dormitorios': '2',
 'expensas': ' 33.800',
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Belgrano, Capital Federal, Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51312121.html'}
2023-03-27 22:06:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-en-palermo-chico-51247510.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-en-palermo-chico-51247510.html>
{'ambientes': '2',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Martin Coronado al 3200',
 'dormitorios': '1',
 'expensas': ' 60.000',
 'm2_cub': '89',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Alquiler de Departamento en Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-en-palermo-chico-51247510.html'}
2023-03-27 22:06:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51306170.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51306170.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Mariscal Ramon Castilla al 2800',
 'dormitorios': '3',
 'expensas': ' 156.800',
 'm2_cub': '162',
 'm2_total': '175',
 'moneda': 'USD',
 'title': 'Departamento en Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51306170.html'}
2023-03-27 22:06:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impecable-2-amb-completamente-amoblado-c-cochera-en-51185787.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impecable-2-amb-completamente-amoblado-c-cochera-en-51185787.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Malvinas Argentinas 400',
 'dormitorios': '1',
 'expensas': ' 17.000',
 'm2_cub': '50',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Impecable 2 Amb Completamente Amoblado C/cochera en Caballito!',
 'url': 'https://www.zonaprop.com.ar/propiedades/impecable-2-amb-completamente-amoblado-c-cochera-en-51185787.html'}
2023-03-27 22:06:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/en-lo-mejor-de-palermo-chico-exclusiva-casa-tudor-en-51321688.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/en-lo-mejor-de-palermo-chico-exclusiva-casa-tudor-en-51321688.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Ombu al 2900',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '250',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'En Lo Mejor de Palermo Chico, Exclusiva Casa Tudor en Esquina',
 'url': 'https://www.zonaprop.com.ar/propiedades/en-lo-mejor-de-palermo-chico-exclusiva-casa-tudor-en-51321688.html'}
2023-03-27 22:06:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-venta-y-alquiler-mulieris-51267832.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-venta-y-alquiler-mulieris-51267832.html>
{'ambientes': '5',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Martha Salotti al 500',
 'dormitorios': '4',
 'expensas': ' 240.000',
 'm2_cub': '320',
 'm2_total': '320',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero Venta y Alquiler Mulieris 5 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-venta-y-alquiler-mulieris-51267832.html'}
2023-03-27 22:06:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-excelente-piso-4-5-dorm.-2-cocheras-con-51323756.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-excelente-piso-4-5-dorm.-2-cocheras-con-51323756.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Soldado de la Independencia al 1400',
 'dormitorios': '3',
 'expensas': ' 170.000',
 'm2_cub': '210',
 'm2_total': '240',
 'moneda': 'USD',
 'title': 'Torre - Excelente Piso 4 / 5 Dorm. - 2 Cocheras con Muebles',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-excelente-piso-4-5-dorm.-2-cocheras-con-51323756.html'}
2023-03-27 22:06:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-casa-7-amb-c-terraza-y-jardin-complejo-51158425.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-casa-7-amb-c-terraza-y-jardin-complejo-51158425.html>
{'ambientes': '7',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Ramsay al 2000',
 'dormitorios': '4',
 'expensas': ' 200.000',
 'm2_cub': '650',
 'm2_total': '650',
 'moneda': 'USD',
 'title': 'Alquiler Casa 7 Amb C/ Terraza y Jardin, Complejo Forum Alcorta - '
          'Ramsay 2000, Bajo Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-casa-7-amb-c-terraza-y-jardin-complejo-51158425.html'}
2023-03-27 22:06:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/quartier-boulevard-departamento-de-2-ambientes-en-51142303.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/quartier-boulevard-departamento-de-2-ambientes-en-51142303.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Av Juan B Justo al 1000 Quartier Boulevard -',
 'dormitorios': '1',
 'expensas': ' 45.000',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Quartier Boulevard - Departamento de 2 Ambientes en Piso Alto - '
          'Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/quartier-boulevard-departamento-de-2-ambientes-en-51142303.html'}
2023-03-27 22:06:27 [scrapy.extensions.logstats] INFO: Crawled 50 pages (at 18 pages/min), scraped 46 items (at 17 items/min)
2023-03-27 22:06:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-51349635.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-51349635.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Humboldt al 1900',
 'dormitorios': '1',
 'expensas': ' 26.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Alquiler - 2 Ambientes - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-51349635.html'}
2023-03-27 22:06:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/virrey-del-pino-2000-3-dorm-suite-con-dep-2-banos-comp-51322038.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/virrey-del-pino-2000-3-dorm-suite-con-dep-2-banos-comp-51322038.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey del Pino al 2000',
 'dormitorios': '3',
 'expensas': ' 136.500',
 'm2_cub': '181',
 'm2_total': '181',
 'moneda': 'USD',
 'title': 'Virrey del Pino 2000 3 Dorm Suite con Dep 2 Baños Comp Toil 2 Coch '
          'Pileta Ant 2 Años Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/virrey-del-pino-2000-3-dorm-suite-con-dep-2-banos-comp-51322038.html'}
2023-03-27 22:06:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-mirabilia-belgrano-6-ambientes-51378848.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-mirabilia-belgrano-6-ambientes-51378848.html>
{'ambientes': '6',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arcos al 2600',
 'dormitorios': '4',
 'expensas': ' 140.000',
 'm2_total': '220',
 'moneda': 'USD',
 'title': 'Torre Mirabilia Belgrano - 6 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-mirabilia-belgrano-6-ambientes-51378848.html'}
2023-03-27 22:06:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-5.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impactante-vista-al-rio-alquiler-en-piso-alto-con-dos-51304173.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impactante-vista-al-rio-alquiler-en-piso-alto-con-dos-51304173.html>
{'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Scalabrini Ortiz 3200',
 'dormitorios': '3',
 'expensas': ' 150.000',
 'm2_cub': '270',
 'm2_total': '270',
 'moneda': 'USD',
 'title': 'Impactante Vista Al Rio, Alquiler en Piso Alto con Dos Cocheras y '
          'Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/impactante-vista-al-rio-alquiler-en-piso-alto-con-dos-51304173.html'}
2023-03-27 22:06:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-san-telmo-51385738.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-san-telmo-51385738.html>
{'ambientes': '2',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Av. Juan de Garay al 612',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '47',
 'm2_total': '52',
 'moneda': '$',
 'title': 'Departamento - San Telmo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-san-telmo-51385738.html'}
2023-03-27 22:06:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/triplex-con-parrilla-y-pileta-propia-en-belgrano-r-51239191.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/triplex-con-parrilla-y-pileta-propia-en-belgrano-r-51239191.html>
{'ambientes': '4',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Cap. Gral. Ramón Freire 1710',
 'dormitorios': '3',
 'expensas': ' 240.000',
 'm2_cub': '130',
 'm2_total': '270',
 'moneda': 'USD',
 'title': 'Triplex con Parrilla y Pileta Propia en Belgrano R',
 'url': 'https://www.zonaprop.com.ar/propiedades/triplex-con-parrilla-y-pileta-propia-en-belgrano-r-51239191.html'}
2023-03-27 22:06:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/belgrano-virrey-loreto-1800-piso-6-ambientes-2-51377523.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:06:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:06:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/belgrano-virrey-loreto-1800-piso-6-ambientes-2-51377523.html>
{'ambientes': '6',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey Loreto 1800',
 'dormitorios': '5',
 'expensas': ' 220.000',
 'm2_cub': '354',
 'm2_total': '380',
 'moneda': 'USD',
 'title': 'Belgrano • Virrey Loreto 1800 • Piso • 6 Ambientes • 2 Cocheras',
 'url': 'https://www.zonaprop.com.ar/propiedades/belgrano-virrey-loreto-1800-piso-6-ambientes-2-51377523.html'}
2023-03-27 22:07:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/parana-y-arenales-51260389.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/parana-y-arenales-51260389.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Paraná al 1100',
 'dormitorios': '3',
 'expensas': ' 133.076',
 'm2_cub': '250',
 'm2_total': '250',
 'moneda': 'USD',
 'title': 'Paraná y Arenales',
 'url': 'https://www.zonaprop.com.ar/propiedades/parana-y-arenales-51260389.html'}
2023-03-27 22:07:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/duplex-con-balcon-terraza-amoblado-cochera-51170432.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/duplex-con-balcon-terraza-amoblado-cochera-51170432.html>
{'ambientes': '2',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'BAEZ 500',
 'dormitorios': '1',
 'expensas': ' 50.000',
 'm2_cub': '98',
 'm2_total': '107',
 'moneda': 'USD',
 'title': 'Duplex con Balcón Terraza - Amoblado - Cochera - Hermoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/duplex-con-balcon-terraza-amoblado-cochera-51170432.html'}
2023-03-27 22:07:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-belgrano-jardin-piscina-3-plantas-2-51134200.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-belgrano-jardin-piscina-3-plantas-2-51134200.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arribeños al 1200',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '722',
 'm2_total': '650',
 'moneda': 'USD',
 'title': 'Casa - Belgrano - Jardin - Piscina - 3 Plantas - 2 Coch - Reciclada '
          '- Arribeños',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-belgrano-jardin-piscina-3-plantas-2-51134200.html'}
2023-03-27 22:07:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-5-ambientes-en-coghlan.-51249654.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-5-ambientes-en-coghlan.-51249654.html>
{'ambientes': '5',
 'barrio': ', Coghlan, Capital Federal',
 'direccion': 'Tronador al 3400',
 'dormitorios': '3',
 'expensas': ' 56.000',
 'm2_cub': '160',
 'm2_total': '170',
 'moneda': 'USD',
 'title': 'Alquiler Departamento de 5 Ambientes en Coghlan.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-5-ambientes-en-coghlan.-51249654.html'}
2023-03-27 22:07:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palmera-villa-crespo-a-estrenar-2-dorm.-categoria-51274173.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palmera-villa-crespo-a-estrenar-2-dorm.-categoria-51274173.html>
{'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Argarañas 100',
 'expensas': ' 35.000',
 'm2_cub': '68',
 'm2_total': '81',
 'moneda': 'USD',
 'title': 'Palmera Villa Crespo - a Estrenar 2 Dorm. Categoria',
 'url': 'https://www.zonaprop.com.ar/propiedades/palmera-villa-crespo-a-estrenar-2-dorm.-categoria-51274173.html'}
2023-03-27 22:07:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-y-baulera-en-rio-51289734.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-y-baulera-en-rio-51289734.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Rio Plaza - Aime Paine al 1300',
 'dormitorios': '3',
 'expensas': ' 27.000',
 'm2_cub': '133',
 'm2_total': '148',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes con Cochera y Baulera en Rio Plaza Puerto '
          'Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-y-baulera-en-rio-51289734.html'}
2023-03-27 22:07:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51363124.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51363124.html>
{'ambientes': '6',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'La Pampa 800',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_total': '127',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Belgrano, Capital Federal, Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51363124.html'}
2023-03-27 22:07:27 [scrapy.extensions.logstats] INFO: Crawled 65 pages (at 15 pages/min), scraped 60 items (at 14 items/min)
2023-03-27 22:07:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-4-amb-recoleta-cochera-seguridad-24-has-51287992.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-4-amb-recoleta-cochera-seguridad-24-has-51287992.html>
{'ambientes': '4',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Basavilbaso 1200',
 'dormitorios': '3',
 'expensas': ' 148.000',
 'm2_cub': '180',
 'm2_total': '201',
 'moneda': 'USD',
 'title': 'Alquiler 4 Amb Recoleta Cochera Seguridad 24 Has',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-4-amb-recoleta-cochera-seguridad-24-has-51287992.html'}
2023-03-27 22:07:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-suites-en-lumiere-puerto-madero-51341754.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-suites-en-lumiere-puerto-madero-51341754.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Olga Cossettini al 1500',
 'dormitorios': '2',
 'expensas': ' 82.000',
 'm2_cub': '150',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Departamento 2 Suites en Lumiere Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-suites-en-lumiere-puerto-madero-51341754.html'}
2023-03-27 22:07:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51368435.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51368435.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Av. Pedro Goyena al 1600',
 'dormitorios': '3',
 'expensas': ' 50.352',
 'm2_cub': '112',
 'm2_total': '131',
 'moneda': '$',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51368435.html'}
2023-03-27 22:07:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-con-cochera-quartier-madero-51377906.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-con-cochera-quartier-madero-51377906.html>
{'ambientes': '1',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Quartier Madero Urbano',
 'expensas': ' 40.000',
 'm2_cub': '37',
 'm2_total': '37',
 'moneda': 'USD',
 'title': 'Alquiler Monoambiente con Cochera Quartier Madero Urbano, Puerto '
          'Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-con-cochera-quartier-madero-51377906.html'}
2023-03-27 22:07:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-a-estrenar!-amenities-para-51338705.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-a-estrenar!-amenities-para-51338705.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'AV SANTA FE 5300',
 'dormitorios': '1',
 'expensas': ' 40.000',
 'm2_cub': '54',
 'm2_total': '64',
 'moneda': 'USD',
 'title': 'Hermoso 2 Ambientes a Estrenar! Amenities - Para Entrar Ya! Torre '
          'Be Plaza!',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-a-estrenar!-amenities-para-51338705.html'}
2023-03-27 22:07:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-6.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:46 [scrapy.dupefilters] DEBUG: Filtered duplicate request: <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-colegiales-51264310.html> - no more duplicates will be shown (see DUPEFILTER_DEBUG to show all duplicates)
2023-03-27 22:07:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-alq-casa-en-barrio-parque-7-amb-ascensor-51382371.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-alq-casa-en-barrio-parque-7-amb-ascensor-51382371.html>
{'ambientes': '7',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Ombú 2900',
 'dormitorios': '5',
 'expensas': 0,
 'm2_cub': '662',
 'm2_total': '662',
 'moneda': 'USD',
 'title': 'Venta/alq - Casa en Barrio Parque, 7 Amb, Ascensor, Patios y '
          'Terrazas, 2 Coch',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-alq-casa-en-barrio-parque-7-amb-ascensor-51382371.html'}
2023-03-27 22:07:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-lib-y-bulnes-espectacular-depto-en-edificio-art-51273023.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-lib-y-bulnes-espectacular-depto-en-edificio-art-51273023.html>
{'ambientes': '6',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Av. del Libertador al 2300',
 'dormitorios': '2',
 'expensas': ' 46.000',
 'm2_cub': '205',
 'm2_total': '205',
 'moneda': 'USD',
 'title': 'Av Lib y Bulnes - Espectacular Depto en Edificio Art Deco',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-lib-y-bulnes-espectacular-depto-en-edificio-art-51273023.html'}
2023-03-27 22:07:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/mirabilia-belgrano-51372472.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:07:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:07:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/mirabilia-belgrano-51372472.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arcos al 2600',
 'dormitorios': '3',
 'expensas': ' 116.000',
 'm2_cub': '130',
 'm2_total': '138',
 'moneda': 'USD',
 'title': 'Mirabilia Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/mirabilia-belgrano-51372472.html'}
2023-03-27 22:08:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/mirabilia-belgrano-6-ambientes-51378885.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/mirabilia-belgrano-6-ambientes-51378885.html>
{'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arcos al 2600',
 'expensas': ' 140.000',
 'm2_total': '220',
 'moneda': 'USD',
 'title': 'Mirabilia Belgrano - 6 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/mirabilia-belgrano-6-ambientes-51378885.html'}
2023-03-27 22:08:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-semipiso-en-alquiler-en-belgrano-capital-51312200.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-semipiso-en-alquiler-en-belgrano-capital-51312200.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey del Pino 1900',
 'dormitorios': '4',
 'expensas': ' 119.000',
 'm2_cub': '211',
 'm2_total': '211',
 'moneda': 'USD',
 'title': 'Departamento Semipiso en Alquiler en Belgrano, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-semipiso-en-alquiler-en-belgrano-capital-51312200.html'}
2023-03-27 22:08:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-palermo-chico-51246672.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-palermo-chico-51246672.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Arroyo al 800',
 'dormitorios': '3',
 'expensas': ' 180.000',
 'm2_cub': '160',
 'm2_total': '167',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler - Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-palermo-chico-51246672.html'}
2023-03-27 22:08:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-nuevo-51330006.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-nuevo-51330006.html>
{'ambientes': '4',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Av. Libertador 3800 Palermo Nuevo',
 'dormitorios': '3',
 'expensas': ' 180.000',
 'm2_cub': '235',
 'm2_total': '262',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Nuevo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-nuevo-51330006.html'}
2023-03-27 22:08:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-palermo-las-canitas-51268099.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-palermo-las-canitas-51268099.html>
{'ambientes': '2',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Dorrego 2700',
 'dormitorios': '1',
 'expensas': ' 14.500',
 'm2_cub': '31',
 'm2_total': '42',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler - Palermo, Las Cañitas',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-palermo-las-canitas-51268099.html'}
2023-03-27 22:08:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-categoria-frente-alto-luminoso-coch-51296494.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-categoria-frente-alto-luminoso-coch-51296494.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Guido 1800',
 'dormitorios': '3',
 'expensas': ' 116.000',
 'm2_cub': '130',
 'm2_total': '148',
 'moneda': '$',
 'title': 'Alquiler Depto Categoría Frente Alto Luminoso Coch',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-categoria-frente-alto-luminoso-coch-51296494.html'}
2023-03-27 22:08:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/duplex-vista-al-rio-y-terrazas-propias-51368654.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/duplex-vista-al-rio-y-terrazas-propias-51368654.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Avenida Libertador 3500 Piso 14',
 'dormitorios': '4',
 'expensas': ' 95.000',
 'm2_cub': '190',
 'm2_total': '220',
 'moneda': 'USD',
 'title': 'Duplex Vista Al Rio y Terrazas Propias',
 'url': 'https://www.zonaprop.com.ar/propiedades/duplex-vista-al-rio-y-terrazas-propias-51368654.html'}
2023-03-27 22:08:27 [scrapy.extensions.logstats] INFO: Crawled 81 pages (at 16 pages/min), scraped 75 items (at 15 items/min)
2023-03-27 22:08:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-colegiales-51264310.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-colegiales-51264310.html>
{'ambientes': '2',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Av. Alvarez Thomas 900',
 'dormitorios': '1',
 'expensas': ' 33.800',
 'm2_cub': '98',
 'm2_total': '98',
 'moneda': '$',
 'title': 'Departamento en Alquiler Ubicado en Colegiales, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-colegiales-51264310.html'}
2023-03-27 22:08:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-en-nunez-terraza-y-parrilla-51290271.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-en-nunez-terraza-y-parrilla-51290271.html>
{'ambientes': '4',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Vuelta de Obligado al 2900 - Terraza y Parrilla Propia',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '110',
 'm2_total': '175',
 'moneda': 'USD',
 'title': 'Alquiler 4 Ambientes en Nuñez - Terraza y Parrilla Propia',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-en-nunez-terraza-y-parrilla-51290271.html'}
2023-03-27 22:08:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51258182.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51258182.html>
{'ambientes': '3',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Donado 1755',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '62',
 'm2_total': '62',
 'moneda': 'USD',
 'title': 'Tres Ambientes a Estrenar en Corredor Donado Holmberg',
 'url': 'https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51258182.html'}
2023-03-27 22:08:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-barrio-norte-capital-51312196.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-barrio-norte-capital-51312196.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Charcas 2500',
 'dormitorios': '3',
 'expensas': ' 12.000',
 'm2_cub': '51',
 'm2_total': '51',
 'moneda': '$',
 'title': 'Departamento en Alquiler en Barrio Norte, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-barrio-norte-capital-51312196.html'}
2023-03-27 22:08:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/parera-y-av-quintana-51294363.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/parera-y-av-quintana-51294363.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Parera al 100',
 'dormitorios': '2',
 'expensas': ' 55.000',
 'm2_cub': '84',
 'm2_total': '88',
 'moneda': 'USD',
 'title': 'Parera y Av Quintana',
 'url': 'https://www.zonaprop.com.ar/propiedades/parera-y-av-quintana-51294363.html'}
2023-03-27 22:08:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-ayacucho-1900-51292749.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-ayacucho-1900-51292749.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Ayacucho al 1900',
 'dormitorios': '4',
 'expensas': ' 150.000',
 'm2_cub': '273',
 'm2_total': '287',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta Ayacucho 1900',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-ayacucho-1900-51292749.html'}
2023-03-27 22:08:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-7.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:08:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-completo-de-estilo-frances.-el-mejor-de-retiro!-51303834.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-completo-de-estilo-frances.-el-mejor-de-retiro!-51303834.html>
{'ambientes': '5',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Arroyo 800',
 'dormitorios': '3',
 'expensas': ' 35.000',
 'm2_cub': '172',
 'm2_total': '174',
 'moneda': 'USD',
 'title': 'Piso Completo de Estilo Francés. El Mejor de Retiro!',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-completo-de-estilo-frances.-el-mejor-de-retiro!-51303834.html'}
2023-03-27 22:08:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-2-amb.-palermo-hollywood-51235012.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:08:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-2-amb.-palermo-hollywood-51235012.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Dorrego 2245',
 'dormitorios': '1',
 'expensas': ' 18.000',
 'm2_cub': '54',
 'm2_total': '54',
 'moneda': 'USD',
 'title': 'Alquiler Temporario 2 Amb. Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-2-amb.-palermo-hollywood-51235012.html'}
2023-03-27 22:09:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler.-av-figueroa-alcorta-y-tagle.-piso-sup.-238-51352261.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler.-av-figueroa-alcorta-y-tagle.-piso-sup.-238-51352261.html>
{'ambientes': '5',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Figueroa Alcorta al 3000',
 'dormitorios': '4',
 'expensas': ' 157.000',
 'm2_cub': '238',
 'm2_total': '238',
 'moneda': 'USD',
 'title': 'Alquiler. Av Figueroa Alcorta y Tagle. Piso Sup. 238 m². Cochera. '
          'Seg. 24 Hs.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler.-av-figueroa-alcorta-y-tagle.-piso-sup.-238-51352261.html'}
2023-03-27 22:09:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/chateau-libertador-piso-muy-alto-3-dorm.-en-suite-2-51286300.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/chateau-libertador-piso-muy-alto-3-dorm.-en-suite-2-51286300.html>
{'ambientes': '4',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Av. del Libertador al 7000',
 'dormitorios': '3',
 'expensas': ' 335.000',
 'm2_cub': '281',
 'm2_total': '281',
 'moneda': 'USD',
 'title': 'Chateau Libertador Piso Muy Alto 3 Dorm. en Suite 2 Cocheras Fijas '
          'Full Amenities Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/chateau-libertador-piso-muy-alto-3-dorm.-en-suite-2-51286300.html'}
2023-03-27 22:09:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-en-alquiler-en-belgrano.-51146114.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-en-alquiler-en-belgrano.-51146114.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Vidal al 1600 Piso 3º',
 'dormitorios': '1',
 'expensas': ' 16.103',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento de 2 Ambientes en Alquiler en Belgrano.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-en-alquiler-en-belgrano.-51146114.html'}
2023-03-27 22:09:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/chateau-libertador-unico-en-su-estilo.-3-suites-dep.-51200933.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/chateau-libertador-unico-en-su-estilo.-3-suites-dep.-51200933.html>
{'ambientes': '4',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Av. Libertador 7000',
 'dormitorios': '3',
 'expensas': ' 80.000',
 'm2_cub': '284',
 'm2_total': '294',
 'moneda': 'USD',
 'title': 'Chateau Libertador, Único en Su Estilo. 3 Suites Dep. y 2 Coch. '
          'Hotel',
 'url': 'https://www.zonaprop.com.ar/propiedades/chateau-libertador-unico-en-su-estilo.-3-suites-dep.-51200933.html'}
2023-03-27 22:09:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impecable-piso-en-recoleta-en-alquiler!-2-dorm.-mas-51235540.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impecable-piso-en-recoleta-en-alquiler!-2-dorm.-mas-51235540.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Ayacucho al 1000',
 'dormitorios': '2',
 'expensas': ' 23.000',
 'm2_cub': '93',
 'm2_total': '100',
 'moneda': '$',
 'title': 'Impecable Piso en Recoleta en Alquiler! 2 Dorm. Mas Escritorio',
 'url': 'https://www.zonaprop.com.ar/propiedades/impecable-piso-en-recoleta-en-alquiler!-2-dorm.-mas-51235540.html'}
2023-03-27 22:09:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-belgrano-olleros-ideal-uso-comercial-51321199.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-belgrano-olleros-ideal-uso-comercial-51321199.html>
{'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Olleros al 2000',
 'expensas': 0,
 'm2_cub': '805',
 'm2_total': '805',
 'moneda': 'USD',
 'title': 'Casa - Belgrano - Olleros - Ideal Uso Comercial - Embajadas - '
          'Diplomáticos - 805 m',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-belgrano-olleros-ideal-uso-comercial-51321199.html'}
2023-03-27 22:09:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-palermo-chico-4-amb-amoblado-con-2-cocheras-y-51150235.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-palermo-chico-4-amb-amoblado-con-2-cocheras-y-51150235.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Ugarteche 3100',
 'dormitorios': '3',
 'expensas': ' 214.000',
 'm2_cub': '190',
 'm2_total': '190',
 'moneda': 'USD',
 'title': 'Alquiler Palermo Chico/4 Amb Amoblado con 2 Cocheras y Piscina',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-palermo-chico-4-amb-amoblado-con-2-cocheras-y-51150235.html'}
2023-03-27 22:09:27 [scrapy.extensions.logstats] INFO: Crawled 97 pages (at 16 pages/min), scraped 90 items (at 15 items/min)
2023-03-27 22:09:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/penthouse-con-terraza-privada-en-alquiler-harbour-51183853.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/penthouse-con-terraza-privada-en-alquiler-harbour-51183853.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Lola Mora al 400',
 'dormitorios': '2',
 'expensas': ' 124.000',
 'm2_cub': '90',
 'm2_total': '235',
 'moneda': 'USD',
 'title': 'Penthouse con Terraza Privada en Alquiler - Harbour Residences',
 'url': 'https://www.zonaprop.com.ar/propiedades/penthouse-con-terraza-privada-en-alquiler-harbour-51183853.html'}
2023-03-27 22:09:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2amb-aaa-en-av-del-libertador-51372129.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2amb-aaa-en-av-del-libertador-51372129.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Libertador al 7700',
 'dormitorios': '1',
 'expensas': ' 50.000',
 'm2_total': '88',
 'moneda': 'USD',
 'title': '2amb Aaa en Av del Libertador',
 'url': 'https://www.zonaprop.com.ar/propiedades/2amb-aaa-en-av-del-libertador-51372129.html'}
2023-03-27 22:09:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-3-amb-sobre-av-libertador-51366596.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-3-amb-sobre-av-libertador-51366596.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Libertador al 4800',
 'dormitorios': '2',
 'expensas': ' 48.000',
 'm2_cub': '83',
 'm2_total': '83',
 'moneda': '$',
 'title': 'Hermoso 3 Amb Sobre Av Libertador',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-3-amb-sobre-av-libertador-51366596.html'}
2023-03-27 22:09:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51267102.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51267102.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Quintana al 400',
 'dormitorios': '3',
 'expensas': ' 87.078',
 'm2_cub': '185',
 'm2_total': '185',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51267102.html'}
2023-03-27 22:09:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-amb-con-cochera-palermo-chico-51358614.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-amb-con-cochera-palermo-chico-51358614.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Cerviño al 4700',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_total': '63',
 'moneda': 'USD',
 'title': '2 Amb con Cochera Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-amb-con-cochera-palermo-chico-51358614.html'}
2023-03-27 22:09:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-ambientes-cesar-diaz-al-4600-51362114.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-ambientes-cesar-diaz-al-4600-51362114.html>
{'ambientes': '4',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'Cesar Diaz 4600',
 'dormitorios': '3',
 'expensas': ' 5.000',
 'm2_cub': '170',
 'm2_total': '187',
 'moneda': '$',
 'title': '4 Ambientes | Cesar Diaz Al 4600',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-ambientes-cesar-diaz-al-4600-51362114.html'}
2023-03-27 22:09:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-palermo-hollywood-51259456.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-palermo-hollywood-51259456.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Angel Justiniano Carranza 2300',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '60',
 'm2_total': '63',
 'moneda': 'USD',
 'title': 'Alquiler Departamento Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-palermo-hollywood-51259456.html'}
2023-03-27 22:09:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-8.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:09:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano.-2-dorm.-51383967.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:09:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano.-2-dorm.-51383967.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Avenida Cabildo al 1500',
 'dormitorios': '1',
 'expensas': ' 22.000',
 'm2_cub': '48',
 'm2_total': '48',
 'moneda': '$',
 'title': 'Departamento - Belgrano. 2 Dorm.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano.-2-dorm.-51383967.html'}
2023-03-27 22:10:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304458.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304458.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Colpayo 98 4° D',
 'dormitorios': '2',
 'expensas': ' 28.000',
 'm2_cub': '70',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304458.html'}
2023-03-27 22:10:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-colegiales-capital-51246180.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-colegiales-capital-51246180.html>
{'ambientes': '2',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Av. Alvarez Thomas 900',
 'dormitorios': '1',
 'expensas': ' 22.000',
 'm2_cub': '62',
 'm2_total': '62',
 'moneda': '$',
 'title': 'Departamento en Alquiler en Colegiales, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-colegiales-capital-51246180.html'}
2023-03-27 22:10:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/belgrano-teodoro-garcia-1900-3-ambientes-cochera-51377525.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/belgrano-teodoro-garcia-1900-3-ambientes-cochera-51377525.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Teodoro García 1900',
 'dormitorios': '2',
 'expensas': ' 70.000',
 'm2_cub': '110',
 'm2_total': '115',
 'moneda': '$',
 'title': 'Belgrano • Teodoro García 1900 • 3 Ambientes • Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/belgrano-teodoro-garcia-1900-3-ambientes-cochera-51377525.html'}
2023-03-27 22:10:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-semipiso-belgrano-4-ambientes-c-51286855.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-semipiso-belgrano-4-ambientes-c-51286855.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Olleros al 2200',
 'dormitorios': '3',
 'expensas': ' 90.000',
 'm2_cub': '170',
 'm2_total': '190',
 'moneda': 'USD',
 'title': 'Departamento - Semipiso - Belgrano - 4 Ambientes C/ Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-semipiso-belgrano-4-ambientes-c-51286855.html'}
2023-03-27 22:10:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51270598.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51270598.html>
{'ambientes': '2',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Cerviño 3636 7',
 'dormitorios': '1',
 'expensas': ' 35.000',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Departamento en Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51270598.html'}
2023-03-27 22:10:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ugarteche-3100-palermo-chico-alquiler-piso-de-51337036.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ugarteche-3100-palermo-chico-alquiler-piso-de-51337036.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Ugarteche al 3100',
 'dormitorios': '3',
 'expensas': ' 215.000',
 'm2_cub': '180',
 'm2_total': '190',
 'moneda': 'USD',
 'title': 'Ugarteche 3100 - Palermo Chico - Alquiler Piso de Categoría '
          'Amoblado',
 'url': 'https://www.zonaprop.com.ar/propiedades/ugarteche-3100-palermo-chico-alquiler-piso-de-51337036.html'}
2023-03-27 22:10:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-4-amb-c-dependencia-y-cochera-a-nuevo-51300345.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-4-amb-c-dependencia-y-cochera-a-nuevo-51300345.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Beruti al 3300',
 'dormitorios': '3',
 'expensas': ' 100.000',
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Alquiler 4 Amb C/dependencia y Cochera - a Nuevo - Palermo Zona '
          'Alto Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-4-amb-c-dependencia-y-cochera-a-nuevo-51300345.html'}
2023-03-27 22:10:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-penthouse-5-amb-c-dep.-3-coch-torre-green-51294019.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-penthouse-5-amb-c-dep.-3-coch-torre-green-51294019.html>
{'ambientes': '5',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Soldados de la Independencia al 500',
 'dormitorios': '3',
 'expensas': ' 200.000',
 'm2_cub': '300',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Alquiler Penthouse, 5 Amb C/dep. 3 Coch, Torre Green Tower, Piso '
          'Altisimo Vista Al Rio.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-penthouse-5-amb-c-dep.-3-coch-torre-green-51294019.html'}
2023-03-27 22:10:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-en-alquiler-en-palermo.-51319194.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-en-alquiler-en-palermo.-51319194.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Oro al 2600 Piso 5º',
 'expensas': ' 26.960',
 'm2_cub': '35',
 'm2_total': '41',
 'moneda': '$',
 'title': 'Amplio Monoambiente en Alquiler en Palermo.',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-en-alquiler-en-palermo.-51319194.html'}
2023-03-27 22:10:27 [scrapy.extensions.logstats] INFO: Crawled 115 pages (at 18 pages/min), scraped 107 items (at 17 items/min)
2023-03-27 22:10:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-villa-devoto-51380745.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-villa-devoto-51380745.html>
{'ambientes': '4',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Pedro Varela al 4200',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Departamento en Villa Devoto',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-villa-devoto-51380745.html'}
2023-03-27 22:10:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/belgrano-moldes-1400-casa-5-ambientes-jardin-51377529.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/belgrano-moldes-1400-casa-5-ambientes-jardin-51377529.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Moldes 1400',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '200',
 'm2_total': '260',
 'moneda': 'USD',
 'title': 'Belgrano • Moldes 1400 • Casa • 5 Ambientes • Jardín',
 'url': 'https://www.zonaprop.com.ar/propiedades/belgrano-moldes-1400-casa-5-ambientes-jardin-51377529.html'}
2023-03-27 22:10:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/en-alquiler-departamento-de-3-ambientes-en-edificio-51338890.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/en-alquiler-departamento-de-3-ambientes-en-edificio-51338890.html>
{'ambientes': '3',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Armenia al 2200',
 'dormitorios': '2',
 'expensas': ' 46.700',
 'm2_cub': '77',
 'm2_total': '97',
 'moneda': 'USD',
 'title': 'En Alquiler Departamento de 3 Ambientes en Edificio con Amenities. '
          'Palermo Soho',
 'url': 'https://www.zonaprop.com.ar/propiedades/en-alquiler-departamento-de-3-ambientes-en-edificio-51338890.html'}
2023-03-27 22:10:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palacio-bellini!-duplex-increible-con-terraza-51209534.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palacio-bellini!-duplex-increible-con-terraza-51209534.html>
{'ambientes': '2',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Republica Arabe Siria 3000',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '104',
 'm2_total': '122',
 'moneda': 'USD',
 'title': 'Palacio Bellini! Duplex Increíble con Terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/palacio-bellini!-duplex-increible-con-terraza-51209534.html'}
2023-03-27 22:10:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-de-2amb.-exte-estado!-a-cuadras-de-la-fctad-de-51262274.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-de-2amb.-exte-estado!-a-cuadras-de-la-fctad-de-51262274.html>
{'ambientes': '2',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'ESPARZA 20',
 'dormitorios': '1',
 'expensas': ' 12.700',
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Depto de 2amb. Exte Estado! a Cuadras de La Fctad de Psicologia y '
          'del Subte!',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-de-2amb.-exte-estado!-a-cuadras-de-la-fctad-de-51262274.html'}
2023-03-27 22:10:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-almagro-51280267.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-almagro-51280267.html>
{'ambientes': '4',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Estado de Israel al 4700',
 'dormitorios': '3',
 'expensas': ' 20.000',
 'm2_cub': '67',
 'm2_total': '73',
 'moneda': '$',
 'title': 'Departamento - Almagro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-almagro-51280267.html'}
2023-03-27 22:10:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-9.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:10:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-aisenson-excelente-depto-2-cocheras-piso-51183731.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:10:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-aisenson-excelente-depto-2-cocheras-piso-51183731.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Vuelta de Obligado 1700',
 'dormitorios': '3',
 'expensas': ' 80.000',
 'm2_cub': '170',
 'm2_total': '175',
 'moneda': 'USD',
 'title': 'Torre Aisenson - Excelente Depto - 2 Cocheras - Piso Alto!',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-aisenson-excelente-depto-2-cocheras-piso-51183731.html'}
2023-03-27 22:11:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-colegiales-51246143.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-colegiales-51246143.html>
{'ambientes': '2',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Av. Alvarez Thomas 900',
 'dormitorios': '1',
 'expensas': ' 21.500',
 'm2_cub': '64',
 'm2_total': '64',
 'moneda': '$',
 'title': 'Departamento en Alquiler Ubicado en Colegiales, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-ubicado-en-colegiales-51246143.html'}
2023-03-27 22:11:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-en-nunez-con-cochera!-51310623.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-en-nunez-con-cochera!-51310623.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Quesada al 2200',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '66',
 'm2_total': '70',
 'moneda': 'USD',
 'title': '3 Ambientes en Nuñez con Cochera!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-en-nunez-con-cochera!-51310623.html'}
2023-03-27 22:11:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-retiro-51264644.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-retiro-51264644.html>
{'ambientes': '7',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Arroyo al 800',
 'dormitorios': '3',
 'expensas': ' 124.000',
 'm2_cub': '268',
 'm2_total': '294',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler - Retiro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-retiro-51264644.html'}
2023-03-27 22:11:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/6-ambientes-en-dos-plantas.-vistas-a-parque-las-heras.-51353513.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/6-ambientes-en-dos-plantas.-vistas-a-parque-las-heras.-51353513.html>
{'ambientes': '6',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Av. Coronel Diaz 2400',
 'dormitorios': '5',
 'expensas': ' 180.000',
 'm2_cub': '283',
 'm2_total': '283',
 'moneda': 'USD',
 'title': '6 Ambientes en Dos Plantas. Vistas a Parque Las Heras.',
 'url': 'https://www.zonaprop.com.ar/propiedades/6-ambientes-en-dos-plantas.-vistas-a-parque-las-heras.-51353513.html'}
2023-03-27 22:11:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-3-ambientes-en-torre-oceana-51153663.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-3-ambientes-en-torre-oceana-51153663.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'AV Juana Manso al 1400',
 'dormitorios': '2',
 'expensas': ' 200.000',
 'm2_total': '160',
 'moneda': 'USD',
 'title': 'Alquiler de Departamento 3 Ambientes en Torre Oceana Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-3-ambientes-en-torre-oceana-51153663.html'}
2023-03-27 22:11:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-sin-muebles-le-parc-piso-muy-alto.-pm3003-51245174.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-sin-muebles-le-parc-piso-muy-alto.-pm3003-51245174.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor 500',
 'dormitorios': '1',
 'expensas': ' 55.000',
 'm2_cub': '76',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Alquiler Sin Muebles Le Parc, Piso Muy Alto. Pm3003',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-sin-muebles-le-parc-piso-muy-alto.-pm3003-51245174.html'}
2023-03-27 22:11:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51311333.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51311333.html>
{'ambientes': '3',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Donado 1755',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '62',
 'm2_total': '62',
 'moneda': 'USD',
 'title': 'Tres Ambientes a Estrenar en Corredor Donado Holmberg',
 'url': 'https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51311333.html'}
2023-03-27 22:11:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/-impecable-dos-y-medio-ambientes-en-duplex-reciclado-51219848.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/-impecable-dos-y-medio-ambientes-en-duplex-reciclado-51219848.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': "O'higgins al 3200",
 'dormitorios': '1',
 'expensas': ' 19.000',
 'm2_cub': '54',
 'm2_total': '54',
 'moneda': 'USD',
 'title': '¡Impecable Dos y Medio Ambientes en Dúplex Reciclado - Alquiler '
          'Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/-impecable-dos-y-medio-ambientes-en-duplex-reciclado-51219848.html'}
2023-03-27 22:11:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/arroyo-y-juncal-51376904.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/arroyo-y-juncal-51376904.html>
{'ambientes': '7',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Arroyo al 800',
 'dormitorios': '3',
 'expensas': ' 123.726',
 'm2_cub': '268',
 'm2_total': '291',
 'moneda': 'USD',
 'title': 'Arroyo y Juncal',
 'url': 'https://www.zonaprop.com.ar/propiedades/arroyo-y-juncal-51376904.html'}
2023-03-27 22:11:27 [scrapy.extensions.logstats] INFO: Crawled 132 pages (at 17 pages/min), scraped 123 items (at 16 items/min)
2023-03-27 22:11:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-vista.-se-entrega-amoblado-contrato-temporal-51230644.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-vista.-se-entrega-amoblado-contrato-temporal-51230644.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Ruggieri al 2700',
 'dormitorios': '1',
 'expensas': ' 27.000',
 'm2_cub': '35',
 'm2_total': '46',
 'moneda': 'USD',
 'title': 'Excelente Vista. Se Entrega Amoblado Contrato Temporal No Menor a 6 '
          'Meses',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-vista.-se-entrega-amoblado-contrato-temporal-51230644.html'}
2023-03-27 22:11:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/edificio-4-plantas-2-terrazas-jardin-unico-alq-51177131.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/edificio-4-plantas-2-terrazas-jardin-unico-alq-51177131.html>
{'ambientes': '8',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Riobamba 900',
 'dormitorios': '8',
 'expensas': 0,
 'm2_cub': '811',
 'm2_total': '1189',
 'moneda': 'USD',
 'title': 'Edificio 4 Plantas + 2 Terrazas + Jardin Unico Alq',
 'url': 'https://www.zonaprop.com.ar/propiedades/edificio-4-plantas-2-terrazas-jardin-unico-alq-51177131.html'}
2023-03-27 22:11:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-4-ambientes-al-frente-almagro-51262148.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-4-ambientes-al-frente-almagro-51262148.html>
{'ambientes': '4',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Venezuela al 4100',
 'dormitorios': '3',
 'expensas': ' 35.000',
 'm2_cub': '65',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Departamento de 4 Ambientes Al Frente - Almagro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-4-ambientes-al-frente-almagro-51262148.html'}
2023-03-27 22:11:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-3-dorm.-en-alquiler-en-caballito.-51356666.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-3-dorm.-en-alquiler-en-caballito.-51356666.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Rivadavia al 5500',
 'dormitorios': '3',
 'expensas': ' 24.000',
 'm2_total': '72',
 'moneda': '$',
 'title': 'Departamento de 3 Dorm. en Alquiler en Caballito.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-3-dorm.-en-alquiler-en-caballito.-51356666.html'}
2023-03-27 22:11:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51273390.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51273390.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Av. Pueyrredón al 2200',
 'dormitorios': '3',
 'expensas': ' 60.000',
 'm2_cub': '115',
 'm2_total': '123',
 'moneda': '$',
 'title': 'Departamento - Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51273390.html'}
2023-03-27 22:11:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-agote-2400-51292754.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-agote-2400-51292754.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Agote al 2400',
 'dormitorios': '2',
 'expensas': ' 23.000',
 'm2_cub': '7',
 'm2_total': '63',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta Agote 2400',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-agote-2400-51292754.html'}
2023-03-27 22:11:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-10.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-le-parc-piso-alto-precio-paquete-51277559.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-le-parc-piso-alto-precio-paquete-51277559.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor 500',
 'dormitorios': '2',
 'expensas': ' 10',
 'm2_cub': '124',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Alquiler Amoblado Le Parc, Piso Alto, Precio Paquete',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-le-parc-piso-alto-precio-paquete-51277559.html'}
2023-03-27 22:11:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-le-parc-amoblado-y-equipado-cochera-y-51261872.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-le-parc-amoblado-y-equipado-cochera-y-51261872.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor 500',
 'dormitorios': '1',
 'expensas': ' 10',
 'm2_cub': '76',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Alquiler Le Parc Amoblado y Equipado, Cochera y Baulera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-le-parc-amoblado-y-equipado-cochera-y-51261872.html'}
2023-03-27 22:11:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-con-dormitorio-en-suite-sin-amoblar-51384700.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:11:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:11:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-con-dormitorio-en-suite-sin-amoblar-51384700.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Teodoro Garcia 1939',
 'dormitorios': '2',
 'expensas': ' 68.000',
 'm2_cub': '100',
 'm2_total': '106',
 'moneda': '$',
 'title': '3 Ambientes con Dormitorio en Suite - Sin Amoblar',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-con-dormitorio-en-suite-sin-amoblar-51384700.html'}
2023-03-27 22:12:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/las-canitas-alquiler-4-ambientes-muy-lindos!-51376280.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/las-canitas-alquiler-4-ambientes-muy-lindos!-51376280.html>
{'ambientes': '4',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Teodoro Garcia al 1700',
 'dormitorios': '3',
 'expensas': ' 21.000',
 'm2_cub': '80',
 'm2_total': '84',
 'moneda': '$',
 'title': 'Las Cañitas Alquiler 4 Ambientes Muy Lindos!',
 'url': 'https://www.zonaprop.com.ar/propiedades/las-canitas-alquiler-4-ambientes-muy-lindos!-51376280.html'}
2023-03-27 22:12:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-sin-muebles-piso-alto-vista-al-rio-le-51203968.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-sin-muebles-piso-alto-vista-al-rio-le-51203968.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor 500',
 'dormitorios': '2',
 'expensas': ' 89.000',
 'm2_cub': '124',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Alquiler Sin Muebles, Piso Alto, Vista Al Río, Le Parc. Pm3020',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-sin-muebles-piso-alto-vista-al-rio-le-51203968.html'}
2023-03-27 22:12:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler.-tres-amplios-ambientes.-51320290.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler.-tres-amplios-ambientes.-51320290.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Quesada 3000',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '57',
 'm2_total': '74',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler. tres Amplios Ambientes. Cochera '
          'Impecable. nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler.-tres-amplios-ambientes.-51320290.html'}
2023-03-27 22:12:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/austria-2660-piso-14-51289291.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/austria-2660-piso-14-51289291.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Austria al 2600',
 'dormitorios': '3',
 'expensas': ' 167.000',
 'm2_cub': '198',
 'm2_total': '206',
 'moneda': 'USD',
 'title': 'Austria 2660 Piso 14',
 'url': 'https://www.zonaprop.com.ar/propiedades/austria-2660-piso-14-51289291.html'}
2023-03-27 22:12:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51311302.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51311302.html>
{'ambientes': '2',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Donado 1755',
 'dormitorios': '1',
 'expensas': ' 10.000',
 'm2_cub': '62',
 'm2_total': '62',
 'moneda': 'USD',
 'title': 'Tres Ambientes a Estrenar en Corredor Donado Holmberg',
 'url': 'https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51311302.html'}
2023-03-27 22:12:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/sargento-cabral-800-51202029.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/sargento-cabral-800-51202029.html>
{'ambientes': '6',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Sargento Cabral al 800',
 'dormitorios': '3',
 'expensas': ' 55.312',
 'm2_cub': '179',
 'm2_total': '184',
 'moneda': 'USD',
 'title': 'Sargento Cabral 800',
 'url': 'https://www.zonaprop.com.ar/propiedades/sargento-cabral-800-51202029.html'}
2023-03-27 22:12:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/rebajado-oportunidad-recoleta-51300168.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/rebajado-oportunidad-recoleta-51300168.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Las Heras al 1800',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '107',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Rebajado Oportunidad - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/rebajado-oportunidad-recoleta-51300168.html'}
2023-03-27 22:12:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51173900.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51173900.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Figueroa Alcorta al 3000',
 'dormitorios': '3',
 'expensas': ' 232.264',
 'm2_cub': '296',
 'm2_total': '338',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51173900.html'}
2023-03-27 22:12:27 [scrapy.extensions.logstats] INFO: Crawled 150 pages (at 18 pages/min), scraped 140 items (at 17 items/min)
2023-03-27 22:12:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/oficina-en-excelente-ubicacion-moderna-y-elegante-51311236.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/oficina-en-excelente-ubicacion-moderna-y-elegante-51311236.html>
{'ambientes': '2',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Junin al 873',
 'expensas': ' 32.000',
 'm2_cub': '59',
 'm2_total': '59',
 'moneda': '$',
 'title': 'Oficina - en Excelente Ubicación, Moderna y Elegante',
 'url': 'https://www.zonaprop.com.ar/propiedades/oficina-en-excelente-ubicacion-moderna-y-elegante-51311236.html'}
2023-03-27 22:12:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51270003.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51270003.html>
{'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Cavia al 3000',
 'dormitorios': '2',
 'expensas': ' 61.000',
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51270003.html'}
2023-03-27 22:12:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-11.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palermo-3-dorm.-51148046.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palermo-3-dorm.-51148046.html>
{'ambientes': '4',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Billinghurst 2.500',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '173',
 'm2_total': '199',
 'moneda': 'USD',
 'title': 'Palermo - 3 Dorm..',
 'url': 'https://www.zonaprop.com.ar/propiedades/palermo-3-dorm.-51148046.html'}
2023-03-27 22:12:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-en-recoleta-51312309.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-en-recoleta-51312309.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Larrea 1000',
 'expensas': 0,
 'moneda': '$',
 'title': 'Alquiler Monoambiente en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-en-recoleta-51312309.html'}
2023-03-27 22:12:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-de-2-ambientes-en-alto-palermo-con-balcon-51181349.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-de-2-ambientes-en-alto-palermo-con-balcon-51181349.html>
{'ambientes': '2',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'guemes 3892',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Depto de 2 Ambientes en Alto Palermo con Balcón Terraza (Güemes)',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-de-2-ambientes-en-alto-palermo-con-balcon-51181349.html'}
2023-03-27 22:12:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lujoso-departamento-4-ambientes-dep-servicio-51244383.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lujoso-departamento-4-ambientes-dep-servicio-51244383.html>
{'ambientes': '5',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Victoria Ocampo 305',
 'dormitorios': '4',
 'expensas': ' 1',
 'm2_cub': '163',
 'm2_total': '193',
 'moneda': 'USD',
 'title': 'Lujoso Departamento 4 Ambientes + Dep Servicio - Puerto Madero '
          'Terrazas del Yact',
 'url': 'https://www.zonaprop.com.ar/propiedades/lujoso-departamento-4-ambientes-dep-servicio-51244383.html'}
2023-03-27 22:12:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51347030.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51347030.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Cavia al 3000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '150',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51347030.html'}
2023-03-27 22:12:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exclusivo-dpto-live-hotel-3-ambientes-luminoso-full-51313088.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exclusivo-dpto-live-hotel-3-ambientes-luminoso-full-51313088.html>
{'ambientes': '3',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'nicaragua ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '88',
 'moneda': 'USD',
 'title': 'Exclusivo Dpto Live Hotel 3 Ambientes Luminoso Full Amenities '
          'Espectacular Vista',
 'url': 'https://www.zonaprop.com.ar/propiedades/exclusivo-dpto-live-hotel-3-ambientes-luminoso-full-51313088.html'}
2023-03-27 22:12:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/vista-panoramica.-cerca-de-av-del-libertador.-51211667.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:12:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:12:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/vista-panoramica.-cerca-de-av-del-libertador.-51211667.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'AV. Callao al 2000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '194',
 'm2_total': '202',
 'moneda': 'USD',
 'title': 'Vista Panorámica. Cerca de Av del Libertador.',
 'url': 'https://www.zonaprop.com.ar/propiedades/vista-panoramica.-cerca-de-av-del-libertador.-51211667.html'}
2023-03-27 22:13:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-duplex-terrazas-del-dique-2-ambientes-51366534.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-duplex-terrazas-del-dique-2-ambientes-51366534.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'juana manso ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '56',
 'm2_total': '62',
 'moneda': 'USD',
 'title': 'Alquiler Duplex Terrazas del Dique 2 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-duplex-terrazas-del-dique-2-ambientes-51366534.html'}
2023-03-27 22:13:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-increible-zona-de-belgrano-51316814.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-increible-zona-de-belgrano-51316814.html>
{'ambientes': '2',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': '3 de febrero 1166',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '32',
 'm2_total': '32',
 'moneda': '$',
 'title': 'Hermoso Departamento en Increíble Zona de Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-increible-zona-de-belgrano-51316814.html'}
2023-03-27 22:13:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/puerto-madero-departamento-en-alquiler-le-parc-3-51272773.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/puerto-madero-departamento-en-alquiler-le-parc-3-51272773.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor al 400',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '135',
 'm2_total': '135',
 'moneda': 'USD',
 'title': 'Puerto Madero - Departamento en Alquiler Le Parc 3 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/puerto-madero-departamento-en-alquiler-le-parc-3-51272773.html'}
2023-03-27 22:13:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-recoleta-51277384.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-recoleta-51277384.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av Callao al 1700',
 'dormitorios': '3',
 'expensas': 0,
 'm2_total': '168',
 'moneda': 'USD',
 'title': 'Departamento en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-recoleta-51277384.html'}
2023-03-27 22:13:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/arribenos-y-virrey-loreto.-51352332.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/arribenos-y-virrey-loreto.-51352332.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arribeños al 1500',
 'dormitorios': '4',
 'expensas': ' 130.000',
 'm2_cub': '240',
 'm2_total': '240',
 'moneda': 'USD',
 'title': 'Arribeños y Virrey Loreto.',
 'url': 'https://www.zonaprop.com.ar/propiedades/arribenos-y-virrey-loreto.-51352332.html'}
2023-03-27 22:13:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/virrey-del-pino-2000-3-dorm-suite-con-dep-2-banos-comp-51286308.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/virrey-del-pino-2000-3-dorm-suite-con-dep-2-banos-comp-51286308.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey del Pino al 2000',
 'dormitorios': '3',
 'expensas': ' 136.500',
 'm2_cub': '181',
 'm2_total': '181',
 'moneda': 'USD',
 'title': 'Virrey del Pino 2000 3 Dorm Suite con Dep 2 Baños Comp Toil 2 Coch '
          'Pileta Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/virrey-del-pino-2000-3-dorm-suite-con-dep-2-banos-comp-51286308.html'}
2023-03-27 22:13:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-dorm.-8-ambientes-cochera-fija-51382361.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-dorm.-8-ambientes-cochera-fija-51382361.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Juncal al 700',
 'dormitorios': '4',
 'expensas': ' 70.000',
 'm2_cub': '372',
 'm2_total': '372',
 'moneda': 'USD',
 'title': 'Departamento - 4 Dorm. - 8 Ambientes - Cochera Fija - Baulera - '
          'Reciclado - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-dorm.-8-ambientes-cochera-fija-51382361.html'}
2023-03-27 22:13:27 [scrapy.extensions.logstats] INFO: Crawled 167 pages (at 17 pages/min), scraped 156 items (at 16 items/min)
2023-03-27 22:13:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/estupendo-y-cotizado-edificio-3-amb.-cochera-51250985.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/estupendo-y-cotizado-edificio-3-amb.-cochera-51250985.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'RUGGIERI 3000',
 'dormitorios': '2',
 'expensas': ' 50.000',
 'm2_cub': '105',
 'm2_total': '115',
 'moneda': 'USD',
 'title': 'Estupendo y Cotizado Edificio 3 Amb. Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/estupendo-y-cotizado-edificio-3-amb.-cochera-51250985.html'}
2023-03-27 22:13:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-12.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/retiro-departamento-art-noveau-1-dormitorio.-51342382.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/retiro-departamento-art-noveau-1-dormitorio.-51342382.html>
{'ambientes': '2',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Maipu 919',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Retiro - Departamento Art Noveau - 1 Dormitorio.',
 'url': 'https://www.zonaprop.com.ar/propiedades/retiro-departamento-art-noveau-1-dormitorio.-51342382.html'}
2023-03-27 22:13:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-duplex-belgrano-51313554.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-duplex-belgrano-51313554.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Mendoza al 2600',
 'dormitorios': '3',
 'expensas': ' 31.000',
 'm2_cub': '160',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Departamento Duplex - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-duplex-belgrano-51313554.html'}
2023-03-27 22:13:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-palermo-2-ambientes-fray-j-51281718.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-palermo-2-ambientes-fray-j-51281718.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Fray J Sta Maria de Oro al 2600',
 'dormitorios': '1',
 'expensas': ' 22.000',
 'm2_cub': '36',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Alquiler - Temporario - Palermo - 2 Ambientes - Fray J Sta Maria de '
          'Oro 2600',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-palermo-2-ambientes-fray-j-51281718.html'}
2023-03-27 22:13:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-con-patio-en-planta-baja-en-51361770.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-con-patio-en-planta-baja-en-51361770.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Superi y Av Los Incas',
 'dormitorios': '2',
 'expensas': ' 27.000',
 'm2_total': '62',
 'moneda': '$',
 'title': 'Alquiler 3 Ambientes con Patio en Planta Baja en Superi y Av Los '
          'Incas, Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-con-patio-en-planta-baja-en-51361770.html'}
2023-03-27 22:13:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-mono-ambiente-en-excelente-zona!-51361149.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-mono-ambiente-en-excelente-zona!-51361149.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'SOLER ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '25',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Hermoso Mono Ambiente en Excelente Zona!',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-mono-ambiente-en-excelente-zona!-51361149.html'}
2023-03-27 22:13:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/complejo-casa-del-sol-51300085.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/complejo-casa-del-sol-51300085.html>
{'ambientes': '2',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Franco 3300',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '39',
 'm2_total': '41',
 'moneda': '$',
 'title': 'Complejo Casa del Sol',
 'url': 'https://www.zonaprop.com.ar/propiedades/complejo-casa-del-sol-51300085.html'}
2023-03-27 22:13:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-3-ambientes-51313864.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:13:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:13:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-3-ambientes-51313864.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 1600',
 'dormitorios': '2',
 'expensas': ' 55.000',
 'm2_cub': '78',
 'm2_total': '88',
 'moneda': 'USD',
 'title': 'Alquiler Departamento Puerto Madero 3 Ambientes Edificio Bri',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-3-ambientes-51313864.html'}
2023-03-27 22:14:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-colegiales-51339583.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-colegiales-51339583.html>
{'ambientes': '2',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Av Alvarez Thomas y Jorge Newbery',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '56',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes - Colegiales',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-colegiales-51339583.html'}
2023-03-27 22:14:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51303699.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51303699.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Gorriti al 6000 Disponible A Partir DE Marzo 2023',
 'dormitorios': '1',
 'expensas': ' 22.000',
 'm2_cub': '45',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51303699.html'}
2023-03-27 22:14:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-3-ambientes-alquiler-vista-al-dique-sin-muebles-51300406.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-3-ambientes-alquiler-vista-al-dique-sin-muebles-51300406.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Maizani al 300',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '90',
 'm2_total': '106',
 'moneda': 'USD',
 'title': 'Depto 3 Ambientes Alquiler Vista Al Dique Sin Muebles',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-3-ambientes-alquiler-vista-al-dique-sin-muebles-51300406.html'}
2023-03-27 22:14:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-amoblado-y-equipado-en-live-hotel-50879100.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-amoblado-y-equipado-en-live-hotel-50879100.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Nicaragua al 6000',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '76',
 'moneda': 'USD',
 'title': 'Alquiler 2 Ambientes Amoblado y Equipado en Live Hotel - Palermo '
          'Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-amoblado-y-equipado-en-live-hotel-50879100.html'}
2023-03-27 22:14:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-largo-plazo-lindisimo-y-moderno-depto-3-amb-51358678.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-largo-plazo-lindisimo-y-moderno-depto-3-amb-51358678.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Núñez',
 'dormitorios': '2',
 'expensas': ' 10.000',
 'm2_cub': '60',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Alquiler Largo Plazo - Lindisimo y Moderno Depto 3 Amb Zona Nuñez - '
          'Parque Saav',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-largo-plazo-lindisimo-y-moderno-depto-3-amb-51358678.html'}
2023-03-27 22:14:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tres-ambientes-en-alquiler-amenities-cochera.-51174934.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tres-ambientes-en-alquiler-amenities-cochera.-51174934.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'juana manso ',
 'dormitorios': '2',
 'expensas': ' 49.000',
 'm2_cub': '90',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Tres Ambientes en Alquiler / Amenities / Cochera. Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/tres-ambientes-en-alquiler-amenities-cochera.-51174934.html'}
2023-03-27 22:14:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-4-dorm.-recoleta-51152343.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-4-dorm.-recoleta-51152343.html>
{'ambientes': '5',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Libertador al 400',
 'dormitorios': '4',
 'expensas': ' 1',
 'm2_cub': '270',
 'm2_total': '270',
 'moneda': 'USD',
 'title': 'Espectacular Departamento de 4 Dorm. Recoleta Seguridad 24 Hs 2 '
          'Cocheras',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-4-dorm.-recoleta-51152343.html'}
2023-03-27 22:14:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-con-balcon-y-patio-51384454.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-con-balcon-y-patio-51384454.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Rodriguez Peña al 1200',
 'dormitorios': '2',
 'expensas': ' 39.000',
 'm2_cub': '123',
 'm2_total': '145',
 'moneda': 'USD',
 'title': 'Departamento de 3 Ambientes con Balcón y Patio - Dependencia - '
          'Cochera - Alquiler - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-con-balcon-y-patio-51384454.html'}
2023-03-27 22:14:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-2-ambientes-mascotas-bajas-51268264.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-2-ambientes-mascotas-bajas-51268264.html>
{'ambientes': '2',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'Fernández 305',
 'dormitorios': '1',
 'expensas': ' 8.500',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Departamento Alquiler 2 Ambientes Mascotas Bajas Expensas Frente',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-2-ambientes-mascotas-bajas-51268264.html'}
2023-03-27 22:14:27 [scrapy.extensions.logstats] INFO: Crawled 185 pages (at 18 pages/min), scraped 173 items (at 17 items/min)
2023-03-27 22:14:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-13.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/montevideo-1700-amoblado-impecable-51324624.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/montevideo-1700-amoblado-impecable-51324624.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Montevideo 1700',
 'dormitorios': '3',
 'expensas': ' 135.000',
 'm2_cub': '208',
 'm2_total': '208',
 'moneda': 'USD',
 'title': 'Montevideo 1700 - Amoblado - Impecable',
 'url': 'https://www.zonaprop.com.ar/propiedades/montevideo-1700-amoblado-impecable-51324624.html'}
2023-03-27 22:14:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-belgrano-51310153.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-belgrano-51310153.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Teodoro Garcia al 1956',
 'dormitorios': '3',
 'expensas': ' 45.000',
 'm2_cub': '135',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-belgrano-51310153.html'}
2023-03-27 22:14:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-amb-en-alquiler-palermo-soho-51143738.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-amb-en-alquiler-palermo-soho-51143738.html>
{'ambientes': '2',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Soler al 4700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Departamento 2 Amb en Alquiler - Palermo Soho',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-amb-en-alquiler-palermo-soho-51143738.html'}
2023-03-27 22:14:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51203995.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51203995.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Beruti al 3000',
 'dormitorios': '1',
 'expensas': ' 34.000',
 'm2_cub': '52',
 'm2_total': '52',
 'moneda': '$',
 'title': 'Departamento - Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51203995.html'}
2023-03-27 22:14:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exclusiva-torre-palermo-view-2-amb-luminoso-51280183.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exclusiva-torre-palermo-view-2-amb-luminoso-51280183.html>
{'ambientes': '2',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'luis maria campos ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '63',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Exclusiva Torre Palermo View 2 Amb Luminoso Espectacular Vista Exc '
          'Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/exclusiva-torre-palermo-view-2-amb-luminoso-51280183.html'}
2023-03-27 22:14:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recoleta-deco-guido-y-junin-51326090.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recoleta-deco-guido-y-junin-51326090.html>
{'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Guido y Junin',
 'expensas': ' 26.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Recoleta Decó - Guido y Junin',
 'url': 'https://www.zonaprop.com.ar/propiedades/recoleta-deco-guido-y-junin-51326090.html'}
2023-03-27 22:14:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-belgrano-capital-51312156.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:14:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:14:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-belgrano-capital-51312156.html>
{'ambientes': '6',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey Loreto 1900',
 'dormitorios': '5',
 'expensas': 0,
 'm2_cub': '320',
 'm2_total': '320',
 'moneda': 'USD',
 'title': 'Departamento Piso en Alquiler en Belgrano, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-belgrano-capital-51312156.html'}
2023-03-27 22:15:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-amb.-78-m-sup2--hidalgo-al-400-cfte-apto-51192036.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-amb.-78-m-sup2--hidalgo-al-400-cfte-apto-51192036.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'HIDALGO 400',
 'dormitorios': '2',
 'expensas': ' 31.500',
 'm2_cub': '73',
 'm2_total': '78',
 'moneda': '$',
 'title': '3 Amb. 78 m² - Hidalgo Al 400 - Cfte - Apto Profesional',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-amb.-78-m-sup2--hidalgo-al-400-cfte-apto-51192036.html'}
2023-03-27 22:15:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51294154.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51294154.html>
{'ambientes': '1',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Distrito Quartier.',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '47',
 'moneda': 'USD',
 'title': 'Distrito Quartier - Excelente Loft en Alquiler Temporario.',
 'url': 'https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51294154.html'}
2023-03-27 22:15:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-nunez-51135814.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-nunez-51135814.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Deheza al 1600 Jardines DEL Libertador',
 'dormitorios': '2',
 'expensas': ' 42.000',
 'm2_cub': '62',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Departamento - Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-nunez-51135814.html'}
2023-03-27 22:15:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/edificio-frances-ambientes-muy-grandes-se-alquila-51278440.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/edificio-frances-ambientes-muy-grandes-se-alquila-51278440.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'GELLY Y OBES ESQUINA LAS HERAS',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '166',
 'm2_total': '167',
 'moneda': 'USD',
 'title': 'Edificio Frances - Ambientes Muy Grandes - Se Alquila con Muebles',
 'url': 'https://www.zonaprop.com.ar/propiedades/edificio-frances-ambientes-muy-grandes-se-alquila-51278440.html'}
2023-03-27 22:15:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2amb.-en-torre-lumiere-belgrano-amoblado-y-equipado-51384510.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2amb.-en-torre-lumiere-belgrano-amoblado-y-equipado-51384510.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Monroe ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': '2amb. en Torre Lumiere Belgrano - Amoblado y Equipado - Piso Alto!',
 'url': 'https://www.zonaprop.com.ar/propiedades/2amb.-en-torre-lumiere-belgrano-amoblado-y-equipado-51384510.html'}
2023-03-27 22:15:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-amb.-sin-muebles-zencity-puerto-madero-51299467.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-amb.-sin-muebles-zencity-puerto-madero-51299467.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Lola Mora al 400',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '75',
 'm2_total': '75',
 'moneda': 'USD',
 'title': 'Alquiler 2 Amb. Sin Muebles - Zencity - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-amb.-sin-muebles-zencity-puerto-madero-51299467.html'}
2023-03-27 22:15:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51206379.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51206379.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Art María Camila O Gorman al 300',
 'dormitorios': '2',
 'expensas': ' 90.000',
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51206379.html'}
2023-03-27 22:15:27 [scrapy.extensions.logstats] INFO: Crawled 200 pages (at 15 pages/min), scraped 187 items (at 14 items/min)
2023-03-27 22:15:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impecable-departamento-en-el-corazon-de-recoleta!-51315918.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impecable-departamento-en-el-corazon-de-recoleta!-51315918.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'AVENIDA QUINTANA 300',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '137',
 'm2_total': '144',
 'moneda': 'USD',
 'title': 'Impecable Departamento en El Corazón de Recoleta! Amplia Vista a '
          'Verde.',
 'url': 'https://www.zonaprop.com.ar/propiedades/impecable-departamento-en-el-corazon-de-recoleta!-51315918.html'}
2023-03-27 22:15:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-con-cochera-en-puerto-madero-51379324.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-con-cochera-en-puerto-madero-51379324.html>
{'ambientes': '1',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Vera Peñaloza al 500',
 'expensas': ' 25.700',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente con Cochera en Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-con-cochera-en-puerto-madero-51379324.html'}
2023-03-27 22:15:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-14.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-piso-en-venta-en-puerto-madero-capital-51202342.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-piso-en-venta-en-puerto-madero-capital-51202342.html>
{'ambientes': '5',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Julieta Lanteri 1000',
 'dormitorios': '4',
 'expensas': 0,
 'm2_total': '274',
 'moneda': 'USD',
 'title': 'Departamento Piso en Venta en Puerto Madero, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-piso-en-venta-en-puerto-madero-capital-51202342.html'}
2023-03-27 22:15:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-amb-c-coch-1-suite-quartier-boulevard-full-amenities-51323236.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-amb-c-coch-1-suite-quartier-boulevard-full-amenities-51323236.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Juan b justo ',
 'dormitorios': '1',
 'expensas': ' 80.000',
 'm2_cub': '78',
 'm2_total': '82',
 'moneda': 'USD',
 'title': '2 Amb C/coch 1 Suite Quartier Boulevard Full Amenities Posib de 1 '
          'Dormitorio Mas',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-amb-c-coch-1-suite-quartier-boulevard-full-amenities-51323236.html'}
2023-03-27 22:15:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-piso-en-belgrano-en-alquiler-muy-luminoso-c-51272231.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-piso-en-belgrano-en-alquiler-muy-luminoso-c-51272231.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arribeños al 1500',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '200',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Hermoso Piso en Belgrano en Alquiler - Muy Luminoso C/ Piscina - '
          'Gym - Sum',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-piso-en-belgrano-en-alquiler-muy-luminoso-c-51272231.html'}
2023-03-27 22:15:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto.-2-amb.-con-balcon-al-frente.-51315055.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto.-2-amb.-con-balcon-al-frente.-51315055.html>
{'ambientes': '2',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Av. Fco. Beiró 4289',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '45',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Alquiler Depto. 2 Amb. con Balcón Al Frente.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto.-2-amb.-con-balcon-al-frente.-51315055.html'}
2023-03-27 22:15:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente.-departamento-4-ambientes.-de-categoria.-51369107.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:15:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:15:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente.-departamento-4-ambientes.-de-categoria.-51369107.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '11 de Septiembre 1136',
 'dormitorios': '3',
 'expensas': ' 50.000',
 'm2_cub': '185',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Excelente. Departamento 4 Ambientes. de Categoría. Zona Residencial',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente.-departamento-4-ambientes.-de-categoria.-51369107.html'}
2023-03-27 22:16:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermosa-casa-multifamiliar-en-venta-villa-devoto-51282062.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermosa-casa-multifamiliar-en-venta-villa-devoto-51282062.html>
{'ambientes': '8',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Asunción 3648',
 'dormitorios': '6',
 'expensas': 0,
 'm2_cub': '298',
 'm2_total': '400',
 'moneda': 'USD',
 'title': 'Hermosa Casa Multifamiliar en Venta Villa Devoto',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermosa-casa-multifamiliar-en-venta-villa-devoto-51282062.html'}
2023-03-27 22:16:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-vista-increible-3-dorm.-1-suite.-doble-51251926.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-vista-increible-3-dorm.-1-suite.-doble-51251926.html>
{'ambientes': '6',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Posadas al 1100',
 'dormitorios': '3',
 'expensas': ' 40.000',
 'm2_cub': '180',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Semipiso Vista Increible 3 Dorm. 1 Suite. Doble Dependencia Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-vista-increible-3-dorm.-1-suite.-doble-51251926.html'}
2023-03-27 22:16:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/increible-departamento-de-3-ambientes-en-belgrano-51316677.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/increible-departamento-de-3-ambientes-en-belgrano-51316677.html>
{'ambientes': '3',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Zapiola 1834',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Increíble Departamento de 3 Ambientes en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/increible-departamento-de-3-ambientes-en-belgrano-51316677.html'}
2023-03-27 22:16:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-con-cochera-51289204.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-con-cochera-51289204.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Marta Saloti al 400',
 'dormitorios': '1',
 'expensas': 0,
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Alquiler Departamento 2 Ambientes con Cochera - Edificio Faena '
          'Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-con-cochera-51289204.html'}
2023-03-27 22:16:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/increible-departamento-en-recoleta-de-2-ambientes-51181379.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/increible-departamento-en-recoleta-de-2-ambientes-51181379.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'French 2572',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Increíble Departamento en Recoleta de 2 Ambientes (French)',
 'url': 'https://www.zonaprop.com.ar/propiedades/increible-departamento-en-recoleta-de-2-ambientes-51181379.html'}
2023-03-27 22:16:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-con-cochera-excelente-ubicacion.-51251181.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-con-cochera-excelente-ubicacion.-51251181.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'BLANCO ENCALADA 2971. Entre Balbin ricardo av. y Avenida cramer',
 'dormitorios': '1',
 'expensas': ' 36.000',
 'm2_cub': '50',
 'm2_total': '57',
 'moneda': 'USD',
 'title': '2 Ambientes con Cochera - Excelente Ubicacion.',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-con-cochera-excelente-ubicacion.-51251181.html'}
2023-03-27 22:16:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/duplex-4-ambientes-en-alquiler-amueblado-51365097.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/duplex-4-ambientes-en-alquiler-amueblado-51365097.html>
{'ambientes': '4',
 'barrio': ', La Boca, Capital Federal',
 'direccion': 'Caboto al 400',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '187',
 'm2_total': '197',
 'moneda': 'USD',
 'title': 'Duplex 4 Ambientes en Alquiler Amueblado',
 'url': 'https://www.zonaprop.com.ar/propiedades/duplex-4-ambientes-en-alquiler-amueblado-51365097.html'}
2023-03-27 22:16:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/elegante-casa-en-belgrano-zona-embajadas-jardin-51323313.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/elegante-casa-en-belgrano-zona-embajadas-jardin-51323313.html>
{'ambientes': '6',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Teodoro Garcia al 2100',
 'dormitorios': '5',
 'expensas': 0,
 'm2_cub': '400',
 'm2_total': '650',
 'moneda': 'USD',
 'title': 'Elegante Casa en Belgrano, Zona Embajadas, Jardin, Piscina Propia, '
          'Parrila Divina!',
 'url': 'https://www.zonaprop.com.ar/propiedades/elegante-casa-en-belgrano-zona-embajadas-jardin-51323313.html'}
2023-03-27 22:16:27 [scrapy.extensions.logstats] INFO: Crawled 216 pages (at 16 pages/min), scraped 202 items (at 15 items/min)
2023-03-27 22:16:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51310629.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51310629.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Berutti al 3000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '125',
 'm2_total': '144',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51310629.html'}
2023-03-27 22:16:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-recoleta-capital-federal-51240634.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-recoleta-capital-federal-51240634.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'PARANA 1200',
 'dormitorios': '3',
 'expensas': ' 87.000',
 'm2_cub': '154',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Departamento 3 Dor. C/dep - Recoleta, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-recoleta-capital-federal-51240634.html'}
2023-03-27 22:16:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-alquiler-con-cochera-zencity-puerto-madero-51300384.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-alquiler-con-cochera-zencity-puerto-madero-51300384.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Lola Mora 420',
 'dormitorios': '1',
 'expensas': ' 40.000',
 'm2_cub': '65',
 'm2_total': '70',
 'moneda': 'USD',
 'title': '2 Ambientes Alquiler con Cochera Zencity Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-alquiler-con-cochera-zencity-puerto-madero-51300384.html'}
2023-03-27 22:16:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-15.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51215869.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51215869.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Guatemala al 5600',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '67',
 'm2_total': '79',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51215869.html'}
2023-03-27 22:16:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/quartier-madero-urbano.-excelente-loft-en-alquiler-51219755.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/quartier-madero-urbano.-excelente-loft-en-alquiler-51219755.html>
{'ambientes': '1',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Quartier Madero Urbano',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '42',
 'm2_total': '47',
 'moneda': 'USD',
 'title': 'Quartier Madero Urbano. Excelente Loft en Alquiler Temporario. '
          'Puerto Madero.',
 'url': 'https://www.zonaprop.com.ar/propiedades/quartier-madero-urbano.-excelente-loft-en-alquiler-51219755.html'}
2023-03-27 22:16:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/villa-del-parque-1-ambiente-planta-baja-frente-entrada-51367455.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/villa-del-parque-1-ambiente-planta-baja-frente-entrada-51367455.html>
{'ambientes': '1',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Benito Juarez 2832',
 'dormitorios': '1',
 'expensas': ' 4.000',
 'm2_cub': '25',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Villa del Parque 1 Ambiente Planta Baja Frente Entrada '
          'Independiente Patio',
 'url': 'https://www.zonaprop.com.ar/propiedades/villa-del-parque-1-ambiente-planta-baja-frente-entrada-51367455.html'}
2023-03-27 22:16:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/super-lindo-y-comodo-departamento-en-el-centro-51318698.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:16:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:16:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/super-lindo-y-comodo-departamento-en-el-centro-51318698.html>
{'ambientes': '1',
 'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Av. Cordoba 875',
 'expensas': ' 30.000',
 'm2_cub': '19',
 'm2_total': '19',
 'moneda': '$',
 'title': 'Super Lindo y Cómodo Departamento en El Centro',
 'url': 'https://www.zonaprop.com.ar/propiedades/super-lindo-y-comodo-departamento-en-el-centro-51318698.html'}
2023-03-27 22:17:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-sin-expensas!-51338004.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-sin-expensas!-51338004.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'GALICIA 2553',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '100',
 'moneda': '$',
 'title': 'PH Sin Expensas!',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-sin-expensas!-51338004.html'}
2023-03-27 22:17:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-apto-profesional-en-excelente-ubicacion-51349137.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-apto-profesional-en-excelente-ubicacion-51349137.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Santa Fé 1496',
 'expensas': ' 15.000',
 'm2_cub': '21',
 'm2_total': '21',
 'moneda': 'USD',
 'title': 'Departamento Apto Profesional en Excelente Ubicación',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-apto-profesional-en-excelente-ubicacion-51349137.html'}
2023-03-27 22:17:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporario-de-tres-ambientes-51365051.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporario-de-tres-ambientes-51365051.html>
{'ambientes': '3',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Holmberg al 2400',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '65',
 'm2_total': '95',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporario de Tres Ambientes con Terraza '
          'Propia y Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporario-de-tres-ambientes-51365051.html'}
2023-03-27 22:17:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/estudio-apto-profesional-dueno-directo-51194457.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/estudio-apto-profesional-dueno-directo-51194457.html>
{'ambientes': '1',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Avenida Coronel Díaz ',
 'expensas': ' 40.000',
 'm2_cub': '85',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Estudio Apto Profesional Dueño Directo',
 'url': 'https://www.zonaprop.com.ar/propiedades/estudio-apto-profesional-dueno-directo-51194457.html'}
2023-03-27 22:17:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-en-nunez-51383983.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-en-nunez-51383983.html>
{'ambientes': '1',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Ciudad de la Paz al 3400',
 'expensas': ' 21.000',
 'm2_cub': '33',
 'm2_total': '37',
 'moneda': '$',
 'title': 'Departamento Monoambiente en Alquiler en Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-en-nunez-51383983.html'}
2023-03-27 22:17:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-soho-51159273.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-soho-51159273.html>
{'ambientes': '2',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Uriarte al 2300',
 'dormitorios': '1',
 'expensas': ' 26.000',
 'm2_cub': '50',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Soho',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-soho-51159273.html'}
2023-03-27 22:17:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquilo-departamento-1-ambiente-centro-opcion-51233660.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquilo-departamento-1-ambiente-centro-opcion-51233660.html>
{'ambientes': '1',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'VIAMONTE ',
 'expensas': ' 21.000',
 'm2_cub': '27',
 'm2_total': '27',
 'moneda': '$',
 'title': 'Alquilo Departamento 1 Ambiente Centro Opción Temporario con '
          'Muebles',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquilo-departamento-1-ambiente-centro-opcion-51233660.html'}
2023-03-27 22:17:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-con-cochera-51360310.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-con-cochera-51360310.html>
{'ambientes': '2',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'Mercedes al 100',
 'dormitorios': '1',
 'expensas': ' 19.500',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Alquiler - Departamento 2 Ambientes con Cochera - Floresta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-con-cochera-51360310.html'}
2023-03-27 22:17:27 [scrapy.extensions.logstats] INFO: Crawled 232 pages (at 16 pages/min), scraped 217 items (at 15 items/min)
2023-03-27 22:17:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/-propiedad-de-prueba-no-contactar-alquiler-ph-3-51320711.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/-propiedad-de-prueba-no-contactar-alquiler-ph-3-51320711.html>
{'ambientes': '3',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Zapiola al 4200',
 'dormitorios': '3',
 'expensas': ' 12.000',
 'm2_cub': '93',
 'm2_total': '100',
 'moneda': 'USD',
 'title': '(Propiedad de Prueba - No Contactar) Alquiler PH 3 Ambientes en '
          'Saavedra',
 'url': 'https://www.zonaprop.com.ar/propiedades/-propiedad-de-prueba-no-contactar-alquiler-ph-3-51320711.html'}
2023-03-27 22:17:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-premium-en-alquiler-en-belgrano!-51380795.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-premium-en-alquiler-en-belgrano!-51380795.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Monoambiente Premium en Alquiler en Belgrano!',
 'expensas': ' 20.000',
 'm2_cub': '37',
 'm2_total': '41',
 'moneda': 'USD',
 'title': 'Monoambiente Premium en Alquiler en Belgrano!',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-premium-en-alquiler-en-belgrano!-51380795.html'}
2023-03-27 22:17:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-amoblado-en-palermo-hollywood-51360238.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-amoblado-en-palermo-hollywood-51360238.html>
{'ambientes': '4',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Humboldt al 2000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '154',
 'm2_total': '162',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Amoblado en Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-amoblado-en-palermo-hollywood-51360238.html'}
2023-03-27 22:17:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/esplendido-duplex-4-ambientes-cochera-y-depenencias-51388642.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/esplendido-duplex-4-ambientes-cochera-y-depenencias-51388642.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'JUAN FRANCISCO SEGUI ',
 'dormitorios': '3',
 'expensas': ' 110.000',
 'm2_cub': '192',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Esplendido Duplex 4 Ambientes Cochera y Depenencias',
 'url': 'https://www.zonaprop.com.ar/propiedades/esplendido-duplex-4-ambientes-cochera-y-depenencias-51388642.html'}
2023-03-27 22:17:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-16.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-3-amb-tempo-hasta-un-ano.-51299498.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-3-amb-tempo-hasta-un-ano.-51299498.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Demaria al 4500',
 'dormitorios': '2',
 'expensas': 0,
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento - Palermo 3 Amb Tempo Hasta un Año.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-3-amb-tempo-hasta-un-ano.-51299498.html'}
2023-03-27 22:17:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/paternal-3-ambientes-balcon-frente-super-luminoso!-51366852.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/paternal-3-ambientes-balcon-frente-super-luminoso!-51366852.html>
{'ambientes': '3',
 'barrio': ', La Paternal, Capital Federal',
 'direccion': 'Caracas al 1700',
 'dormitorios': '2',
 'expensas': ' 19.000',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Paternal 3 Ambientes Balcon Frente Super Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/paternal-3-ambientes-balcon-frente-super-luminoso!-51366852.html'}
2023-03-27 22:17:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51205560.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:17:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:17:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51205560.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Julieta Lantieri 1241, Torres El Faro',
 'dormitorios': '3',
 'expensas': ' 190.000',
 'm2_total': '230',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51205560.html'}
2023-03-27 22:18:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-recoleta-51273255.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-recoleta-51273255.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Libertad al 1600',
 'dormitorios': '2',
 'expensas': ' 68.000',
 'm2_cub': '100',
 'm2_total': '108',
 'moneda': '$',
 'title': 'Alquiler Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-recoleta-51273255.html'}
2023-03-27 22:18:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/penthouse-en-alquiler-piscina-y-terraza-propia-51136755.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/penthouse-en-alquiler-piscina-y-terraza-propia-51136755.html>
{'ambientes': '6',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Lola Mora al 400',
 'dormitorios': '5',
 'expensas': 0,
 'm2_cub': '450',
 'm2_total': '950',
 'moneda': 'USD',
 'title': 'Penthouse en Alquiler Piscina y Terraza Propia - Harbour Residences',
 'url': 'https://www.zonaprop.com.ar/propiedades/penthouse-en-alquiler-piscina-y-terraza-propia-51136755.html'}
2023-03-27 22:18:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-ambientes-con-dependencia-en-alquiler-terrazas-del-51205703.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-ambientes-con-dependencia-en-alquiler-terrazas-del-51205703.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Trinidad Guevara al 300',
 'dormitorios': '3',
 'expensas': ' 35.000',
 'm2_cub': '164',
 'm2_total': '193',
 'moneda': 'USD',
 'title': '4 Ambientes con Dependencia en Alquiler Terrazas del Yacht, Puerto '
          'Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-ambientes-con-dependencia-en-alquiler-terrazas-del-51205703.html'}
2023-03-27 22:18:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/fenomenal-4amb-a-nuevo-y-equipado-calidad-51209458.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/fenomenal-4amb-a-nuevo-y-equipado-calidad-51209458.html>
{'ambientes': '4',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Posadas 1100',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '130',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Fenomenal 4amb a Nuevo y Equipado - Calidad',
 'url': 'https://www.zonaprop.com.ar/propiedades/fenomenal-4amb-a-nuevo-y-equipado-calidad-51209458.html'}
2023-03-27 22:18:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-semipiso-de-4-ambientes-c-dep-cochera-y-51256575.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-semipiso-de-4-ambientes-c-dep-cochera-y-51256575.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Luis Maria Campos al 1400',
 'dormitorios': '3',
 'expensas': ' 80.000',
 'm2_cub': '138',
 'm2_total': '155',
 'moneda': 'USD',
 'title': 'Excelente Semipiso de 4 Ambientes C/dep, Cochera y Amenities.',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-semipiso-de-4-ambientes-c-dep-cochera-y-51256575.html'}
2023-03-27 22:18:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-4-ambientes-en-alquiler-con-cochera-en-51369872.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-4-ambientes-en-alquiler-con-cochera-en-51369872.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Godoy Cruz al 3000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '145',
 'm2_total': '145',
 'moneda': 'USD',
 'title': 'Excelente 4 Ambientes en Alquiler con Cochera en Quartier Demaria - '
          'Palermo Chico.',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-4-ambientes-en-alquiler-con-cochera-en-51369872.html'}
2023-03-27 22:18:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-en-alquiler!-a-estrenar!-51312562.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-en-alquiler!-a-estrenar!-51312562.html>
{'ambientes': '2',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Mendoza al 4200',
 'dormitorios': '1',
 'expensas': ' 33.000',
 'm2_cub': '50',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Excelente Departamento en Alquiler! a Estrenar!',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-en-alquiler!-a-estrenar!-51312562.html'}
2023-03-27 22:18:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-3-amb-con-cochera-cubierta-seguridad-24hs-51290872.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-3-amb-con-cochera-cubierta-seguridad-24hs-51290872.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Libertad 1661',
 'dormitorios': '2',
 'expensas': ' 70.000',
 'm2_cub': '75',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Depto 3 Amb con Cochera Cubierta, Seguridad 24hs, Piscina y '
          'Gimnasio. Pintado',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-3-amb-con-cochera-cubierta-seguridad-24hs-51290872.html'}
2023-03-27 22:18:27 [scrapy.extensions.logstats] INFO: Crawled 248 pages (at 16 pages/min), scraped 232 items (at 15 items/min)
2023-03-27 22:18:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/nuevo-moderno-depto-amplio-3-amb-muy-luminoso-zona-de-51181476.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/nuevo-moderno-depto-amplio-3-amb-muy-luminoso-zona-de-51181476.html>
{'ambientes': '3',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': '3 de febrero ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Nuevo Moderno Depto Amplio 3 Amb Muy Luminoso Zona de Embajadas Paq '
          'Tdo Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/nuevo-moderno-depto-amplio-3-amb-muy-luminoso-zona-de-51181476.html'}
2023-03-27 22:18:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-con-escritorio-51343865.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-con-escritorio-51343865.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av Quintana al 200',
 'expensas': 0,
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Departamento de 2 Ambientes con Escritorio',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-con-escritorio-51343865.html'}
2023-03-27 22:18:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/imponente-piso-en-alquiler-renoir-ii-piso-altisimo-51311007.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/imponente-piso-en-alquiler-renoir-ii-piso-altisimo-51311007.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Marta Lynch 551',
 'dormitorios': '3',
 'expensas': ' 220.000',
 'm2_cub': '300',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Imponente Piso en Alquiler Renoir II - Piso Altísimo',
 'url': 'https://www.zonaprop.com.ar/propiedades/imponente-piso-en-alquiler-renoir-ii-piso-altisimo-51311007.html'}
2023-03-27 22:18:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51274727.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51274727.html>
{'ambientes': '5',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Cruceros , Olga Cossetini al 1600',
 'dormitorios': '4',
 'expensas': ' 120.000',
 'm2_cub': '360',
 'm2_total': '540',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51274727.html'}
2023-03-27 22:18:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-piso-en-libertador-4444-con-dos-cocheras-51313812.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-piso-en-libertador-4444-con-dos-cocheras-51313812.html>
{'ambientes': '5',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Avenida Libertador 4444',
 'dormitorios': '3',
 'expensas': ' 240.000',
 'm2_cub': '280',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Excelente Piso en Libertador 4444 con Dos Cocheras',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-piso-en-libertador-4444-con-dos-cocheras-51313812.html'}
2023-03-27 22:18:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-17.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-alto-en-alquiler-en-ayacucho-y-las-heras-51217533.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-alto-en-alquiler-en-ayacucho-y-las-heras-51217533.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Las Heras y Ayacucho',
 'dormitorios': '4',
 'expensas': ' 75.000',
 'm2_cub': '170',
 'moneda': 'USD',
 'title': 'Piso Alto en Alquiler en Ayacucho y Las Heras',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-alto-en-alquiler-en-ayacucho-y-las-heras-51217533.html'}
2023-03-27 22:18:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-recoleta-capital-federal-51156182.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-recoleta-capital-federal-51156182.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'ARROYO 800',
 'dormitorios': '3',
 'expensas': ' 90.713',
 'm2_cub': '160',
 'm2_total': '168',
 'moneda': 'USD',
 'title': 'Departamento 3 Dor. C/dep - Recoleta, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-recoleta-capital-federal-51156182.html'}
2023-03-27 22:18:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/unico-clorindo-testa-terraza-propia-cochera-51262093.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:18:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:18:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/unico-clorindo-testa-terraza-propia-cochera-51262093.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Rodriguez Peña al 2000',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '182',
 'm2_total': '210',
 'moneda': 'USD',
 'title': 'Unico Clorindo Testa | Terraza Propia | Cochera | Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/unico-clorindo-testa-terraza-propia-cochera-51262093.html'}
2023-03-27 22:19:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-en-recoleta-51247428.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-en-recoleta-51247428.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Alvear 1800',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '140',
 'm2_total': '140',
 'moneda': 'USD',
 'title': 'Alquiler de Departamento en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-en-recoleta-51247428.html'}
2023-03-27 22:19:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/increible-2-amb-suite-toil-balc-or-n.-e-sol-luz-51190511.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/increible-2-amb-suite-toil-balc-or-n.-e-sol-luz-51190511.html>
{'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'AV NICETO VEGA ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '51',
 'moneda': 'USD',
 'title': 'Increible 2 Amb Suite Toil Balc or N. E Sol Luz Amenit. 24/7 '
          'Segurid. P. Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/increible-2-amb-suite-toil-balc-or-n.-e-sol-luz-51190511.html'}
2023-03-27 22:19:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-amb.-a-estrenar-85-m-sup2--semipiso-51375744.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-amb.-a-estrenar-85-m-sup2--semipiso-51375744.html>
{'ambientes': '3',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'LOYOLA 100',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '78',
 'm2_total': '85',
 'moneda': '$',
 'title': '3 Amb. a Estrenar 85 m² - Semipiso',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-amb.-a-estrenar-85-m-sup2--semipiso-51375744.html'}
2023-03-27 22:19:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporal-2-ambientes-tipo-loft-ubicado-en-51261955.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporal-2-ambientes-tipo-loft-ubicado-en-51261955.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Sanchez de Bustamante al 2200',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Alquiler Temporal - 2 Ambientes Tipo Loft Ubicado en El Corazon de '
          'Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporal-2-ambientes-tipo-loft-ubicado-en-51261955.html'}
2023-03-27 22:19:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-3-ambientes-palermo-soho-51379944.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-3-ambientes-palermo-soho-51379944.html>
{'ambientes': '3',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Jorge Luis Borges al 2300',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '62',
 'm2_total': '72',
 'moneda': 'USD',
 'title': 'Alquiler Temporario 3 Ambientes Palermo Soho',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-3-ambientes-palermo-soho-51379944.html'}
2023-03-27 22:19:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ugarte-y-arcos-divino!-2-amb-amoblado-balcon-terraza-51272840.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ugarte-y-arcos-divino!-2-amb-amoblado-balcon-terraza-51272840.html>
{'ambientes': '2',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'Ugarte 2100',
 'dormitorios': '1',
 'expensas': ' 34.000',
 'm2_cub': '58',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Ugarte y Arcos Divino! 2 Amb Amoblado Balcòn Terraza Parr y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/ugarte-y-arcos-divino!-2-amb-amoblado-balcon-terraza-51272840.html'}
2023-03-27 22:19:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/nuevo-dpto-a-m-de-puerto-madero-2-amb-todo-a-estrenar-51326207.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/nuevo-dpto-a-m-de-puerto-madero-2-amb-todo-a-estrenar-51326207.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': '25 de mayo ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Nuevo Dpto a m de Puerto Madero 2 Amb Todo a Estrenar Paq Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/nuevo-dpto-a-m-de-puerto-madero-2-amb-todo-a-estrenar-51326207.html'}
2023-03-27 22:19:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-3-amb-en-la-mejor-zona-de-belgrano-51269525.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-3-amb-en-la-mejor-zona-de-belgrano-51269525.html>
{'ambientes': '3',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'JOSE HERNANDEZ 2150',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '71',
 'm2_total': '71',
 'moneda': '$',
 'title': 'Semipiso, 3 Amb, en La Mejor Zona de Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-3-amb-en-la-mejor-zona-de-belgrano-51269525.html'}
2023-03-27 22:19:27 [scrapy.extensions.logstats] INFO: Crawled 265 pages (at 17 pages/min), scraped 248 items (at 16 items/min)
2023-03-27 22:19:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dos-ambientes-con-cochera-amplio-equipado-nuevo-en-av-51344174.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dos-ambientes-con-cochera-amplio-equipado-nuevo-en-av-51344174.html>
{'ambientes': '2',
 'barrio': ', Parque Rivadavia, Caballito',
 'direccion': 'Lezica 4476',
 'expensas': ' 16.000',
 'm2_cub': '48',
 'm2_total': '52',
 'moneda': '$',
 'title': 'Dos Ambientes con Cochera Amplio Equipado Nuevo en Av La Plata y '
          'Rivadavia',
 'url': 'https://www.zonaprop.com.ar/propiedades/dos-ambientes-con-cochera-amplio-equipado-nuevo-en-av-51344174.html'}
2023-03-27 22:19:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/juncal-al-3200-con-amenities-y-cochera-51358758.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/juncal-al-3200-con-amenities-y-cochera-51358758.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Juncal al 3200',
 'dormitorios': '1',
 'expensas': ' 50.000',
 'm2_cub': '150',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Juncal Al 3200 con Amenities y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/juncal-al-3200-con-amenities-y-cochera-51358758.html'}
2023-03-27 22:19:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-forum-increible-3-dormit-playroom-alquiler-51287751.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-forum-increible-3-dormit-playroom-alquiler-51287751.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Juncal 3100',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '220',
 'm2_total': '250',
 'moneda': 'USD',
 'title': 'Torre Forum Increíble 3 Dormit + Playroom Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-forum-increible-3-dormit-playroom-alquiler-51287751.html'}
2023-03-27 22:19:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/fenomenal-4amb-a-nuevo-y-equipado-calidad-51209147.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/fenomenal-4amb-a-nuevo-y-equipado-calidad-51209147.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Posadas 1100',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '130',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Fenomenal 4amb a Nuevo y Equipado - Calidad',
 'url': 'https://www.zonaprop.com.ar/propiedades/fenomenal-4amb-a-nuevo-y-equipado-calidad-51209147.html'}
2023-03-27 22:19:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-amoblado-y-51321709.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-amoblado-y-51321709.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1400',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '75',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Espectacular 2 Ambientes en Alquiler Amoblado y Equipado con '
          'Cochera en Oceana. Puerto Madero.',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-amoblado-y-51321709.html'}
2023-03-27 22:19:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-18.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-nuevo-51357940.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-nuevo-51357940.html>
{'ambientes': '3',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Republica Árabe Siria al 3300',
 'dormitorios': '2',
 'expensas': ' 42.000',
 'm2_cub': '67',
 'm2_total': '67',
 'moneda': '$',
 'title': 'Departamento en Palermo Nuevo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-nuevo-51357940.html'}
2023-03-27 22:19:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-juncal-3110-51358942.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-juncal-3110-51358942.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Juncal al 3100',
 'dormitorios': '2',
 'expensas': ' 40.000',
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Departamento en Juncal 3110',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-juncal-3110-51358942.html'}
2023-03-27 22:19:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51253370.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:19:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:19:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51253370.html>
{'ambientes': '5',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Juncal al 3100 Piso 17 - Zona de Alto Palermo',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '230',
 'm2_total': '285',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51253370.html'}
2023-03-27 22:20:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lindisimo-monoambiente-totalmente-equipado-con-piscina-51373113.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lindisimo-monoambiente-totalmente-equipado-con-piscina-51373113.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Dorrego al 1600',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '44',
 'moneda': 'USD',
 'title': 'Lindisimo Monoambiente Totalmente Equipado con Piscina y Sum',
 'url': 'https://www.zonaprop.com.ar/propiedades/lindisimo-monoambiente-totalmente-equipado-con-piscina-51373113.html'}
2023-03-27 22:20:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casas-casa-palermo-capital-federal-51384462.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casas-casa-palermo-capital-federal-51384462.html>
{'ambientes': '5',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'MALABIA 1700',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '345',
 'm2_total': '350',
 'moneda': 'USD',
 'title': 'Casas - Casa - Palermo, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/casas-casa-palermo-capital-federal-51384462.html'}
2023-03-27 22:20:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-canitas-dorrego-2700-usd-51369327.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-canitas-dorrego-2700-usd-51369327.html>
{'ambientes': '2',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Dorrego ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '52',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Alquiler - 2 Ambientes - Cañitas - Dorrego 2700 - Usd 1.400 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-canitas-dorrego-2700-usd-51369327.html'}
2023-03-27 22:20:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-en-le-parc-puerto-madero.-4-ambientes-51311495.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-en-le-parc-puerto-madero.-4-ambientes-51311495.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor 400',
 'dormitorios': '3',
 'expensas': ' 180.000',
 'm2_total': '182',
 'moneda': 'USD',
 'title': 'Alquiler en Le Parc Puerto Madero. 4 Ambientes Amoblado. 182 m². '
          'Piso Alto',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-en-le-parc-puerto-madero.-4-ambientes-51311495.html'}
2023-03-27 22:20:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-federico-lacroze-1900-belgrano-4-dorm-dep-de-51286467.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-federico-lacroze-1900-belgrano-4-dorm-dep-de-51286467.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av. Federico Lacroze al 1900',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '200',
 'm2_total': '225',
 'moneda': 'USD',
 'title': 'Av Federico Lacroze 1900, Belgrano - 4 Dorm, Dep de Servicio, '
          'Cochera, Sum',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-federico-lacroze-1900-belgrano-4-dorm-dep-de-51286467.html'}
2023-03-27 22:20:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/7-semipiso-a-contrafrente-abierto.-balcon-51102860.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/7-semipiso-a-contrafrente-abierto.-balcon-51102860.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Jose Hernandez 2500',
 'dormitorios': '3',
 'expensas': ' 22.000',
 'm2_cub': '72',
 'm2_total': '78',
 'moneda': '$',
 'title': '7º - Semipiso a Contrafrente Abierto. Balcón Aterrazado. Cochera. '
          'Bajas Expenas',
 'url': 'https://www.zonaprop.com.ar/propiedades/7-semipiso-a-contrafrente-abierto.-balcon-51102860.html'}
2023-03-27 22:20:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/cuatro-amplios-ambientes-de-categoria-vista-al-polo-51380361.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/cuatro-amplios-ambientes-de-categoria-vista-al-polo-51380361.html>
{'ambientes': '4',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Arce 323 Buenos Aires',
 'dormitorios': '3',
 'expensas': ' 166.000',
 'm2_cub': '175',
 'm2_total': '185',
 'moneda': 'USD',
 'title': 'Cuatro Amplios Ambientes de Categoría, Vista Al Polo, Amenities, '
          'Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/cuatro-amplios-ambientes-de-categoria-vista-al-polo-51380361.html'}
2023-03-27 22:20:27 [scrapy.extensions.logstats] INFO: Crawled 281 pages (at 16 pages/min), scraped 263 items (at 15 items/min)
2023-03-27 22:20:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/oportunidad!-4-amb-120-m-sup2--aprox-c-coch-y-bau.-51358478.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/oportunidad!-4-amb-120-m-sup2--aprox-c-coch-y-bau.-51358478.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Avenida Cordoba al 2800',
 'dormitorios': '3',
 'expensas': ' 50.000',
 'm2_cub': '114',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Oportunidad! 4 Amb 120 m² Aprox C Coch y Bau. Córdoba y Anchorena '
          'Excelente Ubicación!',
 'url': 'https://www.zonaprop.com.ar/propiedades/oportunidad!-4-amb-120-m-sup2--aprox-c-coch-y-bau.-51358478.html'}
2023-03-27 22:20:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-recoleta-capital-federal-51303327.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-recoleta-capital-federal-51303327.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'LIBERTAD 1300',
 'dormitorios': '3',
 'expensas': ' 150.000',
 'm2_cub': '222',
 'm2_total': '230',
 'moneda': 'USD',
 'title': 'Departamento 3 Dor. C/dep - Recoleta, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-recoleta-capital-federal-51303327.html'}
2023-03-27 22:20:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-las-canitas-51327943.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-las-canitas-51327943.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Baez al 500',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '33',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Departamento - Las Cañitas',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-las-canitas-51327943.html'}
2023-03-27 22:20:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-reciclado-totalmente-al-frente-con-balcon-51384906.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-reciclado-totalmente-al-frente-con-balcon-51384906.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Constitución 3100',
 'dormitorios': '1',
 'expensas': ' 13.000',
 'm2_cub': '31',
 'm2_total': '35',
 'moneda': '$',
 'title': '2 Ambientes Reciclado Totalmente Al Frente con Balcón - '
          'Constitución Al 3100',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-reciclado-totalmente-al-frente-con-balcon-51384906.html'}
2023-03-27 22:20:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-y-soleado-monoambiente-pegado-a-patio-51344131.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-y-soleado-monoambiente-pegado-a-patio-51344131.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av. del Libertador 774',
 'expensas': ' 18.000',
 'm2_cub': '27',
 'm2_total': '27',
 'moneda': 'USD',
 'title': 'Excelente y Soleado Monoambiente Pegado a Patio Bullrich',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-y-soleado-monoambiente-pegado-a-patio-51344131.html'}
2023-03-27 22:20:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-villa-devoto-51220433.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-villa-devoto-51220433.html>
{'barrio': ', Villa Devoto, Capital Federal',
 'direccion': '3 Ambientes - Llavallol al 4500',
 'expensas': ' 8.000',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Departamento - Villa Devoto',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-villa-devoto-51220433.html'}
2023-03-27 22:20:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-19.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:20:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/iconico-piso-27-en-el-edificio-kavanagh!-51386849.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/iconico-piso-27-en-el-edificio-kavanagh!-51386849.html>
{'ambientes': '4',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Florida 1000 27°',
 'dormitorios': '3',
 'expensas': ' 111.000',
 'm2_cub': '180',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Icónico Piso 27° en El Edificio Kavanagh!',
 'url': 'https://www.zonaprop.com.ar/propiedades/iconico-piso-27-en-el-edificio-kavanagh!-51386849.html'}
2023-03-27 22:20:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-amb-alquiler-en-torres-del-yacht-sin-muebles-con-51299491.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:20:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-amb-alquiler-en-torres-del-yacht-sin-muebles-con-51299491.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 600',
 'dormitorios': '1',
 'expensas': ' 17.000',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': '2 Amb Alquiler en Torres del Yacht Sin Muebles con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-amb-alquiler-en-torres-del-yacht-sin-muebles-con-51299491.html'}
2023-03-27 22:21:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/importante-propiedad-de-uso-comerccial-51187093.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/importante-propiedad-de-uso-comerccial-51187093.html>
{'ambientes': '19',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Gallo 1200',
 'dormitorios': '18',
 'expensas': 0,
 'm2_cub': '1540',
 'm2_total': '2000',
 'moneda': 'USD',
 'title': 'Importante Propiedad de Uso Comerccial',
 'url': 'https://www.zonaprop.com.ar/propiedades/importante-propiedad-de-uso-comerccial-51187093.html'}
2023-03-27 22:21:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-las-canitas-51279012.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-las-canitas-51279012.html>
{'ambientes': '4',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Gorostiaga al 1600 - 4º Piso',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '131',
 'm2_total': '148',
 'moneda': 'USD',
 'title': 'Departamento - Las Cañitas',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-las-canitas-51279012.html'}
2023-03-27 22:21:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dueno-alquila-2-ambientes-con-cochera-fija-51339717.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dueno-alquila-2-ambientes-con-cochera-fija-51339717.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Pacheco 2700',
 'dormitorios': '1',
 'expensas': ' 22.000',
 'm2_cub': '45',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Dueño Alquila 2 Ambientes con Cochera Fija',
 'url': 'https://www.zonaprop.com.ar/propiedades/dueno-alquila-2-ambientes-con-cochera-fija-51339717.html'}
2023-03-27 22:21:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-puerto-madero-51303694.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-puerto-madero-51303694.html>
{'ambientes': '1',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Zencity- Torre Ónix-puerto Madero- Monoambiente - Full '
              'Amenities',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '47',
 'm2_total': '47',
 'moneda': 'USD',
 'title': 'Departamento - Alquiler - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-puerto-madero-51303694.html'}
2023-03-27 22:21:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-amb.-vista-verde-a-la-plaza-amoblado-y-equipado-51299492.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-amb.-vista-verde-a-la-plaza-amoblado-y-equipado-51299492.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 1500',
 'dormitorios': '3',
 'expensas': ' 60.000',
 'm2_cub': '130',
 'm2_total': '148',
 'moneda': 'USD',
 'title': '4 Amb. Vista Verde a La Plaza, Amoblado y Equipado',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-amb.-vista-verde-a-la-plaza-amoblado-y-equipado-51299492.html'}
2023-03-27 22:21:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/duplex-palermo-oportunidad-en-venta-51156655.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/duplex-palermo-oportunidad-en-venta-51156655.html>
{'ambientes': '4',
 'barrio': ', Botánico, Palermo',
 'direccion': 'república de la india ',
 'dormitorios': '4',
 'expensas': ' 180',
 'm2_cub': '300',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Dúplex Palermo Oportunidad en Venta',
 'url': 'https://www.zonaprop.com.ar/propiedades/duplex-palermo-oportunidad-en-venta-51156655.html'}
2023-03-27 22:21:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-suite-amoblada-y-equipada-en-sls-puerto-51217647.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-suite-amoblada-y-equipada-en-sls-puerto-51217647.html>
{'ambientes': '1',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 1751',
 'expensas': 0,
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Alquiler de Suite Amoblada y Equipada en Sls Puerto Madero. Vista '
          'Al Dique',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-suite-amoblada-y-equipada-en-sls-puerto-51217647.html'}
2023-03-27 22:21:27 [scrapy.extensions.logstats] INFO: Crawled 297 pages (at 16 pages/min), scraped 278 items (at 15 items/min)
2023-03-27 22:21:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alto-impecable-semipiso-amoblado-torre-lc-51261620.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alto-impecable-semipiso-amoblado-torre-lc-51261620.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'GOROSTIAGA 2300',
 'dormitorios': '3',
 'expensas': ' 89.000',
 'm2_cub': '141',
 'm2_total': '151',
 'moneda': 'USD',
 'title': 'Alto - Impecable Semipiso Amoblado - Torre - Lc - Blcón 3 Dorm. + '
          'Dep Coch Vig.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alto-impecable-semipiso-amoblado-torre-lc-51261620.html'}
2023-03-27 22:21:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-en-alquiler-temporario.-zona-51143273.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-en-alquiler-temporario.-zona-51143273.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av. Pueyrredon al 1700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_total': '49',
 'moneda': 'USD',
 'title': 'Excelente 2 Ambientes en Alquiler Temporario. Zona Recoleta.',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-en-alquiler-temporario.-zona-51143273.html'}
2023-03-27 22:21:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-depto-tipo-duplex-3-ambientes-amueblado-en-51279452.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-depto-tipo-duplex-3-ambientes-amueblado-en-51279452.html>
{'ambientes': '3',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'Virrey del Pino 2365',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Hermoso Depto Tipo Duplex 3 Ambientes Amueblado en Zona de Embajada '
          '(Belgrano)',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-depto-tipo-duplex-3-ambientes-amueblado-en-51279452.html'}
2023-03-27 22:21:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/duplex-3-amb-piso-35-en-palermo-chico-51314988.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/duplex-3-amb-piso-35-en-palermo-chico-51314988.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Ruggieri al 2900',
 'dormitorios': '2',
 'expensas': ' 55.000',
 'm2_cub': '89',
 'm2_total': '105',
 'moneda': 'USD',
 'title': 'Duplex 3 Amb Piso 35 en Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/duplex-3-amb-piso-35-en-palermo-chico-51314988.html'}
2023-03-27 22:21:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impecable-departamento-con-terraza-51133302.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impecable-departamento-con-terraza-51133302.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av. Del Libertador 5000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '150',
 'm2_total': '178',
 'moneda': 'USD',
 'title': 'Impecable Departamento con Terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/impecable-departamento-con-terraza-51133302.html'}
2023-03-27 22:21:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-belgrano-51386540.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-belgrano-51386540.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Nuñez 2600 Duplicado',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '55',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Departamento en Alquiler de 2 Dorm. en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-belgrano-51386540.html'}
2023-03-27 22:21:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51322008.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51322008.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Juncal al 1200',
 'dormitorios': '2',
 'expensas': ' 56.000',
 'm2_total': '85',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51322008.html'}
2023-03-27 22:21:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-20.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:21:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51380848.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:21:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51380848.html>
{'ambientes': '1',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Alberdi al 1640',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '34',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Departamento en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51380848.html'}
2023-03-27 22:22:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/araoz-2400-3amb-excelente-ubicacion!-51385723.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/araoz-2400-3amb-excelente-ubicacion!-51385723.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'araoz ',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '60',
 'moneda': '$',
 'title': 'Araoz 2400 - 3amb - Excelente Ubicación!',
 'url': 'https://www.zonaprop.com.ar/propiedades/araoz-2400-3amb-excelente-ubicacion!-51385723.html'}
2023-03-27 22:22:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-recoleta-51388285.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-recoleta-51388285.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Arenales al 1600',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '53',
 'm2_total': '53',
 'moneda': '$',
 'title': 'Alquiler - 2 Ambientes - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-recoleta-51388285.html'}
2023-03-27 22:22:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporal-monoambiente-pileta-51373455.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporal-monoambiente-pileta-51373455.html>
{'ambientes': '1',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'Alvarez Thomas 20',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '52',
 'moneda': 'USD',
 'title': 'Alquiler Temporal · Monoambiente · Pileta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporal-monoambiente-pileta-51373455.html'}
2023-03-27 22:22:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/bvar-chenault-1800-divino-3-ambientes-contrafrente-51383643.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/bvar-chenault-1800-divino-3-ambientes-contrafrente-51383643.html>
{'ambientes': '3',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Av.general Indalecio Chenaut al 1800',
 'dormitorios': '2',
 'expensas': ' 38.000',
 'm2_cub': '70',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Bvar Chenault 1800 - Divino 3 Ambientes Contrafrente - Cochera - '
          'Amenities - Bajas Expensas!',
 'url': 'https://www.zonaprop.com.ar/propiedades/bvar-chenault-1800-divino-3-ambientes-contrafrente-51383643.html'}
2023-03-27 22:22:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-beruti-3300-4-ambientes-de-revista-en-edificio-51197948.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-beruti-3300-4-ambientes-de-revista-en-edificio-51197948.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Beruti 3267',
 'expensas': ' 79.000',
 'm2_cub': '135',
 'm2_total': '140',
 'moneda': 'USD',
 'title': 'Torre Beruti 3300 - 4 Ambientes de Revista en Edificio de Maxima '
          'Categoria!',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-beruti-3300-4-ambientes-de-revista-en-edificio-51197948.html'}
2023-03-27 22:22:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-a-una-cuadra-de-libertador.-51360727.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-a-una-cuadra-de-libertador.-51360727.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Basavilvaso 1200',
 'dormitorios': '3',
 'expensas': 0,
 'm2_total': '165',
 'moneda': 'USD',
 'title': 'Departamento 4 Ambientes, a Una Cuadra de Libertador.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-a-una-cuadra-de-libertador.-51360727.html'}
2023-03-27 22:22:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-amoblado-bayres-madero-con-cochera-51299247.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-amoblado-bayres-madero-con-cochera-51299247.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1100',
 'dormitorios': '2',
 'expensas': ' 60.000',
 'm2_cub': '103',
 'm2_total': '103',
 'moneda': 'USD',
 'title': 'Alquiler 3 Amb Amoblado Bayres Madero con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-amoblado-bayres-madero-con-cochera-51299247.html'}
2023-03-27 22:22:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-37-m-sup2--dividido-amoblado-51300477.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-37-m-sup2--dividido-amoblado-51300477.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Arenales 2812',
 'expensas': ' 24.000',
 'm2_cub': '37',
 'm2_total': '37',
 'moneda': '$',
 'title': '1 Ambiente Amplio 37 m² Dividido Amoblado Contrato por 3 Años',
 'url': 'https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-37-m-sup2--dividido-amoblado-51300477.html'}
2023-03-27 22:22:27 [scrapy.extensions.logstats] INFO: Crawled 314 pages (at 17 pages/min), scraped 294 items (at 16 items/min)
2023-03-27 22:22:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-piso-5-amb-dep-en-parque-centenario-51194614.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-piso-5-amb-dep-en-parque-centenario-51194614.html>
{'ambientes': '5',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Sarmiento 4600',
 'dormitorios': '4',
 'expensas': ' 75.000',
 'm2_cub': '180',
 'm2_total': '210',
 'moneda': 'USD',
 'title': 'Venta Piso 5 Amb + Dep en Parque Centenario',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-piso-5-amb-dep-en-parque-centenario-51194614.html'}
2023-03-27 22:22:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-3-amb-dep-recoleta-51275406.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-3-amb-dep-recoleta-51275406.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Alquiler Dpto 3 amb +dep Recoleta',
 'dormitorios': '3',
 'expensas': ' 60.000',
 'm2_cub': '104',
 'm2_total': '104',
 'moneda': 'USD',
 'title': 'Alquiler Departamento 3 Amb Dep, Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-3-amb-dep-recoleta-51275406.html'}
2023-03-27 22:22:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-suites-amobladas-en-renoir-1-tipologia-sol-51308486.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-suites-amobladas-en-renoir-1-tipologia-sol-51308486.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Renoir ! Marta Lynch al 400',
 'expensas': ' 140.000',
 'm2_cub': '178',
 'm2_total': '178',
 'moneda': 'USD',
 'title': '3 Suites Amobladas en Renoir 1 Tipología Sol',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-suites-amobladas-en-renoir-1-tipologia-sol-51308486.html'}
2023-03-27 22:22:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-divisible-floresta-bajas-51237867.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:22:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-divisible-floresta-bajas-51237867.html>
{'ambientes': '1',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'Fernández 324',
 'expensas': ' 5.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento 1 Ambiente Divisible Floresta Bajas Expensas Luminoso '
          'Vigilancia',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-divisible-floresta-bajas-51237867.html'}
2023-03-27 22:22:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente.-monoambiente.-zona-residencial-51386060.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente.-monoambiente.-zona-residencial-51386060.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Bulnes 1884 ',
 'expensas': ' 14.000',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Excelente. Monoambiente. Zona Residencial',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente.-monoambiente.-zona-residencial-51386060.html'}
2023-03-27 22:22:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-de-febrero-y-la-pampa-excelente-piso-51368700.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-de-febrero-y-la-pampa-excelente-piso-51368700.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '3 DE Febrero al 1700',
 'dormitorios': '4',
 'expensas': ' 120.000',
 'm2_cub': '165',
 'm2_total': '180',
 'moneda': 'USD',
 'title': '3 de Febrero y La Pampa Excelente Piso',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-de-febrero-y-la-pampa-excelente-piso-51368700.html'}
2023-03-27 22:22:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-a-estrenar-amoblado-con-cochera-51166332.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-a-estrenar-amoblado-con-cochera-51166332.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Distrito Quartier.',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '113',
 'm2_total': '113',
 'moneda': 'USD',
 'title': 'Excelente 3 Ambientes a Estrenar Amoblado con Cochera en Distrito '
          'Quartier.',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-a-estrenar-amoblado-con-cochera-51166332.html'}
2023-03-27 22:22:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-21.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:22:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:23:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-r-51311725.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-r-51311725.html>
{'ambientes': '6',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Carbajal al 3800',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '336',
 'm2_total': '358',
 'moneda': 'USD',
 'title': 'Departamento - Belgrano R',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-r-51311725.html'}
2023-03-27 22:23:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/increible-3-dorm-dep.-en-torres-alto-palermo-51280076.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:23:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/increible-3-dorm-dep.-en-torres-alto-palermo-51280076.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Juncal al 3200',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '140',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Increible 3 Dorm + Dep. en Torres Alto Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/increible-3-dorm-dep.-en-torres-alto-palermo-51280076.html'}
2023-03-27 22:23:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-mascotas-frente-a-51287066.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:23:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-mascotas-frente-a-51287066.html>
{'ambientes': '2',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'Fernández 305',
 'dormitorios': '1',
 'expensas': ' 6.800',
 'm2_cub': '45',
 'm2_total': '47',
 'moneda': '$',
 'title': 'Alquiler Departamento 2 Ambientes Mascotas Frente a Estrenar Baja '
          'Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-mascotas-frente-a-51287066.html'}
2023-03-27 22:23:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dorm.-palermo-capital-federal-51347666.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:23:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dorm.-palermo-capital-federal-51347666.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'SAN MARTíN DE TOURS 3100',
 'dormitorios': '3',
 'expensas': ' 80.000',
 'm2_cub': '123',
 'm2_total': '127',
 'moneda': 'USD',
 'title': 'Departamento 3 Dorm. - Palermo, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dorm.-palermo-capital-federal-51347666.html'}
2023-03-27 22:23:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/belgrano-2-amb-cochera-fija-bano-y-toilette-edificio-51370054.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:23:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/belgrano-2-amb-cochera-fija-bano-y-toilette-edificio-51370054.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Moldes 2265 7 B',
 'dormitorios': '1',
 'expensas': ' 27.461',
 'm2_cub': '36',
 'm2_total': '47',
 'moneda': '$',
 'title': 'Belgrano 2 Amb Cochera Fija Baño y Toilette Edificio con Pileta Sum',
 'url': 'https://www.zonaprop.com.ar/propiedades/belgrano-2-amb-cochera-fija-bano-y-toilette-edificio-51370054.html'}
2023-03-27 22:23:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-dpto-3-ambientes-recoleta-51299479.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:23:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-dpto-3-ambientes-recoleta-51299479.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Juncal al 2900',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Alquiler Dpto 3 Ambientes - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-dpto-3-ambientes-recoleta-51299479.html'}
2023-03-27 22:23:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-a-estrenar-en-palermo-soho-51316487.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:23:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-a-estrenar-en-palermo-soho-51316487.html>
{'ambientes': '1',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Avenida Cordoba 5151',
 'expensas': ' 25.000',
 'm2_cub': '50',
 'm2_total': '54',
 'moneda': '$',
 'title': 'Monoambiente a Estrenar en Palermo Soho',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-a-estrenar-en-palermo-soho-51316487.html'}
2023-03-27 22:23:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-con-patio-en-planta-baja-en-51355337.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:23:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-con-patio-en-planta-baja-en-51355337.html>
{'ambientes': '3',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Superi y Av Los Incas',
 'dormitorios': '2',
 'expensas': ' 27.000',
 'm2_total': '62',
 'moneda': '$',
 'title': 'Alquiler 3 Ambientes con Patio en Planta Baja en Superi y Av Los '
          'Incas, Belgrano R',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-con-patio-en-planta-baja-en-51355337.html'}
2023-03-27 22:23:27 [scrapy.extensions.logstats] INFO: Crawled 330 pages (at 16 pages/min), scraped 309 items (at 15 items/min)
2023-03-27 22:23:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/araoz-2400-3amb-excelente-ubicacion!-51385641.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:23:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/araoz-2400-3amb-excelente-ubicacion!-51385641.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'araoz ',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '60',
 'moneda': '$',
 'title': 'Araoz 2400 - 3amb - Excelente Ubicación!',
 'url': 'https://www.zonaprop.com.ar/propiedades/araoz-2400-3amb-excelente-ubicacion!-51385641.html'}
2023-03-27 22:23:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-amoblado-con-cochera-en-51234954.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-amoblado-con-cochera-en-51234954.html>
{'ambientes': '2',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Beruti al 4500',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '47',
 'm2_total': '50',
 'moneda': 'USD',
 'title': '2 Ambientes en Alquiler Amoblado con Cochera en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-amoblado-con-cochera-en-51234954.html'}
2023-03-27 22:23:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-con-dependencia-terraza-y-51369414.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-con-dependencia-terraza-y-51369414.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Pacheco de Melo al 1900',
 'dormitorios': '3',
 'expensas': ' 110.000',
 'm2_cub': '125',
 'm2_total': '205',
 'moneda': 'USD',
 'title': 'Departamento 4 Ambientes con Dependencia, Terraza y Cochera - Seg '
          '24has',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-con-dependencia-terraza-y-51369414.html'}
2023-03-27 22:23:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-de-tres-ambientes-51385220.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-de-tres-ambientes-51385220.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Lafinur al 3200',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '83',
 'm2_total': '92',
 'moneda': 'USD',
 'title': 'Departamento en Palermo Chico de Tres Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-de-tres-ambientes-51385220.html'}
2023-03-27 22:23:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-le-parc-puerto-madero-51246261.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-le-parc-puerto-madero-51246261.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Le Parc-azucena Villaflor 500-3ambientes-amoblado- '
              'Cochera-baulera',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '130',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Departamento en Le Parc Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-le-parc-puerto-madero-51246261.html'}
2023-03-27 22:23:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-depto-2-dorm-av-libertador-con-vistas-51143002.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-depto-2-dorm-av-libertador-con-vistas-51143002.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'AVENIDA LIBERTADOR 2300',
 'dormitorios': '2',
 'expensas': ' 130.000',
 'm2_cub': '171',
 'm2_total': '185',
 'moneda': '$',
 'title': 'Venta o Alquiler Depto 2 Dorm Av Libertador con Vistas Panoramicas '
          'Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-depto-2-dorm-av-libertador-con-vistas-51143002.html'}
2023-03-27 22:23:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-apto-profesional-6-51225802.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-apto-profesional-6-51225802.html>
{'ambientes': '6',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Av Callao al 100',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '146',
 'm2_total': '153',
 'moneda': '$',
 'title': 'Departamento en Alquiler - Apto Profesional - 6 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-apto-profesional-6-51225802.html'}
2023-03-27 22:23:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-premiun-en-torre-town-house-soho-51368696.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-premiun-en-torre-town-house-soho-51368696.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Paraguay al 4700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '160',
 'm2_total': '160',
 'moneda': 'USD',
 'title': 'Alquiler 2 Ambientes Premiun en Torre Town House Soho II de '
          'Palermo.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-premiun-en-torre-town-house-soho-51368696.html'}
2023-03-27 22:23:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-22.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:23:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:24:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-amoblado-con-cochera-en-51234957.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-amoblado-con-cochera-en-51234957.html>
{'ambientes': '2',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Beruti al 4500',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '47',
 'm2_total': '50',
 'moneda': 'USD',
 'title': '2 Ambientes en Alquiler Amoblado con Cochera en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-amoblado-con-cochera-en-51234957.html'}
2023-03-27 22:24:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/penthouse:galileo-y-gelly-obes.-duplex-vista-balcon-51151887.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:24:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/penthouse:galileo-y-gelly-obes.-duplex-vista-balcon-51151887.html>
{'ambientes': '7',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Galileo 2400',
 'dormitorios': '4',
 'expensas': ' 400.000',
 'm2_cub': '460',
 'm2_total': '460',
 'moneda': 'USD',
 'title': 'Penthouse:galileo y Gelly Obes. Duplex Vista Balcón - Terraza: '
          'Amueblado "Unico"',
 'url': 'https://www.zonaprop.com.ar/propiedades/penthouse:galileo-y-gelly-obes.-duplex-vista-balcon-51151887.html'}
2023-03-27 22:24:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-puerto-madero-51289752.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:24:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-puerto-madero-51289752.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1600',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Alquiler Temporario - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-puerto-madero-51289752.html'}
2023-03-27 22:24:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-12-en-mariscal-castilla-2800-esq-av-figueroa-51286819.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:24:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-12-en-mariscal-castilla-2800-esq-av-figueroa-51286819.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Mariscal Castilla 2800',
 'dormitorios': '3',
 'expensas': ' 160.720',
 'm2_cub': '200',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Piso 12 en Mariscal Castilla 2800 Esq Av Figueroa Alcorta Guardia '
          '24hs Coch',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-12-en-mariscal-castilla-2800-esq-av-figueroa-51286819.html'}
2023-03-27 22:24:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-chateau-libertador-4-ambientes-con-cochera-51300389.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-chateau-libertador-4-ambientes-con-cochera-51300389.html>
{'ambientes': '4',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Avenida Libertador 7000',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_cub': '204',
 'm2_total': '204',
 'moneda': 'USD',
 'title': 'Alquiler Chateau Libertador 4 Ambientes con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-chateau-libertador-4-ambientes-con-cochera-51300389.html'}
2023-03-27 22:24:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-con-cochera-balcon-51173062.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-con-cochera-balcon-51173062.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'La Pampa y Amenábar',
 'dormitorios': '3',
 'expensas': ' 36.700',
 'm2_cub': '80',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento 4 Ambientes con Cochera, Balcón, Calefacción, A/a - '
          'Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-con-cochera-balcon-51173062.html'}
2023-03-27 22:24:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/barrio-norte-santa-fe-y-libertad-51360535.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/barrio-norte-santa-fe-y-libertad-51360535.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Av. Santa Fe y Libertad',
 'expensas': ' 9.100',
 'm2_cub': '25',
 'm2_total': '25',
 'moneda': '$',
 'title': 'Barrio Norte - Santa Fe y Libertad',
 'url': 'https://www.zonaprop.com.ar/propiedades/barrio-norte-santa-fe-y-libertad-51360535.html'}
2023-03-27 22:24:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/doblas-200-2-amplios-ambientes-piso-7-contrafrente-51297685.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/doblas-200-2-amplios-ambientes-piso-7-contrafrente-51297685.html>
{'ambientes': '2',
 'barrio': ', Caballito Norte, Caballito',
 'direccion': 'DOBLAS 273 CABA',
 'dormitorios': '1',
 'expensas': ' 22.000',
 'm2_cub': '52',
 'm2_total': '54',
 'moneda': '$',
 'title': 'Doblas 200, 2 Amplios Ambientes, piso 7º Contrafrente, Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/doblas-200-2-amplios-ambientes-piso-7-contrafrente-51297685.html'}
2023-03-27 22:24:27 [scrapy.extensions.logstats] INFO: Crawled 347 pages (at 17 pages/min), scraped 325 items (at 16 items/min)
2023-03-27 22:24:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-excelente-ubicacion!-muy-luminoso.-51313267.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-excelente-ubicacion!-muy-luminoso.-51313267.html>
{'ambientes': '1',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'SANTA FE AV. 4922. Entre Fitz roy y Bonpland',
 'expensas': ' 14.000',
 'm2_cub': '25',
 'm2_total': '25',
 'moneda': '$',
 'title': 'Monoambiente - Excelente Ubicacion! - Muy Luminoso.',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-excelente-ubicacion!-muy-luminoso.-51313267.html'}
2023-03-27 22:24:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-23.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:24:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-en-alquiler-en-montevideo-y-alvear-con-quincho-y-51169355.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-en-alquiler-en-montevideo-y-alvear-con-quincho-y-51169355.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Montevideo y alvear',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '175',
 'm2_total': '175',
 'moneda': 'USD',
 'title': 'Depto en Alquiler en Montevideo y Alvear con Quincho y Parrilla!',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-en-alquiler-en-montevideo-y-alvear-con-quincho-y-51169355.html'}
2023-03-27 22:24:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-amoblado-impecable-en-belgrano-51344052.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-amoblado-impecable-en-belgrano-51344052.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Juramento al 3300',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '39',
 'm2_total': '49',
 'moneda': 'USD',
 'title': 'Departamento Amoblado Impecable en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-amoblado-impecable-en-belgrano-51344052.html'}
2023-03-27 22:24:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-amoblado-con-gran-balcon-piscina-51257256.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-amoblado-con-gran-balcon-piscina-51257256.html>
{'ambientes': '2',
 'barrio': ', Botánico, Palermo',
 'direccion': 'SILVIO.L.RUGGIERI 2767',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '43',
 'm2_total': '44',
 'moneda': 'USD',
 'title': 'Hermoso 2 Ambientes Amoblado con Gran Balcon, Piscina, Parrilla y '
          'Sauna',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-amoblado-con-gran-balcon-piscina-51257256.html'}
2023-03-27 22:24:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/libertador-6600-y-ugarte-4-amb.-51238547.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/libertador-6600-y-ugarte-4-amb.-51238547.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'LIBERTADOR 6550',
 'dormitorios': '3',
 'expensas': ' 11.000',
 'm2_cub': '110',
 'm2_total': '140',
 'moneda': '$',
 'title': 'Libertador 6600 y Ugarte - 4 Amb.',
 'url': 'https://www.zonaprop.com.ar/propiedades/libertador-6600-y-ugarte-4-amb.-51238547.html'}
2023-03-27 22:24:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impecable-semipiso-4-amb.-vista-a-jardines-seguridad-51184898.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impecable-semipiso-4-amb.-vista-a-jardines-seguridad-51184898.html>
{'ambientes': '4',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'LUIS MARIA CAMPOS 1464',
 'dormitorios': '2',
 'expensas': ' 67.000',
 'm2_cub': '140',
 'm2_total': '140',
 'moneda': '$',
 'title': 'Impecable Semipiso 4 Amb., Vista a Jardines, Seguridad y Cochera, '
          'Sum, Parrilla',
 'url': 'https://www.zonaprop.com.ar/propiedades/impecable-semipiso-4-amb.-vista-a-jardines-seguridad-51184898.html'}
2023-03-27 22:24:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-12-en-mariscal-castilla-2800-y-av-figueroa-51346648.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-12-en-mariscal-castilla-2800-y-av-figueroa-51346648.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Mariscal Castilla 2800',
 'dormitorios': '3',
 'expensas': ' 122.000',
 'm2_cub': '200',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Piso 12 en Mariscal Castilla 2800 y Av Figueroa Alcorta Guardia '
          '24hs Coch',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-12-en-mariscal-castilla-2800-y-av-figueroa-51346648.html'}
2023-03-27 22:24:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-3-ambientes-cochera-fija-cubierta-51300030.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:24:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-3-ambientes-cochera-fija-cubierta-51300030.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cuba al 2300',
 'dormitorios': '2',
 'expensas': ' 72.600',
 'm2_cub': '104',
 'm2_total': '121',
 'moneda': '$',
 'title': 'Alquiler Semipiso 3 Ambientes, Cochera Fija Cubierta, Equipado. '
          'Impecable!',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-3-ambientes-cochera-fija-cubierta-51300030.html'}
2023-03-27 22:25:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-en-edif.-dubuorg-de-virrey-del-pino-1700.-51252270.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-en-edif.-dubuorg-de-virrey-del-pino-1700.-51252270.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey del Pino 1700',
 'dormitorios': '3',
 'expensas': ' 98.000',
 'm2_cub': '230',
 'm2_total': '230',
 'moneda': 'USD',
 'title': 'Semipiso en Edif. Dubuorg de Virrey del Pino 1700. Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-en-edif.-dubuorg-de-virrey-del-pino-1700.-51252270.html'}
2023-03-27 22:25:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-en-edificio-frances-de-gran-categoria.-51315707.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-en-edificio-frances-de-gran-categoria.-51315707.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Avenida Coronel Diaz al 2700',
 'dormitorios': '4',
 'expensas': ' 180.000',
 'm2_cub': '290',
 'm2_total': '313',
 'moneda': 'USD',
 'title': 'Piso en Edificio Francés de Gran Categoría. Vigilancia, Cuatro '
          'Dorm.',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-en-edificio-frances-de-gran-categoria.-51315707.html'}
2023-03-27 22:25:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-depto-a-estrenar-en-edificio-mega-51329170.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-depto-a-estrenar-en-edificio-mega-51329170.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Directorio 402',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '52',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Espectacular Depto a Estrenar en Edificio Mega Amenities. Te Vas a '
          'Enamorar',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-depto-a-estrenar-en-edificio-mega-51329170.html'}
2023-03-27 22:25:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-amb-pb-con-patio-palermo-sanchez-de-bustamante-51273541.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-amb-pb-con-patio-palermo-sanchez-de-bustamante-51273541.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'sanchez de bustamante 1600',
 'dormitorios': '1',
 'expensas': ' 6.000',
 'm2_cub': '34',
 'm2_total': '47',
 'moneda': '$',
 'title': '2 Amb Pb con Patio - Palermo - Sanchez de Bustamante 1600',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-amb-pb-con-patio-palermo-sanchez-de-bustamante-51273541.html'}
2023-03-27 22:25:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-24.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:25:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-apto-prof.-en-51386381.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-apto-prof.-en-51386381.html>
{'ambientes': '1',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Arias al 2900',
 'expensas': ' 12.700',
 'm2_cub': '28',
 'm2_total': '34',
 'moneda': 'USD',
 'title': 'Alquiler Temporario - Monoambiente Apto Prof. en Complejo Brooklyn '
          'Arias - Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-apto-prof.-en-51386381.html'}
2023-03-27 22:25:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-nueva-pompeya-51367633.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-nueva-pompeya-51367633.html>
{'ambientes': '2',
 'barrio': ', Pompeya, Capital Federal',
 'direccion': 'Avenida La Plata al 2439 6° A',
 'dormitorios': '1',
 'expensas': ' 9.600',
 'm2_cub': '45',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Alquiler - Departamento 2 Ambientes - Nueva Pompeya',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-nueva-pompeya-51367633.html'}
2023-03-27 22:25:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-nunez-51232055.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-nunez-51232055.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Berutti al 3351',
 'dormitorios': '1',
 'expensas': 0,
 'm2_total': '43',
 'moneda': 'USD',
 'title': 'Departamento - Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-nunez-51232055.html'}
2023-03-27 22:25:27 [scrapy.extensions.logstats] INFO: Crawled 364 pages (at 17 pages/min), scraped 340 items (at 15 items/min)
2023-03-27 22:25:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-impecable!.-3-dormis-av-federico-51388101.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-impecable!.-3-dormis-av-federico-51388101.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Federico Lacroze al 2300',
 'dormitorios': '3',
 'expensas': ' 50.000',
 'm2_cub': '135',
 'm2_total': '140',
 'moneda': 'USD',
 'title': 'Alquiler Semipiso Impecable!. 3 Dormis Av Federico Lacroze y 3 de '
          'Febrero!',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-impecable!.-3-dormis-av-federico-51388101.html'}
2023-03-27 22:25:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-alquiler-amplio-monoambiente-villa-urquiza-51170847.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-alquiler-amplio-monoambiente-villa-urquiza-51170847.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Quesada 5000 4°',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Depto Alquiler Amplio Monoambiente Villa Urquiza + Pileta + Lav',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-alquiler-amplio-monoambiente-villa-urquiza-51170847.html'}
2023-03-27 22:25:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-belgrano-51387840.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-belgrano-51387840.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Nuñez 2600',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '55',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Departamento en Alquiler de 2 Dorm. en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-belgrano-51387840.html'}
2023-03-27 22:25:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-25.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:25:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-2-cocheras-vista-al-dique-en-51379320.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-2-cocheras-vista-al-dique-en-51379320.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Olga Cossettini al 1300',
 'dormitorios': '3',
 'expensas': ' 145.000',
 'm2_cub': '155',
 'm2_total': '165',
 'moneda': 'USD',
 'title': 'Departamento 4 Ambientes 2 Cocheras, Vista Al Dique en Puerto '
          'Madero. Bayres Dock',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-2-cocheras-vista-al-dique-en-51379320.html'}
2023-03-27 22:25:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-vista-al-rio-piso-alto-en-torre-las-51313370.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:25:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-vista-al-rio-piso-alto-en-torre-las-51313370.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'RUGGIERI 2944',
 'dormitorios': '2',
 'expensas': ' 35.000',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Alquiler 3 Amb Vista Al Rio Piso Alto en Torre Las Plazas',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-vista-al-rio-piso-alto-en-torre-las-51313370.html'}
2023-03-27 22:25:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/nunez-alquiler-cramer-4200-3-amb-excelente-51349035.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/nunez-alquiler-cramer-4200-3-amb-excelente-51349035.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Cramer al 4200',
 'dormitorios': '2',
 'expensas': ' 45.000',
 'm2_cub': '73',
 'm2_total': '77',
 'moneda': '$',
 'title': 'Nuñez - Alquiler - Cramer 4200 - 3 Amb - Excelente Estado',
 'url': 'https://www.zonaprop.com.ar/propiedades/nunez-alquiler-cramer-4200-3-amb-excelente-51349035.html'}
2023-03-27 22:25:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-anual-en-torre-quartier-sinclair-piso-alto-51342387.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-anual-en-torre-quartier-sinclair-piso-alto-51342387.html>
{'ambientes': '3',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Juncal 4690',
 'dormitorios': '2',
 'expensas': ' 67.000',
 'm2_cub': '95',
 'm2_total': '95',
 'moneda': 'USD',
 'title': 'Alquiler Anual en Torre Quartier Sinclair (Piso Alto con Vista '
          'Directa Al Rio)',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-anual-en-torre-quartier-sinclair-piso-alto-51342387.html'}
2023-03-27 22:25:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-piso-en-torre-premium-5-amb-3-suites-2-51278855.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:25:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-piso-en-torre-premium-5-amb-3-suites-2-51278855.html>
{'ambientes': '5',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'AV DEL LIBERTADOR 4444',
 'dormitorios': '3',
 'expensas': ' 200.000',
 'm2_cub': '280',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Alquiler Piso en Torre Premium 5 Amb 3 Suites 2 Cocheras Super '
          'Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-piso-en-torre-premium-5-amb-3-suites-2-51278855.html'}
2023-03-27 22:26:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-26.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:26:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-2-suites-y-dep-a-51364473.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-2-suites-y-dep-a-51364473.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Pierina Dealessi 550',
 'dormitorios': '2',
 'expensas': ' 240.000',
 'm2_cub': '210',
 'm2_total': '224',
 'moneda': 'USD',
 'title': 'Alquiler Departamento - Puerto Madero 2 Suites y Dep a Dique '
          'Oportunidad',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-2-suites-y-dep-a-51364473.html'}
2023-03-27 22:26:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-venta-y-o-alquiler-temporario-51248925.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:26:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-venta-y-o-alquiler-temporario-51248925.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Quintana al 200',
 'dormitorios': '3',
 'expensas': ' 122.500',
 'm2_cub': '186',
 'm2_total': '186',
 'moneda': 'USD',
 'title': 'Departamento en Venta Y/o Alquiler Temporario - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-venta-y-o-alquiler-temporario-51248925.html'}
2023-03-27 22:26:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-imprenta-full-amenities-c-cochera-51219314.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:26:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-imprenta-full-amenities-c-cochera-51219314.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Migueletes 800',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Torre Imprenta Full Amenities C/cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-imprenta-full-amenities-c-cochera-51219314.html'}
2023-03-27 22:26:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-2-ambientes-temporario-51328708.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:26:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-2-ambientes-temporario-51328708.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Quartier Dorrego',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Quartier Dorrego - Alquiler 2 Ambientes Temporario - Palermo '
          'Hollywood.',
 'url': 'https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-2-ambientes-temporario-51328708.html'}
2023-03-27 22:26:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-comodo-de-2-ambientes-en-palermo-guise-51181330.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:26:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-comodo-de-2-ambientes-en-palermo-guise-51181330.html>
{'ambientes': '2',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'guise 1870',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '34',
 'm2_total': '34',
 'moneda': '$',
 'title': 'Departamento Cómodo de 2 Ambientes en Palermo (Guise)',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-comodo-de-2-ambientes-en-palermo-guise-51181330.html'}
2023-03-27 22:26:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tres-ambientes-con-balcon-muy-luminosos-excelente-51302765.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:26:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tres-ambientes-con-balcon-muy-luminosos-excelente-51302765.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Ugarte 1500',
 'dormitorios': '2',
 'expensas': ' 39.000',
 'm2_cub': '67',
 'm2_total': '72',
 'moneda': 'USD',
 'title': 'Tres Ambientes con Balcón Muy Luminosos - Excelente Zona',
 'url': 'https://www.zonaprop.com.ar/propiedades/tres-ambientes-con-balcon-muy-luminosos-excelente-51302765.html'}
2023-03-27 22:26:27 [scrapy.extensions.logstats] INFO: Crawled 380 pages (at 16 pages/min), scraped 354 items (at 14 items/min)
2023-03-27 22:26:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palermo-hoollywood-digno-de-verse-51144108.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:26:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palermo-hoollywood-digno-de-verse-51144108.html>
{'ambientes': '1',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'NICETO VEGA 5771',
 'expensas': ' 100',
 'm2_cub': '32',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Palermo Hoollywood Digno de Verse',
 'url': 'https://www.zonaprop.com.ar/propiedades/palermo-hoollywood-digno-de-verse-51144108.html'}
2023-03-27 22:26:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/magnifico-3-ambientes-con-cochera-a-estrenar-51185615.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:26:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/magnifico-3-ambientes-con-cochera-a-estrenar-51185615.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Beauchef',
 'dormitorios': '2',
 'expensas': ' 35.000',
 'm2_cub': '80',
 'm2_total': '85',
 'moneda': 'USD',
 'title': 'Magnífico 3 Ambientes con Cochera a Estrenar - Edificio Azcuy',
 'url': 'https://www.zonaprop.com.ar/propiedades/magnifico-3-ambientes-con-cochera-a-estrenar-51185615.html'}
2023-03-27 22:26:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-con-terraza-vista-hipodromo-51318331.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-con-terraza-vista-hipodromo-51318331.html>
{'ambientes': '1',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'San benito de palermo 1600 ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Alquiler Temporario con Terraza Vista Hipodromo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-con-terraza-vista-hipodromo-51318331.html'}
2023-03-27 22:26:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/nuevo-ingreso-chateau-libertador-4-amb-mas-dependencia-51134948.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/nuevo-ingreso-chateau-libertador-4-amb-mas-dependencia-51134948.html>
{'ambientes': '4',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Av del Libertador al 7000',
 'dormitorios': '3',
 'expensas': ' 170.000',
 'm2_cub': '213',
 'm2_total': '213',
 'moneda': 'USD',
 'title': 'Nuevo Ingreso Chateau Libertador 4 Amb Más Dependencia y Cochera '
          'Fija!',
 'url': 'https://www.zonaprop.com.ar/propiedades/nuevo-ingreso-chateau-libertador-4-amb-mas-dependencia-51134948.html'}
2023-03-27 22:26:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-sobre-av-quintana.-ubicacion-51345847.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-sobre-av-quintana.-ubicacion-51345847.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av. Quintana ',
 'dormitorios': '2',
 'expensas': ' 74.000',
 'm2_cub': '109',
 'm2_total': '109',
 'moneda': 'USD',
 'title': 'Excelente Departamento, Sobre Av Quintana. Ubicación Única',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-sobre-av-quintana.-ubicacion-51345847.html'}
2023-03-27 22:26:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-temporario-loft-palermo-51173026.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-temporario-loft-palermo-51173026.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Quartier Dorrego',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Quartier Dorrego - Alquiler Temporario Loft - Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-temporario-loft-palermo-51173026.html'}
2023-03-27 22:26:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-6-ambientes-4-dorms-c-dependencia-51272319.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-6-ambientes-4-dorms-c-dependencia-51272319.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Quintana 500',
 'dormitorios': '4',
 'expensas': ' 125.000',
 'm2_cub': '200',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Alquiler - 6 Ambientes - 4 Dorms C/ Dependencia + Escritorio, '
          'Remodelado - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-6-ambientes-4-dorms-c-dependencia-51272319.html'}
2023-03-27 22:26:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-27.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:26:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-retiro-51369993.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:26:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-retiro-51369993.html>
{'ambientes': '4',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'San Martin 793, 3er "F" Entre Av. Cordoba y Viamonte, Caba',
 'dormitorios': '3',
 'expensas': ' 49.244',
 'm2_cub': '68',
 'm2_total': '72',
 'moneda': '$',
 'title': 'Departamento - Retiro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-retiro-51369993.html'}
2023-03-27 22:27:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-palermo-nuevo-capital-51268057.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-palermo-nuevo-capital-51268057.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Beruti 4600',
 'dormitorios': '2',
 'expensas': ' 70.000',
 'm2_cub': '85',
 'm2_total': '95',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Palermo Nuevo, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-palermo-nuevo-capital-51268057.html'}
2023-03-27 22:27:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-amoblado-en-recoleta-51297398.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-amoblado-en-recoleta-51297398.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Posadas al 1100',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '47',
 'moneda': 'USD',
 'title': 'Departamento Amoblado en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-amoblado-en-recoleta-51297398.html'}
2023-03-27 22:27:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-dos-ambientes-en-puerto-madero-faena-51383834.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-dos-ambientes-en-puerto-madero-faena-51383834.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Petrona Eyle al 400',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '90',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Alquiler Dos Ambientes en Puerto Madero Faena',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-dos-ambientes-en-puerto-madero-faena-51383834.html'}
2023-03-27 22:27:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/jardin-quincho-pileta-propia!-4-amb-dos-cocheras-51216718.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/jardin-quincho-pileta-propia!-4-amb-dos-cocheras-51216718.html>
{'ambientes': '4',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Monroe al 4500',
 'dormitorios': '3',
 'expensas': ' 48.000',
 'm2_cub': '136',
 'm2_total': '281',
 'moneda': 'USD',
 'title': 'Jardín, Quincho, Pileta Propia! 4 Amb - Dos Cocheras - Disp 1 - 3 - '
          '2023',
 'url': 'https://www.zonaprop.com.ar/propiedades/jardin-quincho-pileta-propia!-4-amb-dos-cocheras-51216718.html'}
2023-03-27 22:27:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-ambientes-dependencia-3-cocheras-seguridad-51251024.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-ambientes-dependencia-3-cocheras-seguridad-51251024.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arribeños al 1600',
 'dormitorios': '3',
 'expensas': ' 210.000',
 'm2_cub': '204',
 'm2_total': '204',
 'moneda': 'USD',
 'title': '4 Ambientes, Dependencia, 3 Cocheras, Seguridad, Amenities, Torre. '
          'Belgrano.',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-ambientes-dependencia-3-cocheras-seguridad-51251024.html'}
2023-03-27 22:27:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/divina-casa-en-alquiler-en-barrio-river-con-piscina-51339784.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/divina-casa-en-alquiler-en-barrio-river-con-piscina-51339784.html>
{'ambientes': '5',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Ernesto Bavio 3100',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '290',
 'm2_total': '290',
 'moneda': 'USD',
 'title': 'Divina Casa en Alquiler en Barrio River con Piscina',
 'url': 'https://www.zonaprop.com.ar/propiedades/divina-casa-en-alquiler-en-barrio-river-con-piscina-51339784.html'}
2023-03-27 22:27:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-semipiso-en-alquiler-en-palermo-capital-51173744.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-semipiso-en-alquiler-en-palermo-capital-51173744.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Juncal 3100',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '90',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Departamento Semipiso en Alquiler en Palermo, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-semipiso-en-alquiler-en-palermo-capital-51173744.html'}
2023-03-27 22:27:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-3-dorm.-en-alquiler-c-2-cocheras-puerto-51366649.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-3-dorm.-en-alquiler-c-2-cocheras-puerto-51366649.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Olga Cossettini Puerto Madero ',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '147',
 'm2_total': '149',
 'moneda': 'USD',
 'title': 'Excelente 3 Dorm. en Alquiler C/2 Cocheras Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-3-dorm.-en-alquiler-c-2-cocheras-puerto-51366649.html'}
2023-03-27 22:27:27 [scrapy.extensions.logstats] INFO: Crawled 397 pages (at 17 pages/min), scraped 370 items (at 16 items/min)
2023-03-27 22:27:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-saavedra-51337276.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-saavedra-51337276.html>
{'ambientes': '3',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Arias al 3600',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '69',
 'm2_total': '155',
 'moneda': '$',
 'title': 'PH - Saavedra',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-saavedra-51337276.html'}
2023-03-27 22:27:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-28.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-de-2amb.-exte-estado!-a-cuadras-de-la-fctad-de-51280483.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-de-2amb.-exte-estado!-a-cuadras-de-la-fctad-de-51280483.html>
{'ambientes': '2',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Esparza 20',
 'dormitorios': '1',
 'expensas': ' 13.000',
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Depto de 2amb. Exte Estado! a Cuadras de La Fctad de Psicologia y '
          'del Subte!',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-de-2amb.-exte-estado!-a-cuadras-de-la-fctad-de-51280483.html'}
2023-03-27 22:27:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/olazabal-y-ciudad-de-la-paz.-a-m.-de-la-av-cabildo.-3-51225827.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/olazabal-y-ciudad-de-la-paz.-a-m.-de-la-av-cabildo.-3-51225827.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Olazabal al 2500',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '54',
 'm2_total': '54',
 'moneda': '$',
 'title': 'Olazábal y Ciudad de La Paz. a m. de La Av Cabildo. 3 Amb. Apto '
          'Profesional/ Comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/olazabal-y-ciudad-de-la-paz.-a-m.-de-la-av-cabildo.-3-51225827.html'}
2023-03-27 22:27:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51219009.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51219009.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Pacheco de Melo al 2000',
 'dormitorios': '2',
 'expensas': ' 80.000',
 'm2_cub': '133',
 'm2_total': '147',
 'moneda': '$',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51219009.html'}
2023-03-27 22:27:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-casa-de-estilo-frances-en-belgrano.-con-51369380.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-casa-de-estilo-frances-en-belgrano.-con-51369380.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Loreto Virrey al 2100',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '318',
 'm2_total': '490',
 'moneda': 'USD',
 'title': 'Espectacular Casa de Estilo Frances en Belgrano. con Piscina '
          'Reciclada Amoblada y Equipada',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-casa-de-estilo-frances-en-belgrano.-con-51369380.html'}
2023-03-27 22:27:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-3-ambientes-recoleta-51292580.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-3-ambientes-recoleta-51292580.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Rodriguez Peña al 2000',
 'dormitorios': '2',
 'expensas': ' 18.000',
 'm2_cub': '59',
 'm2_total': '68',
 'moneda': 'USD',
 'title': 'Departamento Alquiler 3 Ambientes - Recoleta - Rodriguez Peña 2000',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-3-ambientes-recoleta-51292580.html'}
2023-03-27 22:27:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/guido-1900-2-ambientes-con-muebles-a-nuevo-51372800.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/guido-1900-2-ambientes-con-muebles-a-nuevo-51372800.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Guido al 1900',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': 'USD',
 'title': 'Guido 1900 - 2 Ambientes con Muebles a Nuevo',
 'url': 'https://www.zonaprop.com.ar/propiedades/guido-1900-2-ambientes-con-muebles-a-nuevo-51372800.html'}
2023-03-27 22:27:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-piso-alto-balcon-terraza-vista-al-rio-51357015.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-piso-alto-balcon-terraza-vista-al-rio-51357015.html>
{'ambientes': '4',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Av. del Libertador al 5200',
 'dormitorios': '3',
 'expensas': ' 180.000',
 'm2_cub': '320',
 'm2_total': '340',
 'moneda': 'USD',
 'title': 'Departamento Piso Alto Balcón Terraza Vista Al Rio Sobre Av del '
          'Libertador',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-piso-alto-balcon-terraza-vista-al-rio-51357015.html'}
2023-03-27 22:27:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-venta-y-alquiler-frances-recoleta-av-51292591.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:27:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:27:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-venta-y-alquiler-frances-recoleta-av-51292591.html>
{'ambientes': '7',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av Las Heras al 1600',
 'dormitorios': '5',
 'expensas': ' 20.000',
 'm2_cub': '624',
 'm2_total': '624',
 'moneda': 'USD',
 'title': 'Departamento Venta y Alquiler Francés - Recoleta Av Las Heras y '
          'Montevideo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-venta-y-alquiler-frances-recoleta-av-51292591.html'}
2023-03-27 22:28:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semi-piso-recoleta-51300248.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semi-piso-recoleta-51300248.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av. Alvear 1800-recoleta',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '140',
 'm2_total': '140',
 'moneda': '$',
 'title': 'Semi Piso - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/semi-piso-recoleta-51300248.html'}
2023-03-27 22:28:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-4-amb-en-alquiler-impecable-con-51339616.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-4-amb-en-alquiler-impecable-con-51339616.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av. Pueyrredón al 1400',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '160',
 'm2_total': '164',
 'moneda': 'USD',
 'title': 'Departamento de 4 Amb en Alquiler Impecable con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-4-amb-en-alquiler-impecable-con-51339616.html'}
2023-03-27 22:28:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/divino-piso-de-tres-dorm.-y-depenencia-en-plaza-vte.-51372806.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/divino-piso-de-tres-dorm.-y-depenencia-en-plaza-vte.-51372806.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Juncal al 1400',
 'dormitorios': '3',
 'expensas': ' 90.000',
 'm2_cub': '165',
 'm2_total': '165',
 'moneda': 'USD',
 'title': 'Divino Piso de Tres Dorm. y Depenencia en Plaza Vte. López. '
          'Reciclado Impecable',
 'url': 'https://www.zonaprop.com.ar/propiedades/divino-piso-de-tres-dorm.-y-depenencia-en-plaza-vte.-51372806.html'}
2023-03-27 22:28:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-con-cochera-51266082.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-con-cochera-51266082.html>
{'ambientes': '3',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Demaría y Sinclair',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '86',
 'm2_total': '102',
 'moneda': 'USD',
 'title': 'Alquiler Departamento de 3 Ambientes con Cochera - Palermo Nuevo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-con-cochera-51266082.html'}
2023-03-27 22:28:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-unidad-muy-amplia-y-luminosa.-dos-dorm.-51345375.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-unidad-muy-amplia-y-luminosa.-dos-dorm.-51345375.html>
{'ambientes': '4',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Artigas al 500',
 'dormitorios': '2',
 'expensas': ' 16.500',
 'm2_cub': '98',
 'm2_total': '98',
 'moneda': '$',
 'title': 'Excelente Unidad, Muy Amplia y Luminosa. Dos Dorm., Baño, Cocina, '
          'Lavadero, Dependencia',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-unidad-muy-amplia-y-luminosa.-dos-dorm.-51345375.html'}
2023-03-27 22:28:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes.-art-tower-en-alto-palermo.-51372813.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes.-art-tower-en-alto-palermo.-51372813.html>
{'ambientes': '5',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Diaz Cnel. Av. al 2100',
 'dormitorios': '4',
 'expensas': ' 190.000',
 'm2_cub': '220',
 'm2_total': '280',
 'moneda': 'USD',
 'title': 'Departamento 5 Ambientes. Art Tower, en Alto Palermo.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes.-art-tower-en-alto-palermo.-51372813.html'}
2023-03-27 22:28:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/oportunidad!-moderno-piso-3-ambientes-2-balcones-2-51368313.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/oportunidad!-moderno-piso-3-ambientes-2-balcones-2-51368313.html>
{'ambientes': '3',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'Av Mosconi al 3200',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '52',
 'm2_total': '71',
 'moneda': '$',
 'title': 'Oportunidad! Moderno Piso 3 Ambientes 2 Balcones 2 Baños',
 'url': 'https://www.zonaprop.com.ar/propiedades/oportunidad!-moderno-piso-3-ambientes-2-balcones-2-51368313.html'}
2023-03-27 22:28:27 [scrapy.extensions.logstats] INFO: Crawled 414 pages (at 17 pages/min), scraped 386 items (at 16 items/min)
2023-03-27 22:28:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-semipiso-en-alquiler-en-palermo-capital-51266346.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-semipiso-en-alquiler-en-palermo-capital-51266346.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Maure 1600',
 'dormitorios': '3',
 'expensas': 0,
 'm2_total': '107',
 'moneda': 'USD',
 'title': 'Departamento Semipiso en Alquiler en Palermo, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-semipiso-en-alquiler-en-palermo-capital-51266346.html'}
2023-03-27 22:28:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-29.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/austria-2600-entre-a.-del-libertador-y-av-las-heras-51249671.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/austria-2600-entre-a.-del-libertador-y-av-las-heras-51249671.html>
{'ambientes': '6',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Austria 2600',
 'dormitorios': '4',
 'expensas': ' 134.000',
 'm2_cub': '280',
 'm2_total': '280',
 'moneda': 'USD',
 'title': 'Austria 2600, (Entre A. del Libertador y Av Las Heras) Palermo - '
          'Terraza!',
 'url': 'https://www.zonaprop.com.ar/propiedades/austria-2600-entre-a.-del-libertador-y-av-las-heras-51249671.html'}
2023-03-27 22:28:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51306695.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51306695.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'AV. Rivadavia al 6000',
 'dormitorios': '2',
 'expensas': ' 12.000',
 'm2_cub': '63',
 'm2_total': '69',
 'moneda': '$',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51306695.html'}
2023-03-27 22:28:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-con-terraza-gran-vista-en-alquiler-51388778.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-con-terraza-gran-vista-en-alquiler-51388778.html>
{'ambientes': '1',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'JUAN MARIA GUTIERREZ 3900. Entre Republica de la india y '
              'Lafinur',
 'expensas': 0,
 'm2_cub': '38',
 'm2_total': '44',
 'moneda': 'USD',
 'title': 'Monoambiente con Terraza Gran Vista en Alquiler Temporario P',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-con-terraza-gran-vista-en-alquiler-51388778.html'}
2023-03-27 22:28:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-3-amb-cocina-y-bano-a-nuevo-1-por-escalera-51285873.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-3-amb-cocina-y-bano-a-nuevo-1-por-escalera-51285873.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Malvinas Argentinas 358',
 'dormitorios': '2',
 'expensas': ' 10.000',
 'm2_cub': '68',
 'm2_total': '68',
 'moneda': '$',
 'title': 'PH 3 Amb, Cocina y Baño a Nuevo, 1° por Escalera, S/luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-3-amb-cocina-y-bano-a-nuevo-1-por-escalera-51285873.html'}
2023-03-27 22:28:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-acogedor-recoleta-dueno-alquila-51289959.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-acogedor-recoleta-dueno-alquila-51289959.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Ayacucho 1386',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Departamento Acogedor Recoleta - Dueño Alquila',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-acogedor-recoleta-dueno-alquila-51289959.html'}
2023-03-27 22:28:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-ubicacion-con-ambientes-grandes-y-balcon-51388407.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-ubicacion-con-ambientes-grandes-y-balcon-51388407.html>
{'ambientes': '2',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'Av. Forest 800 6°',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_cub': '42',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Excelente Ubicación con Ambientes Grandes y Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-ubicacion-con-ambientes-grandes-y-balcon-51388407.html'}
2023-03-27 22:28:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/penthouse-alquiler-faena-51299494.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:28:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:28:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/penthouse-alquiler-faena-51299494.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Petrona Eyle al 400',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '220',
 'm2_total': '330',
 'moneda': 'USD',
 'title': 'Penthouse Alquiler Faena',
 'url': 'https://www.zonaprop.com.ar/propiedades/penthouse-alquiler-faena-51299494.html'}
2023-03-27 22:29:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/divino-y-exclusivo-ph-en-belgrano-3-pisos-terraza-51377066.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/divino-y-exclusivo-ph-en-belgrano-3-pisos-terraza-51377066.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Manuel Ugarte ',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '152',
 'm2_total': '189',
 'moneda': 'USD',
 'title': 'Divino y Exclusivo PH en Belgrano - 3 Pisos - Terraza Propia!',
 'url': 'https://www.zonaprop.com.ar/propiedades/divino-y-exclusivo-ph-en-belgrano-3-pisos-terraza-51377066.html'}
2023-03-27 22:29:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-super-luminosos!-51162839.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-super-luminosos!-51162839.html>
{'ambientes': '2',
 'barrio': ', Villa General Mitre, Capital Federal',
 'direccion': 'BOLIVIA 2000',
 'dormitorios': '1',
 'expensas': ' 9.000',
 'm2_cub': '42',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes Super Luminosos!',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-super-luminosos!-51162839.html'}
2023-03-27 22:29:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51322323.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51322323.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Encarnacion Ezcurra al 300',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '75',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51322323.html'}
2023-03-27 22:29:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-palermo-51230267.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-palermo-51230267.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Cerviño y Oro ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '74',
 'moneda': 'USD',
 'title': 'Alquiler – Departamento – Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-palermo-51230267.html'}
2023-03-27 22:29:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/luminoso-2-ambientes-51309447.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/luminoso-2-ambientes-51309447.html>
{'ambientes': '1',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Melincué 2400',
 'dormitorios': '1',
 'expensas': ' 9.800',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Luminoso 2 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/luminoso-2-ambientes-51309447.html'}
2023-03-27 22:29:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/duplex-con-la-mejor-vista-51324616.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/duplex-con-la-mejor-vista-51324616.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Figueroa Alcorta 3000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '170',
 'm2_total': '190',
 'moneda': 'USD',
 'title': 'Duplex con La Mejor Vista',
 'url': 'https://www.zonaprop.com.ar/propiedades/duplex-con-la-mejor-vista-51324616.html'}
2023-03-27 22:29:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/magnifico-triplex-con-terraza-y-parrilla-en-demaria-y-51237887.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/magnifico-triplex-con-terraza-y-parrilla-en-demaria-y-51237887.html>
{'ambientes': '6',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Demaria al 4400',
 'dormitorios': '3',
 'expensas': ' 100.000',
 'm2_cub': '180',
 'm2_total': '237',
 'moneda': 'USD',
 'title': 'Magnífico Triplex con Terraza y Parrilla en Demaria y Oro',
 'url': 'https://www.zonaprop.com.ar/propiedades/magnifico-triplex-con-terraza-y-parrilla-en-demaria-y-51237887.html'}
2023-03-27 22:29:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/libertador-1000.-recoleta.-cinco-dorm.-con-vista-a-51369381.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/libertador-1000.-recoleta.-cinco-dorm.-con-vista-a-51369381.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Del Libertador Av. al 1000',
 'dormitorios': '5',
 'expensas': ' 152.786',
 'm2_cub': '202',
 'm2_total': '202',
 'moneda': 'USD',
 'title': 'Libertador 1000. Recoleta. Cinco Dorm. con Vista a Parque.',
 'url': 'https://www.zonaprop.com.ar/propiedades/libertador-1000.-recoleta.-cinco-dorm.-con-vista-a-51369381.html'}
2023-03-27 22:29:27 [scrapy.extensions.logstats] INFO: Crawled 431 pages (at 17 pages/min), scraped 402 items (at 16 items/min)
2023-03-27 22:29:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-reciclado-sin-51380843.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-reciclado-sin-51380843.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Diaz Colodrero al 2700',
 'dormitorios': '1',
 'expensas': ' 9.000',
 'm2_cub': '44',
 'm2_total': '48',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes con Balcón, Reciclado Sin Uso. Eléctrico. '
          'Muy Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-reciclado-sin-51380843.html'}
2023-03-27 22:29:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-30.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/vicente-lopez-1700-semipiso-piso-2-al-frente-amoblado-51287354.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/vicente-lopez-1700-semipiso-piso-2-al-frente-amoblado-51287354.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Vicente López 1700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '34',
 'm2_total': '34',
 'moneda': 'USD',
 'title': 'Vicente López 1700 Semipiso Piso 2 Al Frente Amoblado y Equipado 34 '
          'm² Impecable',
 'url': 'https://www.zonaprop.com.ar/propiedades/vicente-lopez-1700-semipiso-piso-2-al-frente-amoblado-51287354.html'}
2023-03-27 22:29:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alberti-1600.-departamento-de-3-ambientes-en-alquiler.-51364544.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alberti-1600.-departamento-de-3-ambientes-en-alquiler.-51364544.html>
{'ambientes': '3',
 'barrio': ', Parque Patricios, Capital Federal',
 'direccion': 'Alberti al 1600',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '42',
 'm2_total': '44',
 'moneda': '$',
 'title': 'Alberti 1600. Departamento de 3 Ambientes en Alquiler. Parque '
          'Patricios',
 'url': 'https://www.zonaprop.com.ar/propiedades/alberti-1600.-departamento-de-3-ambientes-en-alquiler.-51364544.html'}
2023-03-27 22:29:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-roosevelt-franklin-al-51134299.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-roosevelt-franklin-al-51134299.html>
{'ambientes': '1',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Roosevelt Franklin 1800. Entre 3 de febrero y 11 de septiembre',
 'expensas': 0,
 'm2_cub': '28',
 'm2_total': '28',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente. | Roosevelt Franklin Al 1800',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-roosevelt-franklin-al-51134299.html'}
2023-03-27 22:29:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51178802.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51178802.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av Las Heras Al 3300',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51178802.html'}
2023-03-27 22:29:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto.-alquiler-2-3-amb-contrafrente-piso-13-lavad-51386174.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto.-alquiler-2-3-amb-contrafrente-piso-13-lavad-51386174.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Amenabar 1055',
 'dormitorios': '2',
 'expensas': ' 27.000',
 'm2_cub': '48',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Depto. Alquiler 2/3 Amb Contrafrente Piso 13 Lavad, Losa Radiante, '
          'Espacio Guardacoche',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto.-alquiler-2-3-amb-contrafrente-piso-13-lavad-51386174.html'}
2023-03-27 22:29:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-retiro-51262017.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:29:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:29:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-retiro-51262017.html>
{'ambientes': '5',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Av Libertador al 300- Retiro -5 Ambientes-amoblado',
 'dormitorios': '4',
 'expensas': ' 140.000',
 'm2_cub': '237',
 'm2_total': '255',
 'moneda': 'USD',
 'title': 'Departamento en Retiro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-retiro-51262017.html'}
2023-03-27 22:30:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/optimo-con-gran-balcon.-vista-al-polo.-impecable.-51327254.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/optimo-con-gran-balcon.-vista-al-polo.-impecable.-51327254.html>
{'ambientes': '2',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Chenaut al 1700',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '75',
 'm2_total': '93',
 'moneda': 'USD',
 'title': 'Óptimo con Gran Balcón. Vista Al Polo. Impecable.',
 'url': 'https://www.zonaprop.com.ar/propiedades/optimo-con-gran-balcon.-vista-al-polo.-impecable.-51327254.html'}
2023-03-27 22:30:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-18-frente-vista-al-rio-y-ciudad-4-coch.-alvear-y-51338763.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-18-frente-vista-al-rio-y-ciudad-4-coch.-alvear-y-51338763.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'AV. ALVEAR 1491',
 'dormitorios': '3',
 'expensas': ' 246.000',
 'm2_cub': '307',
 'm2_total': '335',
 'moneda': 'USD',
 'title': 'Piso 18 Frente Vista Al Río y Ciudad 4 Coch. Alvear y Parera Balcón '
          'Aterrazado',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-18-frente-vista-al-rio-y-ciudad-4-coch.-alvear-y-51338763.html'}
2023-03-27 22:30:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-paternal-51378211.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-paternal-51378211.html>
{'ambientes': '2',
 'barrio': ', La Paternal, Capital Federal',
 'direccion': 'Av. San Martin al 3500',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Departamento en Paternal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-paternal-51378211.html'}
2023-03-27 22:30:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/a-estrenar-2-ambientes-muy-luminoso-51366206.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/a-estrenar-2-ambientes-muy-luminoso-51366206.html>
{'ambientes': '2',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Cucha Cucha 1700 5°',
 'dormitorios': '1',
 'expensas': ' 7.000',
 'm2_cub': '42',
 'm2_total': '47',
 'moneda': '$',
 'title': 'A Estrenar - 2 Ambientes - Muy Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/a-estrenar-2-ambientes-muy-luminoso-51366206.html'}
2023-03-27 22:30:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-cabello-al-3400-51134381.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-cabello-al-3400-51134381.html>
{'ambientes': '1',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Cabello 3400. Entre Salguero y Paunero',
 'expensas': ' 19.000',
 'm2_cub': '40',
 'm2_total': '42',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente. | Cabello Al 3400',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-cabello-al-3400-51134381.html'}
2023-03-27 22:30:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/belgrano-cramer-al-2400-51222507.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/belgrano-cramer-al-2400-51222507.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cramer 2400',
 'dormitorios': '2',
 'expensas': ' 60.000',
 'm2_cub': '83',
 'm2_total': '90',
 'moneda': '$',
 'title': 'Belgrano, Cramer Al 2400',
 'url': 'https://www.zonaprop.com.ar/propiedades/belgrano-cramer-al-2400-51222507.html'}
2023-03-27 22:30:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-nuevo-soler-3800-palermo-51277329.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-nuevo-soler-3800-palermo-51277329.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Soler ',
 'expensas': 0,
 'm2_cub': '22',
 'm2_total': '22',
 'moneda': 'USD',
 'title': 'Monoambiente Nuevo - Soler 3800, Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-nuevo-soler-3800-palermo-51277329.html'}
2023-03-27 22:30:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-vista-al-dique-ba-houses-puerto-madero-51364498.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-vista-al-dique-ba-houses-puerto-madero-51364498.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Olga Cossettini al 1100',
 'dormitorios': '2',
 'expensas': 0,
 'm2_total': '90',
 'moneda': 'USD',
 'title': '3 Ambientes Vista Al Dique - Ba Houses - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-vista-al-dique-ba-houses-puerto-madero-51364498.html'}
2023-03-27 22:30:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-almagro!-51304946.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-almagro!-51304946.html>
{'ambientes': '2',
 'barrio': ', Almagro Sur, Almagro',
 'direccion': 'Sanchez de Bustamante 100',
 'dormitorios': '1',
 'expensas': ' 5.500',
 'm2_cub': '45',
 'moneda': '$',
 'title': 'Alquiler 2 Ambientes en Almagro!',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-almagro!-51304946.html'}
2023-03-27 22:30:27 [scrapy.extensions.logstats] INFO: Crawled 448 pages (at 17 pages/min), scraped 418 items (at 16 items/min)
2023-03-27 22:30:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-en-inmejorable-ubicacion-51381926.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-en-inmejorable-ubicacion-51381926.html>
{'ambientes': '2',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Avenida Corrientes 5947',
 'dormitorios': '1',
 'expensas': ' 10.500',
 'm2_cub': '33',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Excelente 2 Ambientes en Inmejorable Ubicación',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-en-inmejorable-ubicacion-51381926.html'}
2023-03-27 22:30:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-31.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/v.-santa-rita-flores-dep.-3-amb-impecable-nazca-al-51139800.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/v.-santa-rita-flores-dep.-3-amb-impecable-nazca-al-51139800.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Nazca 1425',
 'dormitorios': '2',
 'expensas': ' 21.000',
 'm2_cub': '73',
 'm2_total': '78',
 'moneda': '$',
 'title': 'V. Santa Rita/ Flores Dep. 3 Amb Impecable Nazca Al 1400',
 'url': 'https://www.zonaprop.com.ar/propiedades/v.-santa-rita-flores-dep.-3-amb-impecable-nazca-al-51139800.html'}
2023-03-27 22:30:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/grecia-4700-nunez-capital-federal-51319543.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/grecia-4700-nunez-capital-federal-51319543.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Grecia 4700',
 'dormitorios': '2',
 'expensas': ' 40.000',
 'm2_cub': '75',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Grecia 4700 - Nuñez - Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/grecia-4700-nunez-capital-federal-51319543.html'}
2023-03-27 22:30:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-rivadavia-y-junin-torre-vig.-2-amb.-46-m.-lum.-51278522.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-rivadavia-y-junin-torre-vig.-2-amb.-46-m.-lum.-51278522.html>
{'ambientes': '2',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Av. Rivadavia 2151',
 'dormitorios': '1',
 'expensas': ' 12.309',
 'm2_cub': '46',
 'm2_total': '46',
 'moneda': '$',
 'title': 'Av Rivadavia y Junin, Torre, Vig. 2 Amb. 46 m. Lum. Contfte.',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-rivadavia-y-junin-torre-vig.-2-amb.-46-m.-lum.-51278522.html'}
2023-03-27 22:30:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-ohiggins-1700-3-amb.-belgrano-51242662.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-ohiggins-1700-3-amb.-belgrano-51242662.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Ohiggins 1700',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '75',
 'moneda': 'USD',
 'title': 'Alquiler Ohiggins 1700 3 Amb. Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-ohiggins-1700-3-amb.-belgrano-51242662.html'}
2023-03-27 22:30:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-sin-muebles-consultar-51356272.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-sin-muebles-consultar-51356272.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': '11 de Septiembre de 1888 al 4300 I Nuñez',
 'dormitorios': '1',
 'expensas': ' 26.000',
 'm2_cub': '42',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Alquiler Temporario Sin Muebles - Consultar - Departamento 2 Amb C/ '
          'Balcón Edif. Amenities Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-sin-muebles-consultar-51356272.html'}
2023-03-27 22:30:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lujoso-ph-en-alquiler-a-estrenar-flores-bolivia-51386974.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:30:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:30:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lujoso-ph-en-alquiler-a-estrenar-flores-bolivia-51386974.html>
{'ambientes': '3',
 'barrio': ', Flores Norte, Flores',
 'direccion': 'BOLIVIA 700',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '130',
 'moneda': '$',
 'title': 'Lujoso PH en Alquiler a Estrenar - Flores - Bolivia 700',
 'url': 'https://www.zonaprop.com.ar/propiedades/lujoso-ph-en-alquiler-a-estrenar-flores-bolivia-51386974.html'}
2023-03-27 22:31:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-belgrano-chico-51165895.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-belgrano-chico-51165895.html>
{'ambientes': '6',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Mendoza al 1300',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '127',
 'm2_total': '246',
 'moneda': 'USD',
 'title': 'PH - Belgrano Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-belgrano-chico-51165895.html'}
2023-03-27 22:31:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ramsay-1800-3-amb-100-m-amoblado-cochera-amenities-51386629.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ramsay-1800-3-amb-100-m-amoblado-cochera-amenities-51386629.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Ramsay 1800',
 'dormitorios': '2',
 'expensas': ' 100.000',
 'm2_cub': '100',
 'm2_total': '112',
 'moneda': 'USD',
 'title': 'Ramsay 1800 3 Amb 100 m Amoblado Cochera Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/ramsay-1800-3-amb-100-m-amoblado-cochera-amenities-51386629.html'}
2023-03-27 22:31:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/estilo-frances.-categoria.-51174339.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/estilo-frances.-categoria.-51174339.html>
{'ambientes': '8',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Talcahuano e/ Arenales y Juncal',
 'dormitorios': '5',
 'expensas': 0,
 'm2_cub': '516',
 'm2_total': '559',
 'moneda': 'USD',
 'title': 'Estilo Francés. Categoría.',
 'url': 'https://www.zonaprop.com.ar/propiedades/estilo-frances.-categoria.-51174339.html'}
2023-03-27 22:31:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-charcas-4000-usd-51373449.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-charcas-4000-usd-51373449.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Charcas ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '62',
 'moneda': 'USD',
 'title': 'Alquiler - 2 Ambientes - Palermo - Charcas 4000 - Usd 900 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-charcas-4000-usd-51373449.html'}
2023-03-27 22:31:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-2-ambientes-retiro-51359174.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-2-ambientes-retiro-51359174.html>
{'ambientes': '2',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Cerrito al 1600',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Alquiler Temporario 2 Ambientes Retiro',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-2-ambientes-retiro-51359174.html'}
2023-03-27 22:31:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-zona.-las-heras-y-ayacucho-51213628.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-zona.-las-heras-y-ayacucho-51213628.html>
{'ambientes': '5',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'AVENIDA LAS HERAS 1900',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '217',
 'm2_total': '225',
 'moneda': 'USD',
 'title': 'Excelente Zona. - Las Heras y Ayacucho',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-zona.-las-heras-y-ayacucho-51213628.html'}
2023-03-27 22:31:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-boedo-51381040.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-boedo-51381040.html>
{'ambientes': '3',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Av. Juan de Garay 3700',
 'dormitorios': '2',
 'expensas': ' 2.500',
 'm2_cub': '60',
 'm2_total': '84',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes en Boedo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-boedo-51381040.html'}
2023-03-27 22:31:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-le-parc-unidad-213-m-sup2--con-51159677.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-le-parc-unidad-213-m-sup2--con-51159677.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Av. Figueroa Alcorta al 3300',
 'dormitorios': '3',
 'expensas': ' 918.000',
 'm2_cub': '206',
 'm2_total': '213',
 'moneda': 'USD',
 'title': 'Alquiler Amoblado Le Parc Unidad 213 m² con Cocheras Unico Muy '
          'Buena Vista Al Norte y Al Rio',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-le-parc-unidad-213-m-sup2--con-51159677.html'}
2023-03-27 22:31:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-a-estrenar-belgrano-chico-51275149.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-a-estrenar-belgrano-chico-51275149.html>
{'ambientes': '2',
 'barrio': ', Belgrano Chico, Belgrano',
 'direccion': 'Migueletes ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '22',
 'm2_total': '22',
 'moneda': 'USD',
 'title': '2 Ambientes a Estrenar - Belgrano Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-a-estrenar-belgrano-chico-51275149.html'}
2023-03-27 22:31:27 [scrapy.extensions.logstats] INFO: Crawled 465 pages (at 17 pages/min), scraped 434 items (at 16 items/min)
2023-03-27 22:31:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-villa-pueyrredon-51152193.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-villa-pueyrredon-51152193.html>
{'ambientes': '4',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'Gral. José G de Artigas 4800',
 'dormitorios': '3',
 'expensas': ' 17.000',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Departamento 4 Ambientes - Villa Pueyrredón',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-villa-pueyrredon-51152193.html'}
2023-03-27 22:31:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-32.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-temporal-amoblado-full-51181339.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-temporal-amoblado-full-51181339.html>
{'ambientes': '1',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Amenabar ',
 'expensas': 0,
 'm2_cub': '32',
 'm2_total': '36',
 'moneda': 'USD',
 'title': 'Monoambiente en Alquiler Temporal Amoblado Full Amenities a '
          'Estrenar Todo Diseño',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-temporal-amoblado-full-51181339.html'}
2023-03-27 22:31:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/conesa-1000-2-amb-70-m-sin-mueble-cochera-amenities-51359382.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/conesa-1000-2-amb-70-m-sin-mueble-cochera-amenities-51359382.html>
{'ambientes': '2',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Conesa 1000',
 'dormitorios': '1',
 'expensas': ' 90.000',
 'm2_cub': '62',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Conesa 1000 2 Amb 70 m Sin Mueble Cochera Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/conesa-1000-2-amb-70-m-sin-mueble-cochera-amenities-51359382.html'}
2023-03-27 22:31:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-palermo-hollywood-2-amb.-amoblado-y-51156862.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-palermo-hollywood-2-amb.-amoblado-y-51156862.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Armenia 1900',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '43',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Alquiler Palermo Hollywood, 2 Amb. Amoblado y Equipado. coch. '
          'Fija!l',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-palermo-hollywood-2-amb.-amoblado-y-51156862.html'}
2023-03-27 22:31:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-3-ambientes-al-frente-con-dos-balcones-51213160.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-3-ambientes-al-frente-con-dos-balcones-51213160.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Dr. Luis Agote 2200',
 'dormitorios': '2',
 'expensas': ' 34.500',
 'm2_cub': '75',
 'm2_total': '104',
 'moneda': 'USD',
 'title': 'Alquiler de 3 Ambientes Al Frente con Dos Balcones, Baulera y '
          'Cochera - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-3-ambientes-al-frente-con-dos-balcones-51213160.html'}
2023-03-27 22:31:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-barrio-norte-capital-51324455.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-barrio-norte-capital-51324455.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Montevideo 1000',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Departamento en Alquiler en Barrio Norte, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-barrio-norte-capital-51324455.html'}
2023-03-27 22:31:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-del-libertador-5000-excelente-piso-vista-abierta-51182439.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-del-libertador-5000-excelente-piso-vista-abierta-51182439.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av Del Libertador al 5000',
 'dormitorios': '3',
 'expensas': ' 100.000',
 'm2_cub': '150',
 'm2_total': '160',
 'moneda': 'USD',
 'title': 'Av del Libertador 5000 - Excelente Piso Vista Abierta - 3 Dorm. con '
          'Dependencia y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-del-libertador-5000-excelente-piso-vista-abierta-51182439.html'}
2023-03-27 22:31:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espec-oficina-con-cochera-en-molina-ciudad!-solo-uso-51216758.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:31:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:31:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espec-oficina-con-cochera-en-molina-ciudad!-solo-uso-51216758.html>
{'barrio': ', Barracas, Capital Federal',
 'direccion': 'Av Regimiento de Patricios al 1000',
 'expensas': ' 47.000',
 'm2_cub': '96',
 'm2_total': '102',
 'moneda': '$',
 'title': 'Espec Oficina con Cochera en Molina Ciudad! Solo Uso '
          'Profesional/comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/espec-oficina-con-cochera-en-molina-ciudad!-solo-uso-51216758.html'}
2023-03-27 22:32:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/parera-y-av-alvear-espectacular-frances-7-ambs-51272996.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/parera-y-av-alvear-espectacular-frances-7-ambs-51272996.html>
{'ambientes': '7',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Parera',
 'dormitorios': '4',
 'expensas': ' 320.523',
 'm2_cub': '332',
 'm2_total': '332',
 'moneda': 'USD',
 'title': 'Parera y Av Alvear | Espectacular Francés 7 Ambs Premium Patios '
          'Balcones 2 Cochas',
 'url': 'https://www.zonaprop.com.ar/propiedades/parera-y-av-alvear-espectacular-frances-7-ambs-51272996.html'}
2023-03-27 22:32:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-divisible-c-cocina-lavadero-y-51380328.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-divisible-c-cocina-lavadero-y-51380328.html>
{'ambientes': '1',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Sarandí 900',
 'expensas': 0,
 'm2_cub': '35',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Amplio Monoambiente Divisible C/cocina, Lavadero y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-divisible-c-cocina-lavadero-y-51380328.html'}
2023-03-27 22:32:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-51295091.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-51295091.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Sánchez de Bustamante 2231',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '75',
 'm2_total': '75',
 'moneda': '$',
 'title': '3 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-51295091.html'}
2023-03-27 22:32:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-casa-en-belgrano-r!-alquiler-51267931.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-casa-en-belgrano-r!-alquiler-51267931.html>
{'ambientes': '7',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Estomba 2069',
 'dormitorios': '5',
 'expensas': 0,
 'm2_cub': '400',
 'm2_total': '400',
 'moneda': 'USD',
 'title': 'Excelente Casa en Belgrano R! Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-casa-en-belgrano-r!-alquiler-51267931.html'}
2023-03-27 22:32:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dos-amb-amueblado-en-paraguay-4200-51325549.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dos-amb-amueblado-en-paraguay-4200-51325549.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'PARAGUAY 4200',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '52',
 'm2_total': '52',
 'moneda': 'USD',
 'title': 'Dos Amb Amueblado en Paraguay 4200',
 'url': 'https://www.zonaprop.com.ar/propiedades/dos-amb-amueblado-en-paraguay-4200-51325549.html'}
2023-03-27 22:32:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-51154226.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-51154226.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Bayres Dock- Olga Cossettini 1112 - 4 Ambientes-2 Cocheras- '
              'Puerto Madero',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '165',
 'm2_total': '165',
 'moneda': 'USD',
 'title': 'Alquiler - Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-51154226.html'}
2023-03-27 22:32:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-full-equipado-51199588.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-full-equipado-51199588.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Paraguay 4100',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Excelente 2 Ambientes Full Equipado',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-full-equipado-51199588.html'}
2023-03-27 22:32:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/edificio-de-gran-categoria.-impecable-estado.-super-51372187.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/edificio-de-gran-categoria.-impecable-estado.-super-51372187.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Guido 1600',
 'dormitorios': '3',
 'expensas': ' 150.000',
 'm2_cub': '156',
 'm2_total': '162',
 'moneda': 'USD',
 'title': 'Edificio de Gran Categoria. Impecable Estado. Super Luminoso. '
          'Cochera.',
 'url': 'https://www.zonaprop.com.ar/propiedades/edificio-de-gran-categoria.-impecable-estado.-super-51372187.html'}
2023-03-27 22:32:27 [scrapy.extensions.logstats] INFO: Crawled 482 pages (at 17 pages/min), scraped 450 items (at 16 items/min)
2023-03-27 22:32:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-departamento-5-ambientes-colegiales-51279425.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-departamento-5-ambientes-colegiales-51279425.html>
{'ambientes': '4',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Zapata 500 (esq. Guatemala)',
 'dormitorios': '4',
 'expensas': ' 20.000',
 'm2_cub': '20',
 'm2_total': '700',
 'moneda': 'USD',
 'title': 'Venta - Departamento 5 Ambientes - Colegiales',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-departamento-5-ambientes-colegiales-51279425.html'}
2023-03-27 22:32:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-33.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-alquiler-4-ambientes-51204656.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-alquiler-4-ambientes-51204656.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Av. San Juan al 4300',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_cub': '85',
 'm2_total': '90',
 'moneda': '$',
 'title': 'Departamento - Caballito - Alquiler - 4 Ambientes - Cochera - '
          'Balcon Terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-alquiler-4-ambientes-51204656.html'}
2023-03-27 22:32:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/bajo-belgrano.-piadi-alto-con-vista-abierta.-51266371.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/bajo-belgrano.-piadi-alto-con-vista-abierta.-51266371.html>
{'ambientes': '4',
 'barrio': ', Belgrano Chico, Belgrano',
 'direccion': 'Mendoza 955',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '127',
 'm2_total': '137',
 'moneda': 'USD',
 'title': 'Bajo Belgrano. Piadi Alto con Vista Abierta. Seguridad. Amoblado.',
 'url': 'https://www.zonaprop.com.ar/propiedades/bajo-belgrano.-piadi-alto-con-vista-abierta.-51266371.html'}
2023-03-27 22:32:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amoblado.-para-exigentes-en-la-zona-mas-exclusiva.-51239869.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amoblado.-para-exigentes-en-la-zona-mas-exclusiva.-51239869.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'quintana 100',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '105',
 'm2_total': '115',
 'moneda': 'USD',
 'title': 'Amoblado. Para Exigentes, en La Zona Mas Exclusiva. Dos Dorm. a '
          'Pulmón Verde.',
 'url': 'https://www.zonaprop.com.ar/propiedades/amoblado.-para-exigentes-en-la-zona-mas-exclusiva.-51239869.html'}
2023-03-27 22:32:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-loft-en-alquiler-temporal-2-ambientes-51258048.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-loft-en-alquiler-temporal-2-ambientes-51258048.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Oro y Charcas',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Departamento Loft en Alquiler Temporal 2 Ambientes Palermo y '
          'Terraza Privada',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-loft-en-alquiler-temporal-2-ambientes-51258048.html'}
2023-03-27 22:32:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/primera-junta-al-4800-parque-avellaneda-51282379.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/primera-junta-al-4800-parque-avellaneda-51282379.html>
{'ambientes': '3',
 'barrio': ', Parque Avellaneda, Capital Federal',
 'direccion': 'PRIMERA JUNTA ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '100',
 'moneda': '$',
 'title': 'Primera Junta Al 4800 Parque Avellaneda',
 'url': 'https://www.zonaprop.com.ar/propiedades/primera-junta-al-4800-parque-avellaneda-51282379.html'}
2023-03-27 22:32:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-1-ambiente-en-palermo-51339922.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-1-ambiente-en-palermo-51339922.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Charcas 4728',
 'expensas': 0,
 'm2_cub': '33',
 'm2_total': '36',
 'moneda': 'USD',
 'title': 'Excelente Departamento de 1 Ambiente en Palermo Equipado y '
          'Amoblado!',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-1-ambiente-en-palermo-51339922.html'}
2023-03-27 22:32:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-espacio-cochera-a-estrenar-51380918.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:32:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:32:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-espacio-cochera-a-estrenar-51380918.html>
{'ambientes': '2',
 'barrio': ', Villa Santa Rita, Capital Federal',
 'direccion': 'Belaustegui 2800',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_cub': '47',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes Espacio Cochera a Estrenar Excelente!',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-espacio-cochera-a-estrenar-51380918.html'}
2023-03-27 22:33:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-temporal-amoblado-puerto-madero-51315084.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-temporal-amoblado-puerto-madero-51315084.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Lola Mora 400',
 'dormitorios': '1',
 'expensas': ' 35.000',
 'm2_cub': '60',
 'm2_total': '67',
 'moneda': 'USD',
 'title': 'Alquiler 2 Ambientes Temporal Amoblado Puerto Madero Zencity',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-temporal-amoblado-puerto-madero-51315084.html'}
2023-03-27 22:33:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-51231246.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-51231246.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Donado 1175',
 'expensas': 0,
 'm2_cub': '35',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Alquiler Temporario',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-51231246.html'}
2023-03-27 22:33:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-dormit-depend-2-cocheras-baulera-pza-san-51216744.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-dormit-depend-2-cocheras-baulera-pza-san-51216744.html>
{'ambientes': '5',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Pellegrini al 1300',
 'dormitorios': '4',
 'expensas': ' 166.000',
 'm2_cub': '182',
 'm2_total': '200',
 'moneda': 'USD',
 'title': '4 Dormit - Depend - 2 Cocheras - Baulera - Pza San Martin - '
          'Recoleta - Alq Paquete o Venta',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-dormit-depend-2-cocheras-baulera-pza-san-51216744.html'}
2023-03-27 22:33:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-villa-crespo-corrientes-51323593.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-villa-crespo-corrientes-51323593.html>
{'ambientes': '1',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Corrientes ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Alquiler - Monoambiente - Villa Crespo - Corrientes 6100 - Usd 500 '
          'Todo Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-villa-crespo-corrientes-51323593.html'}
2023-03-27 22:33:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3amb-c-balcon-recoleta-51364276.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3amb-c-balcon-recoleta-51364276.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Juncal al 2000',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '66',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Departamento 3amb C/balcon - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3amb-c-balcon-recoleta-51364276.html'}
2023-03-27 22:33:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/pereyra-e-inclan-depto-ph-primer-piso-con-balcon-a-51258711.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/pereyra-e-inclan-depto-ph-primer-piso-con-balcon-a-51258711.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Pereyra 1753',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Pereyra E Inclán Depto PH Primer Piso con Balcón a Estrenar',
 'url': 'https://www.zonaprop.com.ar/propiedades/pereyra-e-inclan-depto-ph-primer-piso-con-balcon-a-51258711.html'}
2023-03-27 22:33:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/belgrano-r-departamento-dos-dorm.-y-terrazas-51235240.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/belgrano-r-departamento-dos-dorm.-y-terrazas-51235240.html>
{'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Heredia 1300',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '100',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Belgrano R Departamento Dos Dorm. y Terrazas',
 'url': 'https://www.zonaprop.com.ar/propiedades/belgrano-r-departamento-dos-dorm.-y-terrazas-51235240.html'}
2023-03-27 22:33:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-amoblado-villa-crespo-51359326.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-amoblado-villa-crespo-51359326.html>
{'ambientes': '2',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'GALICIA 300. Entre Olaya y Virasoro, valentin',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': '2 Ambientes Amoblado - Villa Crespo',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-amoblado-villa-crespo-51359326.html'}
2023-03-27 22:33:27 [scrapy.extensions.logstats] INFO: Crawled 499 pages (at 17 pages/min), scraped 466 items (at 16 items/min)
2023-03-27 22:33:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-tipo-casa-en-alquiler-villa-luro-calderon-1022-51358738.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-tipo-casa-en-alquiler-villa-luro-calderon-1022-51358738.html>
{'ambientes': '3',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'CALDERON DE LA BARCA 1022',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '120',
 'm2_total': '180',
 'moneda': '$',
 'title': 'PH Tipo Casa en Alquiler - Villa Luro - Calderon 1022',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-tipo-casa-en-alquiler-villa-luro-calderon-1022-51358738.html'}
2023-03-27 22:33:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-34.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-piso-de-categoria-6-amb.-totalmente-amoblado-51381382.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-piso-de-categoria-6-amb.-totalmente-amoblado-51381382.html>
{'ambientes': '6',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Avenida Cramer 1778',
 'dormitorios': '3',
 'expensas': ' 50.000',
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Excelente Piso de Categoría 6 Amb. Totalmente Amoblado y Equipado '
          'C/ Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-piso-de-categoria-6-amb.-totalmente-amoblado-51381382.html'}
2023-03-27 22:33:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-canitas-matienzo-1800-usd-51369272.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-canitas-matienzo-1800-usd-51369272.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Matienzo ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Alquiler - 2 Ambientes - Cañitas - Matienzo 1800 - Usd 600 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-canitas-matienzo-1800-usd-51369272.html'}
2023-03-27 22:33:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto.-c-balcon-a-1-cuadra-tren-san-martin-51281361.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto.-c-balcon-a-1-cuadra-tren-san-martin-51281361.html>
{'ambientes': '3',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'ASUNCIÓN 4300. Entre Segurola, av. y Snabria',
 'dormitorios': '2',
 'expensas': ' 23.000',
 'm2_cub': '55',
 'm2_total': '61',
 'moneda': '$',
 'title': 'Depto. C/balcón, a 1 Cuadra Tren San Martín',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto.-c-balcon-a-1-cuadra-tren-san-martin-51281361.html'}
2023-03-27 22:33:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/apto-profesional!-2-amb.-parrilla-y-cochera-piscina-y-51315841.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/apto-profesional!-2-amb.-parrilla-y-cochera-piscina-y-51315841.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arribeños al 2400',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Apto Profesional! 2 Amb. Parrilla y Cochera, Piscina y Laundry - '
          'Paquete',
 'url': 'https://www.zonaprop.com.ar/propiedades/apto-profesional!-2-amb.-parrilla-y-cochera-piscina-y-51315841.html'}
2023-03-27 22:33:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-rivadavia-y-junin-torre-10-fte-91-m.-impec.-51278637.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-rivadavia-y-junin-torre-10-fte-91-m.-impec.-51278637.html>
{'ambientes': '4',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Av. Rivadavia 2151',
 'dormitorios': '3',
 'expensas': ' 23.427',
 'm2_cub': '91',
 'm2_total': '91',
 'moneda': '$',
 'title': 'Av Rivadavia y Junin, Torre, 10°, Fte, 91 m. Impec. Lum. Exc. Plac.',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-rivadavia-y-junin-torre-10-fte-91-m.-impec.-51278637.html'}
2023-03-27 22:33:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-amplios-amoblado-balvanera-51349114.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:33:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:33:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-amplios-amoblado-balvanera-51349114.html>
{'ambientes': '2',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Hipolito Yrigoyen 2400',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Alquiler 2 Ambientes Amplios Amoblado - Balvanera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-amplios-amoblado-balvanera-51349114.html'}
2023-03-27 22:34:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dpto.-3-amb-cochera-pileta-sum-y-gran-patio-51366637.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dpto.-3-amb-cochera-pileta-sum-y-gran-patio-51366637.html>
{'ambientes': '3',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Av. Montes de Oca 1000. Entre Olavarria y Araoz de lamadrid, g.',
 'dormitorios': '2',
 'expensas': ' 34.000',
 'm2_cub': '60',
 'm2_total': '131',
 'moneda': '$',
 'title': 'Dpto. 3 Amb, Cochera, Pileta, Sum y Gran Patio',
 'url': 'https://www.zonaprop.com.ar/propiedades/dpto.-3-amb-cochera-pileta-sum-y-gran-patio-51366637.html'}
2023-03-27 22:34:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-departamento-3-ambientes-en-alquiler!-51374078.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-departamento-3-ambientes-en-alquiler!-51374078.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Pampa ',
 'dormitorios': '2',
 'expensas': ' 36.000',
 'm2_cub': '67',
 'm2_total': '85',
 'moneda': 'USD',
 'title': 'Espectacular Departamento 3 Ambientes en Alquiler!',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-departamento-3-ambientes-en-alquiler!-51374078.html'}
2023-03-27 22:34:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-con-patio-palermo-araoz-51381408.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-con-patio-palermo-araoz-51381408.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Araoz ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '38',
 'm2_total': '62',
 'moneda': 'USD',
 'title': 'Alquiler - Departamento con Patio - Palermo - Araoz 1.200 - Usd 500 '
          'Todo Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-con-patio-palermo-araoz-51381408.html'}
2023-03-27 22:34:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplio-departamento-de-3-dorm.-dep.-cochera.-frente-51303111.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplio-departamento-de-3-dorm.-dep.-cochera.-frente-51303111.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Anchorena 1742',
 'dormitorios': '3',
 'expensas': ' 63.200',
 'm2_cub': '100',
 'm2_total': '111',
 'moneda': '$',
 'title': 'Amplio Departamento de 3 Dorm. + Dep. Cochera. Frente con Balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplio-departamento-de-3-dorm.-dep.-cochera.-frente-51303111.html'}
2023-03-27 22:34:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/reservado-reservado-reservado-51205759.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/reservado-reservado-reservado-51205759.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Felipe Vallese 540',
 'dormitorios': '3',
 'expensas': ' 24.000',
 'm2_cub': '78',
 'm2_total': '78',
 'moneda': '$',
 'title': 'Reservado Reservado Reservado',
 'url': 'https://www.zonaprop.com.ar/propiedades/reservado-reservado-reservado-51205759.html'}
2023-03-27 22:34:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplio-4-amb-en-alquiler-zona-almagro-51366944.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplio-4-amb-en-alquiler-zona-almagro-51366944.html>
{'ambientes': '4',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Tte. Gral Juan D. Perón 3545',
 'dormitorios': '3',
 'expensas': ' 35.000',
 'm2_cub': '90',
 'm2_total': '100',
 'moneda': '$',
 'title': 'Amplio 4 Amb en Alquiler - Zona Almagro',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplio-4-amb-en-alquiler-zona-almagro-51366944.html'}
2023-03-27 22:34:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-balvanera-51323718.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-balvanera-51323718.html>
{'ambientes': '4',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Larrea',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_total': '102',
 'moneda': '$',
 'title': 'Departamento - Balvanera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-balvanera-51323718.html'}
2023-03-27 22:34:27 [scrapy.extensions.logstats] INFO: Crawled 514 pages (at 15 pages/min), scraped 480 items (at 14 items/min)
2023-03-27 22:34:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-ayacucho-y-las-heras-51311922.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-ayacucho-y-las-heras-51311922.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Ayacucho y Av. Las Heras',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '56',
 'moneda': 'USD',
 'title': 'Alquiler Temporario Ayacucho y Las Heras',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-ayacucho-y-las-heras-51311922.html'}
2023-03-27 22:34:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-flores-excelente-semipiso-51359923.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-flores-excelente-semipiso-51359923.html>
{'ambientes': '2',
 'barrio': ', Flores Sur, Flores',
 'direccion': 'Pje Arrotea ',
 'dormitorios': '1',
 'expensas': ' 5.000',
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Departamento en Alquiler, Flores - Excelente Semipiso 2 Amb con '
          'Balcon Corrido',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-flores-excelente-semipiso-51359923.html'}
2023-03-27 22:34:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lindisimo-al-frente-con-balcon-terraza-y-parrilla-51357577.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lindisimo-al-frente-con-balcon-terraza-y-parrilla-51357577.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'El Salvador al 4100',
 'dormitorios': '1',
 'expensas': ' 32.000',
 'm2_cub': '72',
 'm2_total': '87',
 'moneda': '$',
 'title': 'Lindisimo Al Frente con Balcon Terraza y Parrilla',
 'url': 'https://www.zonaprop.com.ar/propiedades/lindisimo-al-frente-con-balcon-terraza-y-parrilla-51357577.html'}
2023-03-27 22:34:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-35.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/muy-buen-semipiso-4-ambientes-frente-a-m-shopping-51138224.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/muy-buen-semipiso-4-ambientes-frente-a-m-shopping-51138224.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'PARRAL 100',
 'dormitorios': '3',
 'expensas': ' 29.600',
 'm2_cub': '84',
 'm2_total': '92',
 'moneda': '$',
 'title': 'Muy Buen Semipiso 4 Ambientes Frente a m Shopping Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/muy-buen-semipiso-4-ambientes-frente-a-m-shopping-51138224.html'}
2023-03-27 22:34:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-3-ambientes-en-caballito-51282780.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-3-ambientes-en-caballito-51282780.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Senillosa 600',
 'dormitorios': '2',
 'expensas': ' 19.000',
 'm2_cub': '63',
 'm2_total': '63',
 'moneda': '$',
 'title': 'Departamento en Alquiler de 3 Ambientes en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-3-ambientes-en-caballito-51282780.html'}
2023-03-27 22:34:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piedras-1300-san-telmo.-piso-2-x-escalera-2-amb.-42-51142811.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piedras-1300-san-telmo.-piso-2-x-escalera-2-amb.-42-51142811.html>
{'ambientes': '2',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Piedras 1300',
 'dormitorios': '1',
 'expensas': ' 12.900',
 'm2_cub': '42',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Piedras 1300 San Telmo. Piso 2 X Escalera 2 Amb. 42 m² + Terraza '
          'Propia de 38 m²',
 'url': 'https://www.zonaprop.com.ar/propiedades/piedras-1300-san-telmo.-piso-2-x-escalera-2-amb.-42-51142811.html'}
2023-03-27 22:34:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/sucre-870-excelente-contrafrente-super-silencioso-51363616.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/sucre-870-excelente-contrafrente-super-silencioso-51363616.html>
{'ambientes': '2',
 'barrio': ', Belgrano Chico, Belgrano',
 'direccion': 'SUCRE 800',
 'dormitorios': '1',
 'expensas': ' 45.000',
 'm2_cub': '87',
 'm2_total': '87',
 'moneda': 'USD',
 'title': 'Sucre 870, Excelente Contrafrente, Super Silencioso con Cochera!',
 'url': 'https://www.zonaprop.com.ar/propiedades/sucre-870-excelente-contrafrente-super-silencioso-51363616.html'}
2023-03-27 22:34:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/austria-1800.-ph-sin-expensas.-90-m-sup2-.-amoblado-y-51343597.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:34:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:34:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/austria-1800.-ph-sin-expensas.-90-m-sup2-.-amoblado-y-51343597.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Austria 1800',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '90',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Austria 1800. PH Sin Expensas. 90 m². Amoblado y Equipado. 1 '
          'Dormitorio Grande',
 'url': 'https://www.zonaprop.com.ar/propiedades/austria-1800.-ph-sin-expensas.-90-m-sup2-.-amoblado-y-51343597.html'}
2023-03-27 22:35:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-o-venta-dos-ambientes-amoblado-y-equipado-en-51380312.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-o-venta-dos-ambientes-amoblado-y-equipado-en-51380312.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Pasaje Virasoro al 2300',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Alquiler o Venta Dos Ambientes Amoblado y Equipado en Palermo con '
          'Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-o-venta-dos-ambientes-amoblado-y-equipado-en-51380312.html'}
2023-03-27 22:35:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-piso-de-categoria-4-ambientes-con-cochera-51157395.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-piso-de-categoria-4-ambientes-con-cochera-51157395.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'VUELTA DE OBLIGADO 2546. Entre Roosevelt, franklin y Monroe',
 'dormitorios': '3',
 'expensas': ' 50.000',
 'm2_cub': '142',
 'm2_total': '158',
 'moneda': '$',
 'title': 'Alquiler Piso de Categoria 4 Ambientes con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-piso-de-categoria-4-ambientes-con-cochera-51157395.html'}
2023-03-27 22:35:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-chateau-puerto-madero-51343064.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-chateau-puerto-madero-51343064.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Chateau Madero - Totalmente Amoblado - 2 Ambientes',
 'dormitorios': '1',
 'expensas': ' 78.000',
 'm2_cub': '84',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento - Alquiler - Chateau - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-chateau-puerto-madero-51343064.html'}
2023-03-27 22:35:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-river-view-puerto-madero-51254431.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-river-view-puerto-madero-51254431.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'River View - Juana Manso al 700 - 3 Ambientes - Muy Equipado - '
              'Puerto Madero',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '92',
 'm2_total': '92',
 'moneda': 'USD',
 'title': 'Departamento - Alquiler - River View - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-river-view-puerto-madero-51254431.html'}
2023-03-27 22:35:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/divino-2-ambientes-amueblado-super-luminoso-y-alegre-51274544.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/divino-2-ambientes-amueblado-super-luminoso-y-alegre-51274544.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Garcia del Rio al 2600',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '45',
 'm2_total': '48',
 'moneda': '$',
 'title': 'Divino 2 Ambientes Amueblado Super Luminoso y Alegre - Los Mejores '
          'Amernities - Seguridad 24has',
 'url': 'https://www.zonaprop.com.ar/propiedades/divino-2-ambientes-amueblado-super-luminoso-y-alegre-51274544.html'}
2023-03-27 22:35:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-anual-tres-ambientes-con-amenities-y-cochera-51317024.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-anual-tres-ambientes-con-amenities-y-cochera-51317024.html>
{'ambientes': '3',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'CRAMER 2400',
 'dormitorios': '2',
 'expensas': ' 70.000',
 'm2_cub': '85',
 'm2_total': '93',
 'moneda': 'USD',
 'title': 'Alquiler Anual Tres Ambientes con Amenities y Cochera Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-anual-tres-ambientes-con-amenities-y-cochera-51317024.html'}
2023-03-27 22:35:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-dos-ambientes.-alquiler-temporario.-51349604.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-dos-ambientes.-alquiler-temporario.-51349604.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Posadas al 1100',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '48',
 'm2_total': '48',
 'moneda': 'USD',
 'title': 'Excelente Dos Ambientes. Alquiler Temporario.',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-dos-ambientes.-alquiler-temporario.-51349604.html'}
2023-03-27 22:35:27 [scrapy.extensions.logstats] INFO: Crawled 530 pages (at 16 pages/min), scraped 495 items (at 15 items/min)
2023-03-27 22:35:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/al-quiler-departamento-4-ambientes-en-flores-51363694.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/al-quiler-departamento-4-ambientes-en-flores-51363694.html>
{'ambientes': '4',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'San Pedrito al 600',
 'dormitorios': '3',
 'expensas': ' 22.000',
 'm2_cub': '88',
 'm2_total': '88',
 'moneda': '$',
 'title': 'Al Quiler Departamento 4 Ambientes en Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/al-quiler-departamento-4-ambientes-en-flores-51363694.html'}
2023-03-27 22:35:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-las-canitas-la-imprenta-51307706.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-las-canitas-la-imprenta-51307706.html>
{'ambientes': '2',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'soldado de la independencia 970',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Alquiler 2 Ambientes en Las Cañitas/la Imprenta - Soldado 970',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-las-canitas-la-imprenta-51307706.html'}
2023-03-27 22:35:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/talcahuano-800-3-amb-c-dependencia-73-m-luminoso-51318536.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/talcahuano-800-3-amb-c-dependencia-73-m-luminoso-51318536.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Talcahuano 800',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '73',
 'm2_total': '73',
 'moneda': '$',
 'title': 'Talcahuano 800 3 Amb C/ Dependencia 73 m Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/talcahuano-800-3-amb-c-dependencia-73-m-luminoso-51318536.html'}
2023-03-27 22:35:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dueno-directo-2-amb.-en-villa-urquiza-51360869.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dueno-directo-2-amb.-en-villa-urquiza-51360869.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Avenida Combatientes de Malvinas 3633',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '36',
 'm2_total': '36',
 'moneda': '$',
 'title': 'Dueño Directo, 2 Amb. en Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/dueno-directo-2-amb.-en-villa-urquiza-51360869.html'}
2023-03-27 22:35:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-36.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-de-febrero-1200-4-amb-bcon-todo-nuevo!-51387743.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-de-febrero-1200-4-amb-bcon-todo-nuevo!-51387743.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '3 DE FEBRERO ',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '180',
 'm2_total': '188',
 'moneda': 'USD',
 'title': '3 de Febrero 1200 - 4 Amb - Bcon - Todo Nuevo!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-de-febrero-1200-4-amb-bcon-todo-nuevo!-51387743.html'}
2023-03-27 22:35:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/saavedra-manzanares-y-zapiola-3amb.-1-piso-x-escalera-51386398.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/saavedra-manzanares-y-zapiola-3amb.-1-piso-x-escalera-51386398.html>
{'ambientes': '3',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Manzanares ',
 'expensas': ' 6.000',
 'm2_cub': '60',
 'm2_total': '63',
 'moneda': '$',
 'title': 'Saavedra Manzanares y Zapiola 3amb. 1°piso X Escalera Al Frente',
 'url': 'https://www.zonaprop.com.ar/propiedades/saavedra-manzanares-y-zapiola-3amb.-1-piso-x-escalera-51386398.html'}
2023-03-27 22:35:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-almagro-51357477.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-almagro-51357477.html>
{'ambientes': '2',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Rivadavia 3200',
 'dormitorios': '1',
 'expensas': ' 10.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento en Almagro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-almagro-51357477.html'}
2023-03-27 22:35:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exclu-torre-con-amenities.-2-ambientes-cochera-toil-51297245.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:35:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:35:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exclu-torre-con-amenities.-2-ambientes-cochera-toil-51297245.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Austria 1958 ',
 'dormitorios': '1',
 'expensas': ' 26.000',
 'm2_cub': '51',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Exclu Torre con Amenities. 2 Ambientes, Cochera, Toil, Lavadero. '
          'Divino!',
 'url': 'https://www.zonaprop.com.ar/propiedades/exclu-torre-con-amenities.-2-ambientes-cochera-toil-51297245.html'}
2023-03-27 22:36:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recoleta-alquiler-cochera-51341886.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recoleta-alquiler-cochera-51341886.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Guido al 1900',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '36',
 'm2_total': '42',
 'moneda': 'USD',
 'title': 'Recoleta Alquiler Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/recoleta-alquiler-cochera-51341886.html'}
2023-03-27 22:36:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-monoambiente.-con-cochera-51293037.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-monoambiente.-con-cochera-51293037.html>
{'ambientes': '1',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Av Cramer 3065',
 'expensas': ' 8.500',
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': 'USD',
 'title': 'Excelente Monoambiente. con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-monoambiente.-con-cochera-51293037.html'}
2023-03-27 22:36:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-divisble-en-torre-metropolitan-51383505.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-divisble-en-torre-metropolitan-51383505.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'JUNIN 875',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '58',
 'm2_total': '58',
 'moneda': '$',
 'title': 'Alquiler Monoambiente Divisble en Torre Metropolitan Plaza Zona '
          'Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-divisble-en-torre-metropolitan-51383505.html'}
2023-03-27 22:36:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51320351.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51320351.html>
{'ambientes': '6',
 'barrio': ', Núñez, Capital Federal',
 'direccion': '11 de Setiembre de 1988 al 4700',
 'dormitorios': '4',
 'expensas': ' 80.000',
 'm2_cub': '250',
 'm2_total': '250',
 'moneda': '$',
 'title': 'Departamento en Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51320351.html'}
2023-03-27 22:36:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-en-barrio-norte-piso-20-51282241.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-en-barrio-norte-piso-20-51282241.html>
{'ambientes': '5',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Avenida Santa Fe al 2800',
 'dormitorios': '3',
 'expensas': ' 76.957',
 'm2_cub': '150',
 'm2_total': '165',
 'moneda': 'USD',
 'title': 'Excelente Departamento en Barrio Norte, Piso 20°, Reciclado a '
          'Estrenar con Cochera y Seguridad 24 Has',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-en-barrio-norte-piso-20-51282241.html'}
2023-03-27 22:36:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/le-parc-tres-ambientes-en-alquiler-con-cochera-y-51277748.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/le-parc-tres-ambientes-en-alquiler-con-cochera-y-51277748.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor 400',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '130',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Le Parc Tres Ambientes en Alquiler con Cochera y Baulera Piso Alto '
          'Paquete',
 'url': 'https://www.zonaprop.com.ar/propiedades/le-parc-tres-ambientes-en-alquiler-con-cochera-y-51277748.html'}
2023-03-27 22:36:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/abv-be-plaza-2-ambientes-full-amenities-bano-y-51161523.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/abv-be-plaza-2-ambientes-full-amenities-bano-y-51161523.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av Santa Fe 5391',
 'dormitorios': '1',
 'expensas': ' 38.000',
 'm2_cub': '52',
 'm2_total': '52',
 'moneda': 'USD',
 'title': 'Abv - Be Plaza - 2 Ambientes - Full Amenities - Baño y Toilette - '
          'Balcón -',
 'url': 'https://www.zonaprop.com.ar/propiedades/abv-be-plaza-2-ambientes-full-amenities-bano-y-51161523.html'}
2023-03-27 22:36:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-al-contrafrente-con-balcon-bajas-51259184.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-al-contrafrente-con-balcon-bajas-51259184.html>
{'ambientes': '3',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'Chivilcoy ',
 'dormitorios': '2',
 'expensas': ' 5.900',
 'm2_cub': '75',
 'm2_total': '78',
 'moneda': '$',
 'title': '3 Ambientes Al Contrafrente con Balcón "Bajas Expensas"',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-al-contrafrente-con-balcon-bajas-51259184.html'}
2023-03-27 22:36:27 [scrapy.extensions.logstats] INFO: Crawled 547 pages (at 17 pages/min), scraped 511 items (at 16 items/min)
2023-03-27 22:36:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/parque-chacabuco-complejo-volcan-3-ambientes-51217628.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/parque-chacabuco-complejo-volcan-3-ambientes-51217628.html>
{'ambientes': '3',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Zelarrayan 1670, Parque Chacabuco, Capital Federal, Argentina.',
 'dormitorios': '2',
 'expensas': ' 40.000',
 'm2_cub': '80',
 'm2_total': '110',
 'moneda': '$',
 'title': 'Parque Chacabuco - Complejo Volcan - 3 Ambientes + Balcon '
          'Aterrazado - Full Amenities - Incluye Coch',
 'url': 'https://www.zonaprop.com.ar/propiedades/parque-chacabuco-complejo-volcan-3-ambientes-51217628.html'}
2023-03-27 22:36:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-casa-ho-con-cochera-51369260.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-casa-ho-con-cochera-51369260.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Holmberg al 2700',
 'expensas': ' 20.000',
 'm2_cub': '38',
 'm2_total': '42',
 'moneda': 'USD',
 'title': 'Monoambiente en Alquiler - Casa Ho – con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-casa-ho-con-cochera-51369260.html'}
2023-03-27 22:36:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-apto-profesional-consultorio-y-o-51300363.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-apto-profesional-consultorio-y-o-51300363.html>
{'ambientes': '4',
 'barrio': ', Parque Patricios, Capital Federal',
 'direccion': '15 de Noviembre de 1889 no 1700',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '90',
 'm2_total': '120',
 'moneda': '$',
 'title': 'Casa en Alquiler Apto Profesional, Consultorio y /o Vivienda',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-apto-profesional-consultorio-y-o-51300363.html'}
2023-03-27 22:36:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-super-luminosos!-51220621.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-super-luminosos!-51220621.html>
{'ambientes': '2',
 'barrio': ', La Paternal, Capital Federal',
 'direccion': 'BOLIVIA 2000',
 'dormitorios': '1',
 'expensas': ' 9.000',
 'm2_cub': '42',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes Super Luminosos!',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-super-luminosos!-51220621.html'}
2023-03-27 22:36:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-37.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/inmejorable-ubicacion-frente-a-av-pueyrredon-cfte-a-51260726.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/inmejorable-ubicacion-frente-a-av-pueyrredon-cfte-a-51260726.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av Pueyrredón 2366',
 'dormitorios': '4',
 'expensas': ' 99.000',
 'm2_cub': '189',
 'm2_total': '205',
 'moneda': 'USD',
 'title': 'Inmejorable Ubicación, Frente a Av Pueyrredón Cfte a Calle Agote, '
          'Plaza Francia',
 'url': 'https://www.zonaprop.com.ar/propiedades/inmejorable-ubicacion-frente-a-av-pueyrredon-cfte-a-51260726.html'}
2023-03-27 22:36:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-en-av-alvear-1500-entre-montevideo-y-parera-51381703.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-en-av-alvear-1500-entre-montevideo-y-parera-51381703.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av. Alvear 1500',
 'dormitorios': '1',
 'expensas': ' 65.000',
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Alquiler en Av Alvear 1500 Entre Montevideo y Parera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-en-av-alvear-1500-entre-montevideo-y-parera-51381703.html'}
2023-03-27 22:36:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-viewpoint-libertador-alquiler-sin-muebles-piso-51345733.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:36:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:36:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-viewpoint-libertador-alquiler-sin-muebles-piso-51345733.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'AVENIDA LIBERTADOR 5400',
 'dormitorios': '3',
 'expensas': ' 150.000',
 'm2_cub': '160',
 'm2_total': '170',
 'moneda': 'USD',
 'title': 'Torre Viewpoint Libertador Alquiler Sin Muebles Piso Muy Alto La '
          'Mejor Vista',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-viewpoint-libertador-alquiler-sin-muebles-piso-51345733.html'}
2023-03-27 22:37:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/la-pampa-700.-4-ambientes.-cochera-amenities-51388693.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/la-pampa-700.-4-ambientes.-cochera-amenities-51388693.html>
{'ambientes': '4',
 'barrio': ', Belgrano Chico, Belgrano',
 'direccion': 'LA PAMPA 700',
 'dormitorios': '3',
 'expensas': ' 83.000',
 'm2_cub': '115',
 'm2_total': '125',
 'moneda': 'USD',
 'title': 'La Pampa 700. 4 Ambientes. Cochera Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/la-pampa-700.-4-ambientes.-cochera-amenities-51388693.html'}
2023-03-27 22:37:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ortega-y-gasset-1500-departamento-dos-ambientes-51330758.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ortega-y-gasset-1500-departamento-dos-ambientes-51330758.html>
{'ambientes': '2',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'ORTEGA Y GASSET ',
 'dormitorios': '1',
 'expensas': ' 11.800',
 'm2_cub': '32',
 'm2_total': '32',
 'moneda': '$',
 'title': 'Ortega y Gasset 1500 Departamento Dos Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/ortega-y-gasset-1500-departamento-dos-ambientes-51330758.html'}
2023-03-27 22:37:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-en-palermo-alquiler-temporal-51166173.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-en-palermo-alquiler-temporal-51166173.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Jufre 100',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '38',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento 1 Ambiente en Palermo Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-en-palermo-alquiler-temporal-51166173.html'}
2023-03-27 22:37:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-2-ambientes-apto-profesional-51357243.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-2-ambientes-apto-profesional-51357243.html>
{'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Amenabar 2200 2°',
 'expensas': ' 14.700',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento en Alquiler 2 Ambientes Apto Profesional',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-2-ambientes-apto-profesional-51357243.html'}
2023-03-27 22:37:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-monoambiente-a-estrenar-51227180.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-monoambiente-a-estrenar-51227180.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Junin ',
 'expensas': ' 111.111',
 'm2_cub': '57',
 'm2_total': '57',
 'moneda': 'USD',
 'title': 'Excelente Monoambiente a Estrenar',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-monoambiente-a-estrenar-51227180.html'}
2023-03-27 22:37:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporal-51378823.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporal-51378823.html>
{'ambientes': '1',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'Hipolito Yrigoyen al 1300',
 'expensas': 0,
 'm2_cub': '20',
 'm2_total': '20',
 'moneda': 'USD',
 'title': 'Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporal-51378823.html'}
2023-03-27 22:37:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporal-amoblado-2-ambientes-puerto-madero-51274154.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporal-amoblado-2-ambientes-puerto-madero-51274154.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 1100',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '66',
 'm2_total': '71',
 'moneda': 'USD',
 'title': 'Alquiler Temporal Amoblado 2 Ambientes Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporal-amoblado-2-ambientes-puerto-madero-51274154.html'}
2023-03-27 22:37:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-nunez-51149185.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-nunez-51149185.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Ciudad de La Paz al 3200',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_total': '48',
 'moneda': 'USD',
 'title': 'Departamento - Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-nunez-51149185.html'}
2023-03-27 22:37:27 [scrapy.extensions.logstats] INFO: Crawled 563 pages (at 16 pages/min), scraped 526 items (at 15 items/min)
2023-03-27 22:37:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-hermoso-monoambiente-divisible-palermo-51375592.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-hermoso-monoambiente-divisible-palermo-51375592.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av. Cabildo al 100',
 'expensas': ' 15.000',
 'm2_cub': '38',
 'm2_total': '44',
 'moneda': '$',
 'title': 'Alquiler de Hermoso Monoambiente - Divisible - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-hermoso-monoambiente-divisible-palermo-51375592.html'}
2023-03-27 22:37:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-balcon-living-2-dorm.-1-bano-completo-dep-51377027.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-balcon-living-2-dorm.-1-bano-completo-dep-51377027.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Arenales 1600',
 'dormitorios': '2',
 'expensas': ' 21.000',
 'm2_cub': '69',
 'm2_total': '74',
 'moneda': 'USD',
 'title': 'Alquiler, Balcón, Living, 2 Dorm., 1 Baño Completo, Dep Cocina, '
          'Lavadero.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-balcon-living-2-dorm.-1-bano-completo-dep-51377027.html'}
2023-03-27 22:37:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-belgrano-c-51349603.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-belgrano-c-51349603.html>
{'ambientes': '4',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'Vuelta de Obligado al al 2900',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '110',
 'm2_total': '175',
 'moneda': 'USD',
 'title': 'PH - Belgrano C',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-belgrano-c-51349603.html'}
2023-03-27 22:37:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/divino-monoambiente-amueblado-con-balcon-moderno-y-51343796.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/divino-monoambiente-amueblado-con-balcon-moderno-y-51343796.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'República de Eslovenia al 1900',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '35',
 'm2_total': '38',
 'moneda': 'USD',
 'title': 'Divino Monoambiente Amueblado con Balcon - Moderno y Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/divino-monoambiente-amueblado-con-balcon-moderno-y-51343796.html'}
2023-03-27 22:37:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-c-cochera-y-amenities-en-nunez-51343968.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-c-cochera-y-amenities-en-nunez-51343968.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Deheza',
 'dormitorios': '1',
 'expensas': ' 19.600',
 'm2_cub': '50',
 'm2_total': '61',
 'moneda': '$',
 'title': '2 Ambientes C/ Cochera y Amenities en Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-c-cochera-y-amenities-en-nunez-51343968.html'}
2023-03-27 22:37:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-38.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-51257830.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-51257830.html>
{'ambientes': '3',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Araoz 2566',
 'dormitorios': '2',
 'expensas': ' 40.000',
 'm2_cub': '70',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-51257830.html'}
2023-03-27 22:37:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recoleta-lindisimo-monoambiente-con-gran-balcon-51192762.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recoleta-lindisimo-monoambiente-con-gran-balcon-51192762.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Peña 2018',
 'expensas': ' 11.000',
 'm2_cub': '24',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Recoleta, Lindísimo Monoambiente con Gran Balcón Terraza! Peña y '
          'Ayacucho',
 'url': 'https://www.zonaprop.com.ar/propiedades/recoleta-lindisimo-monoambiente-con-gran-balcon-51192762.html'}
2023-03-27 22:37:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dueno-alquila-3ambientes-constitucion-51341538.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dueno-alquila-3ambientes-constitucion-51341538.html>
{'ambientes': '3',
 'barrio': ', Constitución, Capital Federal',
 'direccion': 'AVENIDA CASEROS 1671',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '55',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Dueño Alquila 3ambientes Constitución',
 'url': 'https://www.zonaprop.com.ar/propiedades/dueno-alquila-3ambientes-constitucion-51341538.html'}
2023-03-27 22:37:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dto.-3-ambientes-caballito-51304507.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:37:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:37:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dto.-3-ambientes-caballito-51304507.html>
{'ambientes': '3',
 'barrio': ', Caballito Sur, Caballito',
 'direccion': 'Curapaligüe ',
 'dormitorios': '2',
 'expensas': ' 12.000',
 'm2_cub': '57',
 'm2_total': '59',
 'moneda': '$',
 'title': 'Dto. 3 Ambientes Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/dto.-3-ambientes-caballito-51304507.html'}
2023-03-27 22:38:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-hermoso-4-amb-c-cochera.-exc-ubicacion!-51286031.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-hermoso-4-amb-c-cochera.-exc-ubicacion!-51286031.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Achaval 300',
 'dormitorios': '3',
 'expensas': ' 83.000',
 'm2_total': '120',
 'moneda': '$',
 'title': 'Alquiler Hermoso 4 Amb C/ Cochera. Exc Ubicación! Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-hermoso-4-amb-c-cochera.-exc-ubicacion!-51286031.html'}
2023-03-27 22:38:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ayacucho-y-vicente-lopez-2-dorm-con-dep-coch-balcon-51261509.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ayacucho-y-vicente-lopez-2-dorm-con-dep-coch-balcon-51261509.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Ayacucho 1700',
 'dormitorios': '2',
 'expensas': ' 80.000',
 'm2_cub': '90',
 'moneda': 'USD',
 'title': 'Ayacucho y Vicente López 2 Dorm con Dep, Coch, Balcón, Amoblado '
          'Impecable, Luz',
 'url': 'https://www.zonaprop.com.ar/propiedades/ayacucho-y-vicente-lopez-2-dorm-con-dep-coch-balcon-51261509.html'}
2023-03-27 22:38:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51322520.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51322520.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Encarnacion Ezcurra al 300',
 'dormitorios': '1',
 'expensas': ' 32.000',
 'm2_cub': '60',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51322520.html'}
2023-03-27 22:38:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-amueblado-51273919.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-amueblado-51273919.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Santa Fe 5200',
 'dormitorios': '1',
 'expensas': ' 35.000',
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': 'USD',
 'title': 'Alquiler Temporario Amueblado',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-amueblado-51273919.html'}
2023-03-27 22:38:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/bvar-chenault-1800-divino-3-ambientes-contrafrente-51383605.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/bvar-chenault-1800-divino-3-ambientes-contrafrente-51383605.html>
{'ambientes': '3',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Av.general Indalecio Chenaut al 1800',
 'dormitorios': '2',
 'expensas': ' 38.000',
 'm2_cub': '70',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Bvar Chenault 1800 - Divino 3 Ambientes Contrafrente - Amenities - '
          'Bajas Expensas!',
 'url': 'https://www.zonaprop.com.ar/propiedades/bvar-chenault-1800-divino-3-ambientes-contrafrente-51383605.html'}
2023-03-27 22:38:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-dorm.-con-dependencia-recoleta-retiro-51340102.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-dorm.-con-dependencia-recoleta-retiro-51340102.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Cerrito al 1500',
 'dormitorios': '2',
 'expensas': ' 60.000',
 'm2_cub': '105',
 'm2_total': '110',
 'moneda': 'USD',
 'title': 'Departamento 2 Dorm. con Dependencia Recoleta / Retiro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-dorm.-con-dependencia-recoleta-retiro-51340102.html'}
2023-03-27 22:38:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/increible-piso-3-dorm.-dep-serv-playroom-2-cocheras-51341306.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/increible-piso-3-dorm.-dep-serv-playroom-2-cocheras-51341306.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Ramsay al 2000',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '227',
 'm2_total': '227',
 'moneda': 'USD',
 'title': 'Increible Piso 3 Dorm. Dep Serv - Playroom 2 Cocheras y Baulera - '
          'Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/increible-piso-3-dorm.-dep-serv-playroom-2-cocheras-51341306.html'}
2023-03-27 22:38:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-alquiler-temporal-51363307.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-alquiler-temporal-51363307.html>
{'ambientes': '6',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Petrona Eyle 355',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '300',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Departamento en Puerto Madero Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-alquiler-temporal-51363307.html'}
2023-03-27 22:38:27 [scrapy.extensions.logstats] INFO: Crawled 581 pages (at 18 pages/min), scraped 543 items (at 17 items/min)
2023-03-27 22:38:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-alquiler-retiro-con-cochera-51300410.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-alquiler-retiro-con-cochera-51300410.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Carlos Pellegrini al 1200',
 'dormitorios': '2',
 'expensas': 0,
 'moneda': 'USD',
 'title': '3 Ambientes Alquiler Retiro con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-alquiler-retiro-con-cochera-51300410.html'}
2023-03-27 22:38:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/combate-de-los-pozos-al-1100-departamento-de-2-51303299.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/combate-de-los-pozos-al-1100-departamento-de-2-51303299.html>
{'ambientes': '2',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Combate de los Pozos al 1100',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_total': '41',
 'moneda': '$',
 'title': 'Combate de Los Pozos Al 1100 Departamento de 2 Ambientes en '
          'Alquiler en San Cristobal',
 'url': 'https://www.zonaprop.com.ar/propiedades/combate-de-los-pozos-al-1100-departamento-de-2-51303299.html'}
2023-03-27 22:38:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/-alquiler-departamento-2-ambientes-muy-buena-51385260.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/-alquiler-departamento-2-ambientes-muy-buena-51385260.html>
{'ambientes': '2',
 'barrio': ', Coghlan, Capital Federal',
 'direccion': 'Naon al 2300',
 'dormitorios': '1',
 'expensas': ' 9.500',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': '¡Alquiler Departamento 2 Ambientes Muy Buena Ubicacion!',
 'url': 'https://www.zonaprop.com.ar/propiedades/-alquiler-departamento-2-ambientes-muy-buena-51385260.html'}
2023-03-27 22:38:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dueno-directo-alquila-casa-ph.-solo-uso-comercial.-51353520.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dueno-directo-alquila-casa-ph.-solo-uso-comercial.-51353520.html>
{'ambientes': '7',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Fitz Roy 1900',
 'dormitorios': '6',
 'expensas': 0,
 'm2_cub': '200',
 'm2_total': '220',
 'moneda': '$',
 'title': 'Dueño Directo Alquila Casa - PH. Sólo Uso Comercial.',
 'url': 'https://www.zonaprop.com.ar/propiedades/dueno-directo-alquila-casa-ph.-solo-uso-comercial.-51353520.html'}
2023-03-27 22:38:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-39.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-3-amb-con-escritorio-exclusivo-edificio-art-51340360.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-3-amb-con-escritorio-exclusivo-edificio-art-51340360.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Viamonte al 600',
 'dormitorios': '2',
 'expensas': ' 36.000',
 'm2_cub': '112',
 'm2_total': '112',
 'moneda': '$',
 'title': 'Semipiso 3 Amb con Escritorio - Exclusivo Edificio Art Decó 112 m²',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-3-amb-con-escritorio-exclusivo-edificio-art-51340360.html'}
2023-03-27 22:38:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/divino-ph-de-2-ambientes-con-patio-y-lavadero-sin-51275051.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/divino-ph-de-2-ambientes-con-patio-y-lavadero-sin-51275051.html>
{'ambientes': '2',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'Terrada al 4400',
 'dormitorios': '1',
 'expensas': ' 700',
 'm2_cub': '42',
 'm2_total': '57',
 'moneda': '$',
 'title': 'Divino PH de 2 Ambientes con Patio y Lavadero - Sin Expensas - '
          'Inmejorable Ubicación',
 'url': 'https://www.zonaprop.com.ar/propiedades/divino-ph-de-2-ambientes-con-patio-y-lavadero-sin-51275051.html'}
2023-03-27 22:38:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/austria-2600-entre-av-del-libertador-y-av-las-heras-51248288.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/austria-2600-entre-av-del-libertador-y-av-las-heras-51248288.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Austria 2600',
 'dormitorios': '4',
 'expensas': ' 134.000',
 'm2_cub': '280',
 'm2_total': '280',
 'moneda': 'USD',
 'title': 'Austria 2600, (Entre Av del Libertador y Av Las Heras) Recoleta - '
          'Terraza!',
 'url': 'https://www.zonaprop.com.ar/propiedades/austria-2600-entre-av-del-libertador-y-av-las-heras-51248288.html'}
2023-03-27 22:38:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-belgrano-teodoro-garcia-51316447.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:38:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:38:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-belgrano-teodoro-garcia-51316447.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Teodoro garcia ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '52',
 'moneda': 'USD',
 'title': 'Alquiler - 2 Ambientes - Belgrano - Teodoro Garcia 2300 - Usd 900 '
          'Todo Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-belgrano-teodoro-garcia-51316447.html'}
2023-03-27 22:39:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-nunez-cochera-baulera-51385468.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:39:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-nunez-cochera-baulera-51385468.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Pico 2300',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '44',
 'm2_total': '44',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Núñez, Cochera + Baulera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-nunez-cochera-baulera-51385468.html'}
2023-03-27 22:39:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-contrafrente-51304152.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:39:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-contrafrente-51304152.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Nicolas Repetto 100 8°',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '63',
 'm2_total': '68',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes Contrafrente',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-contrafrente-51304152.html'}
2023-03-27 22:39:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3amb-semi-amueblado-51380768.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:39:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3amb-semi-amueblado-51380768.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Sanchez de Bustamante al 1200',
 'dormitorios': '2',
 'expensas': ' 62.000',
 'm2_cub': '70',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Departamento en Alquiler 3amb Semi - Amueblado C/cochera y '
          'Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3amb-semi-amueblado-51380768.html'}
2023-03-27 22:39:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-villa-del-parque-rio-51352497.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:39:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-villa-del-parque-rio-51352497.html>
{'ambientes': '2',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'RIO COLORADO 4419',
 'dormitorios': '1',
 'expensas': ' 27.000',
 'm2_cub': '50',
 'm2_total': '52',
 'moneda': '$',
 'title': '2 Ambientes en Alquiler Villa del Parque - Rio Colorado 4419',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-villa-del-parque-rio-51352497.html'}
2023-03-27 22:39:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dos-ambientes-con-balcon-al-contrafrente.-urquiza-51338088.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:39:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dos-ambientes-con-balcon-al-contrafrente.-urquiza-51338088.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'quesada ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '44',
 'moneda': '$',
 'title': 'Dos Ambientes con Balcon Al Contrafrente. Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/dos-ambientes-con-balcon-al-contrafrente.-urquiza-51338088.html'}
2023-03-27 22:39:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-liberateur-belgrano-51386795.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:39:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-liberateur-belgrano-51386795.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Sucre 1500',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Alquiler Departamento 2 Ambientes Liberateur Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-liberateur-belgrano-51386795.html'}
2023-03-27 22:39:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ocampo-2600-y-cabello.-alquiler-con-muebles.-3-51352310.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:39:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ocampo-2600-y-cabello.-alquiler-con-muebles.-3-51352310.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Ocampo al 2600',
 'dormitorios': '2',
 'expensas': ' 44.000',
 'm2_cub': '69',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Ocampo 2600 y Cabello. Alquiler con Muebles. 3 Ambientes. Baño y '
          'Toil.',
 'url': 'https://www.zonaprop.com.ar/propiedades/ocampo-2600-y-cabello.-alquiler-con-muebles.-3-51352310.html'}
2023-03-27 22:39:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-blegrano-51313363.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-blegrano-51313363.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Roosevelt al 2200',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Departamento - Blegrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-blegrano-51313363.html'}
2023-03-27 22:39:27 [scrapy.extensions.logstats] INFO: Crawled 598 pages (at 17 pages/min), scraped 559 items (at 16 items/min)
2023-03-27 22:39:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-dos-cocheras-balcon-y-51169637.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-dos-cocheras-balcon-y-51169637.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Pellegrini Carlos al 1300',
 'dormitorios': '3',
 'expensas': ' 78.230',
 'm2_cub': '250',
 'm2_total': '270',
 'moneda': 'USD',
 'title': 'Departamento 4 Ambientes - Dos Cocheras - Balcón y Vista Verde - '
          'Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-dos-cocheras-balcon-y-51169637.html'}
2023-03-27 22:39:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-botanico-lafinur-3200-51292582.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-botanico-lafinur-3200-51292582.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Lafinur al 3200',
 'expensas': ' 18.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento - Botanico Lafinur 3200',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-botanico-lafinur-3200-51292582.html'}
2023-03-27 22:39:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/reciclado-a-nuevo-gran-vista-abierta-muy-luminoso-51262105.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/reciclado-a-nuevo-gran-vista-abierta-muy-luminoso-51262105.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Av Libertador al 1100',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Reciclado a Nuevo |gran Vista Abierta | Muy Luminoso | Retiro',
 'url': 'https://www.zonaprop.com.ar/propiedades/reciclado-a-nuevo-gran-vista-abierta-muy-luminoso-51262105.html'}
2023-03-27 22:39:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-caballito-51340495.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-caballito-51340495.html>
{'ambientes': '9',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'AV. Pedro Goyena al 1000',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '230',
 'm2_total': '230',
 'moneda': 'USD',
 'title': 'Casa - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-caballito-51340495.html'}
2023-03-27 22:39:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-40.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:39:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51151819.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51151819.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Ruggieri, Silvio L. al 2900',
 'expensas': ' 55.000',
 'm2_cub': '89',
 'm2_total': '105',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51151819.html'}
2023-03-27 22:39:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-amoblado-fitz-roy-al-2300-51274288.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:39:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-amoblado-fitz-roy-al-2300-51274288.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Fitz Roy 2300',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '68',
 'm2_total': '68',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Amoblado - Fitz Roy Al 2300 - Palermo '
          'Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-amoblado-fitz-roy-al-2300-51274288.html'}
2023-03-27 22:39:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/barrio-parque-estilo-calidad-y-distincion!-solo-para-51137798.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/barrio-parque-estilo-calidad-y-distincion!-solo-para-51137798.html>
{'ambientes': '3',
 'barrio': ', Barrio Parque, Palermo',
 'direccion': 'OMBU ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '75',
 'moneda': 'USD',
 'title': 'Barrio Parque, Estilo, Calidad y Distinción! Solo Para Exigentes!',
 'url': 'https://www.zonaprop.com.ar/propiedades/barrio-parque-estilo-calidad-y-distincion!-solo-para-51137798.html'}
2023-03-27 22:39:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-en-palermo-51385115.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:39:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-en-palermo-51385115.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av Federico Lacroze 1900',
 'dormitorios': '2',
 'expensas': ' 27.000',
 'm2_cub': '70',
 'm2_total': '73',
 'moneda': '$',
 'title': 'Alquiler 3 Amb en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-en-palermo-51385115.html'}
2023-03-27 22:40:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-hollywood-2000-51338189.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-hollywood-2000-51338189.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Ángel Carranza ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': 'USD',
 'title': 'Alquiler - 2 Ambientes - Palermo Hollywood 2000 - Carranza 2000 - '
          'Usd 800 Todo Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-hollywood-2000-51338189.html'}
2023-03-27 22:40:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/zencity-excelente-monoambiente-con-vista-al-complejo-51158195.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/zencity-excelente-monoambiente-con-vista-al-complejo-51158195.html>
{'ambientes': '1',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Rosario Vera Peñaloza 599',
 'expensas': 0,
 'm2_cub': '46',
 'm2_total': '46',
 'moneda': 'USD',
 'title': 'Zencity - Excelente Monoambiente con Vista Al Complejo',
 'url': 'https://www.zonaprop.com.ar/propiedades/zencity-excelente-monoambiente-con-vista-al-complejo-51158195.html'}
2023-03-27 22:40:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-espectacular-piso-de-5-ambientes-en-recoleta.-51180756.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-espectacular-piso-de-5-ambientes-en-recoleta.-51180756.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Avenida Las Heras ',
 'dormitorios': '4',
 'expensas': ' 70.000',
 'm2_cub': '212',
 'm2_total': '220',
 'moneda': 'USD',
 'title': 'Alquiler Espectacular Piso de 5 Ambientes en Recoleta.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-espectacular-piso-de-5-ambientes-en-recoleta.-51180756.html'}
2023-03-27 22:40:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/villa-crespo-departamento-dos-ambientes-51348260.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/villa-crespo-departamento-dos-ambientes-51348260.html>
{'ambientes': '2',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Gral, Manuel Rodriguez al 1700',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Villa Crespo Departamento Dos Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/villa-crespo-departamento-dos-ambientes-51348260.html'}
2023-03-27 22:40:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/estado-de-palestina-1000-2-amb-50-m-sin-muebles-51242542.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/estado-de-palestina-1000-2-amb-50-m-sin-muebles-51242542.html>
{'ambientes': '2',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Estado de Palestina 1000',
 'dormitorios': '1',
 'expensas': ' 42.000',
 'm2_cub': '50',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Estado de Palestina 1000 2 Amb 50 m Sin Muebles Cochera Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/estado-de-palestina-1000-2-amb-50-m-sin-muebles-51242542.html'}
2023-03-27 22:40:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-flores-51311815.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-flores-51311815.html>
{'ambientes': '2',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Jose Marti al 300',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Departamento en Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-flores-51311815.html'}
2023-03-27 22:40:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-41.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:40:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/chenaut-1900-2-amb-70-m-amenities-seguridad-51291007.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/chenaut-1900-2-amb-70-m-amenities-seguridad-51291007.html>
{'ambientes': '2',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Chenaut 1900',
 'dormitorios': '1',
 'expensas': ' 60.000',
 'm2_cub': '65',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Chenaut 1900 2 Amb 70 m Amenities Seguridad',
 'url': 'https://www.zonaprop.com.ar/propiedades/chenaut-1900-2-amb-70-m-amenities-seguridad-51291007.html'}
2023-03-27 22:40:27 [scrapy.extensions.logstats] INFO: Crawled 615 pages (at 17 pages/min), scraped 574 items (at 15 items/min)
2023-03-27 22:40:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-puerto-madero-51248846.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-puerto-madero-51248846.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Olga Cossettini 1300',
 'dormitorios': '3',
 'expensas': ' 100.000',
 'm2_cub': '143',
 'm2_total': '155',
 'moneda': 'USD',
 'title': 'Departamento Piso en Alquiler en Puerto Madero, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-puerto-madero-51248846.html'}
2023-03-27 22:40:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-al-frente-con-balcon-51328871.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-al-frente-con-balcon-51328871.html>
{'ambientes': '3',
 'barrio': ', Monte Castro, Capital Federal',
 'direccion': 'Remedios de Escalada de San Martin 2485',
 'dormitorios': '2',
 'expensas': ' 12.000',
 'm2_cub': '66',
 'm2_total': '74',
 'moneda': '$',
 'title': 'Departamento de 3 Ambientes Al Frente con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-al-frente-con-balcon-51328871.html'}
2023-03-27 22:40:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-4-ambientes-super-luminoso!-51370643.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-4-ambientes-super-luminoso!-51370643.html>
{'ambientes': '4',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'Carrasco 800',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '73',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Excelente 4 Ambientes Super Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-4-ambientes-super-luminoso!-51370643.html'}
2023-03-27 22:40:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporal-amoblado-2-ambientes-belgrano-51256395.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporal-amoblado-2-ambientes-belgrano-51256395.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Conesa 900. Entre Palpa y Cespedes',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '48',
 'm2_total': '48',
 'moneda': 'USD',
 'title': 'Alquiler Temporal Amoblado 2 Ambientes Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporal-amoblado-2-ambientes-belgrano-51256395.html'}
2023-03-27 22:40:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/se-alquila-o-vende-hermoso-3-ambientes-a-estrenar-de-51289628.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/se-alquila-o-vende-hermoso-3-ambientes-a-estrenar-de-51289628.html>
{'ambientes': '3',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Scalabrini Ortiz al 1492',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Se Alquila o Vende Hermoso 3 Ambientes a Estrenar de 90 m en '
          'Palermo! Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/se-alquila-o-vende-hermoso-3-ambientes-a-estrenar-de-51289628.html'}
2023-03-27 22:40:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-dorm.-balcon-cochera-lumiere-piso-alto-51215206.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-dorm.-balcon-cochera-lumiere-piso-alto-51215206.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Concepcion Arenal 2400',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '110',
 'm2_total': '110',
 'moneda': 'USD',
 'title': '2 Dorm. Balcon Cochera Lumiere Piso Alto',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-dorm.-balcon-cochera-lumiere-piso-alto-51215206.html'}
2023-03-27 22:40:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recoleta-departamento-de-un-dormitorio-luminoso.-51217169.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recoleta-departamento-de-un-dormitorio-luminoso.-51217169.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Arenales 1789',
 'expensas': 0,
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': 'USD',
 'title': 'Recoleta, Departamento de un Dormitorio Luminoso.',
 'url': 'https://www.zonaprop.com.ar/propiedades/recoleta-departamento-de-un-dormitorio-luminoso.-51217169.html'}
2023-03-27 22:40:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/jean-jaures-55-pb-d-51384828.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/jean-jaures-55-pb-d-51384828.html>
{'ambientes': '1',
 'barrio': ', Once, Capital Federal',
 'direccion': 'JEAN JAURES 55',
 'dormitorios': '1',
 'expensas': ' 15.975',
 'm2_cub': '33',
 'm2_total': '41',
 'moneda': '$',
 'title': 'Jean Jaures 55, Pb D',
 'url': 'https://www.zonaprop.com.ar/propiedades/jean-jaures-55-pb-d-51384828.html'}
2023-03-27 22:40:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/consultorio-en-alquiler-recoleta-51266896.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/consultorio-en-alquiler-recoleta-51266896.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Junin al 1300',
 'dormitorios': '2',
 'expensas': ' 27.500',
 'm2_cub': '67',
 'm2_total': '72',
 'moneda': '$',
 'title': 'Consultorio en Alquiler - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/consultorio-en-alquiler-recoleta-51266896.html'}
2023-03-27 22:40:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/belgrano-chico-full-amenities-y-vista-a-rio-51383868.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:40:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/belgrano-chico-full-amenities-y-vista-a-rio-51383868.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Husares al 2200',
 'dormitorios': '2',
 'expensas': ' 45.000',
 'm2_cub': '70',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Belgrano Chico - Full Amenities y Vista a Rio',
 'url': 'https://www.zonaprop.com.ar/propiedades/belgrano-chico-full-amenities-y-vista-a-rio-51383868.html'}
2023-03-27 22:41:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excepcional-propiedad-horizontal-para-uso-comercial-51364741.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excepcional-propiedad-horizontal-para-uso-comercial-51364741.html>
{'barrio': ', Chacarita, Capital Federal',
 'direccion': 'CHARLONE ',
 'expensas': 0,
 'm2_cub': '400',
 'm2_total': '470',
 'moneda': '$',
 'title': 'Excepcional Propiedad Horizontal Para Uso Comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/excepcional-propiedad-horizontal-para-uso-comercial-51364741.html'}
2023-03-27 22:41:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-42.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:41:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-43.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:41:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-a-estrenar-2-ambientes-51316159.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-a-estrenar-2-ambientes-51316159.html>
{'ambientes': '2',
 'barrio': ', Almagro Sur, Almagro',
 'direccion': 'Colombres 500',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '44',
 'm2_total': '44',
 'moneda': 'USD',
 'title': 'Alquiler Temporario - a Estrenar - 2 Ambientes Amoblado.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-a-estrenar-2-ambientes-51316159.html'}
2023-03-27 22:41:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-en-la-mejor-zona-de-belgrano-categ-2-coche-palier-51297152.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-en-la-mejor-zona-de-belgrano-categ-2-coche-palier-51297152.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'VIRREY ARREDONDO 2260',
 'dormitorios': '3',
 'expensas': ' 45.000',
 'm2_cub': '152',
 'm2_total': '159',
 'moneda': 'USD',
 'title': 'Piso en La Mejor Zona de Belgrano Categ 2 Coche Palier Privado',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-en-la-mejor-zona-de-belgrano-categ-2-coche-palier-51297152.html'}
2023-03-27 22:41:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/-propiedad-de-prueba-no-contactar-alquiler-ph-3-51366308.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/-propiedad-de-prueba-no-contactar-alquiler-ph-3-51366308.html>
{'ambientes': '3',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Zapiola al 4200',
 'dormitorios': '3',
 'expensas': ' 12.000',
 'm2_cub': '93',
 'm2_total': '100',
 'moneda': 'USD',
 'title': '(Propiedad de Prueba - No Contactar) Alquiler PH 3 Ambientes en '
          'Saavedra',
 'url': 'https://www.zonaprop.com.ar/propiedades/-propiedad-de-prueba-no-contactar-alquiler-ph-3-51366308.html'}
2023-03-27 22:41:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monte-castro-51370170.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monte-castro-51370170.html>
{'ambientes': '2',
 'barrio': ', Monte Castro, Capital Federal',
 'direccion': 'Av. Jonte al 4300',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Departamento - Monte Castro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monte-castro-51370170.html'}
2023-03-27 22:41:27 [scrapy.extensions.logstats] INFO: Crawled 632 pages (at 17 pages/min), scraped 589 items (at 15 items/min)
2023-03-27 22:41:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-ph-2-amb.-con-patio-cubierto.-51261506.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-ph-2-amb.-con-patio-cubierto.-51261506.html>
{'ambientes': '3',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'Lope de Vega 1282',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '62',
 'moneda': '$',
 'title': 'Alquiler PH 2 Amb. con Patio Cubierto.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-ph-2-amb.-con-patio-cubierto.-51261506.html'}
2023-03-27 22:41:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-3-ambientes-en-villa-urquiza-51255094.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-3-ambientes-en-villa-urquiza-51255094.html>
{'ambientes': '3',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Pasaje del temple 2577',
 'dormitorios': '2',
 'expensas': ' 16.000',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Excelente Departamento de 3 Ambientes en Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-3-ambientes-en-villa-urquiza-51255094.html'}
2023-03-27 22:41:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/parque-chacabuco-complejo-volcan-monoambiente-en-51286868.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/parque-chacabuco-complejo-volcan-monoambiente-en-51286868.html>
{'ambientes': '1',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Zelarrayan 1670, Parque Chacabuco, Capital Federal, Argentina.',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '90',
 'moneda': '$',
 'title': 'Parque Chacabuco - Complejo Volcan - Monoambiente en Alquiler - '
          'Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/parque-chacabuco-complejo-volcan-monoambiente-en-51286868.html'}
2023-03-27 22:41:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-amb-ph-c-terraza-51353794.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-amb-ph-c-terraza-51353794.html>
{'ambientes': '3',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'Chile',
 'expensas': 0,
 'm2_cub': '74',
 'm2_total': '140',
 'moneda': '$',
 'title': '3 Amb PH C/terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-amb-ph-c-terraza-51353794.html'}
2023-03-27 22:41:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-44.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:41:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-apto-profesional-51320843.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-apto-profesional-51320843.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Ciudad De La Paz 1700',
 'dormitorios': '1',
 'expensas': ' 8.000',
 'm2_cub': '34',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes Apto Profesional',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-apto-profesional-51320843.html'}
2023-03-27 22:41:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/la-imprenta-migueletes-858:-alquiler-departamento-3-51242812.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/la-imprenta-migueletes-858:-alquiler-departamento-3-51242812.html>
{'ambientes': '3',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Migueletes 858',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'La Imprenta - Migueletes 858: Alquiler Departamento 3 Ambientes + '
          'Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/la-imprenta-migueletes-858:-alquiler-departamento-3-51242812.html'}
2023-03-27 22:41:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplio-4-ambientes-con-cochera-ubicacion-privilegiada-51341884.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplio-4-ambientes-con-cochera-ubicacion-privilegiada-51341884.html>
{'ambientes': '4',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Arenales ',
 'dormitorios': '2',
 'expensas': ' 50.000',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Amplio 4 Ambientes con Cochera, Ubicación Privilegiada',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplio-4-ambientes-con-cochera-ubicacion-privilegiada-51341884.html'}
2023-03-27 22:41:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-tradicional-dos-ambientes-en-palermo.-51304492.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-tradicional-dos-ambientes-en-palermo.-51304492.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Bulnes 2600',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': 'USD',
 'title': 'Alquiler Tradicional - Dos Ambientes en Palermo. Bulnes y Cerviño',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-tradicional-dos-ambientes-en-palermo.-51304492.html'}
2023-03-27 22:41:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-45.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:41:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51362400.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51362400.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Donado 1755',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '62',
 'm2_total': '62',
 'moneda': 'USD',
 'title': 'Tres Ambientes a Estrenar en Corredor Donado Holmberg',
 'url': 'https://www.zonaprop.com.ar/propiedades/tres-ambientes-a-estrenar-en-corredor-donado-holmberg-51362400.html'}
2023-03-27 22:42:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-a-estrenar-amenities-51322472.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-a-estrenar-amenities-51322472.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Juncal 2500',
 'dormitorios': '2',
 'expensas': ' 19.300',
 'm2_cub': '78',
 'm2_total': '88',
 'moneda': 'USD',
 'title': 'Alquiler 3 Ambientes a Estrenar Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-a-estrenar-amenities-51322472.html'}
2023-03-27 22:42:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoamb-frente-51384963.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoamb-frente-51384963.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Honduras 3700',
 'expensas': ' 13.000',
 'm2_cub': '26',
 'm2_total': '26',
 'moneda': '$',
 'title': 'Alquiler Monoamb Frente',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoamb-frente-51384963.html'}
2023-03-27 22:42:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-en-alquiler-amoblado-5-amb-51271077.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-en-alquiler-amoblado-5-amb-51271077.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Departamento en Alquiler Montevideo 1100',
 'dormitorios': '4',
 'expensas': ' 120.000',
 'm2_cub': '150',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Departamento Recoleta, en Alquiler, Amoblado, 5 Amb, Cochera y '
          'Baulera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-en-alquiler-amoblado-5-amb-51271077.html'}
2023-03-27 22:42:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51384001.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51384001.html>
{'ambientes': '3',
 'barrio': ', Villa Ortuzar, Capital Federal',
 'direccion': 'La Pampa 4275',
 'dormitorios': '2',
 'expensas': ' 37.000',
 'm2_cub': '35',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Excelente 3 Ambientes en Edificio Full Amenities - Belgrano R',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51384001.html'}
2023-03-27 22:42:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-temporal-amoblado-puerto-madero-51388266.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-temporal-amoblado-puerto-madero-51388266.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Lola Mora 400. Entre Juana manso y Julieta lanteri',
 'dormitorios': '1',
 'expensas': ' 45.000',
 'm2_cub': '65',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Alquiler 2 Ambientes Temporal Amoblado Puerto Madero Zencity',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-temporal-amoblado-puerto-madero-51388266.html'}
2023-03-27 22:42:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-amb-torre-apto-prof-muy-luminoso-vista-abierta-51341232.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-amb-torre-apto-prof-muy-luminoso-vista-abierta-51341232.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'AV RIVADAVIA 5100',
 'dormitorios': '2',
 'expensas': ' 16.000',
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': '$',
 'title': '3 Amb Torre, Apto Prof, Muy Luminoso, Vista Abierta, Baño Completo',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-amb-torre-apto-prof-muy-luminoso-vista-abierta-51341232.html'}
2023-03-27 22:42:27 [scrapy.extensions.logstats] INFO: Crawled 649 pages (at 17 pages/min), scraped 604 items (at 15 items/min)
2023-03-27 22:42:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ruiz-huidobro-3900.-51366336.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ruiz-huidobro-3900.-51366336.html>
{'ambientes': '4',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Ruiz Huidobro al 3900',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_cub': '92',
 'm2_total': '100',
 'moneda': '$',
 'title': 'Ruiz Huidobro 3900.',
 'url': 'https://www.zonaprop.com.ar/propiedades/ruiz-huidobro-3900.-51366336.html'}
2023-03-27 22:42:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51222340.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51222340.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Beruti al 3300',
 'dormitorios': '3',
 'expensas': ' 69.000',
 'm2_cub': '135',
 'm2_total': '140',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51222340.html'}
2023-03-27 22:42:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/divino-2-ambientes-con-balcon-y-terraza-cochera-51299384.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/divino-2-ambientes-con-balcon-y-terraza-cochera-51299384.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Sanchez de Bustamante al 1200',
 'dormitorios': '1',
 'expensas': ' 40.000',
 'm2_cub': '42',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Divino 2 Ambientes con Balcon y Terraza - Cochera - Amenities y '
          'Seguridad 24has',
 'url': 'https://www.zonaprop.com.ar/propiedades/divino-2-ambientes-con-balcon-y-terraza-cochera-51299384.html'}
2023-03-27 22:42:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/en-alquiler-departamento-1-ambientes-al-frente-con-51152020.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/en-alquiler-departamento-1-ambientes-al-frente-con-51152020.html>
{'ambientes': '1',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'LUIS VIALE 2605',
 'expensas': ' 15.000',
 'm2_cub': '26',
 'm2_total': '28',
 'moneda': '$',
 'title': 'En Alquiler Departamento 1 Ambientes Al Frente con Balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/en-alquiler-departamento-1-ambientes-al-frente-con-51152020.html'}
2023-03-27 22:42:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-con-terraza-de-uso-exclusivo-en-51384645.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-con-terraza-de-uso-exclusivo-en-51384645.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Ciudad de la Paz al 1700',
 'dormitorios': '3',
 'expensas': ' 20.000',
 'm2_cub': '53',
 'm2_total': '53',
 'moneda': '$',
 'title': 'Alquiler 4 Ambientes con Terraza de Uso Exclusivo en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-con-terraza-de-uso-exclusivo-en-51384645.html'}
2023-03-27 22:42:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-con-cochera-51347474.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-con-cochera-51347474.html>
{'ambientes': '3',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Seguí y Sinclair',
 'dormitorios': '2',
 'expensas': ' 59.000',
 'm2_cub': '85',
 'm2_total': '85',
 'moneda': 'USD',
 'title': 'Alquiler Departamento de 3 Ambientes con Cochera - Palermo Nuevo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-con-cochera-51347474.html'}
2023-03-27 22:42:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-amb.-a-estrenar-villa-urquiza-51388214.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-amb.-a-estrenar-villa-urquiza-51388214.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Pacheco 3025 - 8º Piso',
 'dormitorios': '1',
 'expensas': ' 6.000',
 'm2_cub': '32',
 'm2_total': '48',
 'moneda': 'USD',
 'title': 'Departamento 2 Amb. a Estrenar - Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-amb.-a-estrenar-villa-urquiza-51388214.html'}
2023-03-27 22:42:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-3-dorm.-y-2-dependencias-con-balcon-en-51349558.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:42:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:42:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-3-dorm.-y-2-dependencias-con-balcon-en-51349558.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Arenales al 1200',
 'dormitorios': '3',
 'expensas': ' 85.000',
 'm2_cub': '200',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Departamento de 3 Dorm. y 2 Dependencias con Balcón en Alquiler - '
          'Baulera y Cochera - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-3-dorm.-y-2-dependencias-con-balcon-en-51349558.html'}
2023-03-27 22:43:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-pueyrredon-2100-5-b-51387964.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-pueyrredon-2100-5-b-51387964.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Av. Pueyrredon al 2100',
 'dormitorios': '2',
 'expensas': ' 60.000',
 'm2_cub': '136',
 'm2_total': '146',
 'moneda': 'USD',
 'title': 'Av Pueyrredon 2100 5° B',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-pueyrredon-2100-5-b-51387964.html'}
2023-03-27 22:43:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-46.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-tipo-casa!-3-amb-con-cochera-y-balcon-51238067.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-tipo-casa!-3-amb-con-cochera-y-balcon-51238067.html>
{'ambientes': '3',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'Bacacay 3840',
 'dormitorios': '2',
 'expensas': ' 10.000',
 'm2_cub': '115',
 'm2_total': '115',
 'moneda': '$',
 'title': 'Departamento Tipo Casa! 3 Amb con Cochera y Balcón - Parrillas '
          'Jardín - Bajas Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-tipo-casa!-3-amb-con-cochera-y-balcon-51238067.html'}
2023-03-27 22:43:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-amb.-49-m-sup2--bcn-aterr-c-parr-bn-toil-sol-51373638.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-amb.-49-m-sup2--bcn-aterr-c-parr-bn-toil-sol-51373638.html>
{'ambientes': '2',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'NUÑEZ 3400',
 'dormitorios': '1',
 'expensas': ' 8.500',
 'm2_cub': '49',
 'm2_total': '49',
 'moneda': '$',
 'title': '2 Amb. 49 m² Bcn Aterr C/ Parr Bñ Toil Sol Amenties C/coch',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-amb.-49-m-sup2--bcn-aterr-c-parr-bn-toil-sol-51373638.html'}
2023-03-27 22:43:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-belgrano-51320985.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-belgrano-51320985.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av. Monroe al al 1100',
 'dormitorios': '4',
 'expensas': ' 52.000',
 'm2_cub': '215',
 'm2_total': '258',
 'moneda': 'USD',
 'title': 'Casa - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-belgrano-51320985.html'}
2023-03-27 22:43:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-en-alquiler-retiro-con-vista-al-rio-51385373.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-en-alquiler-retiro-con-vista-al-rio-51385373.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Talcahuano 1200',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_cub': '66',
 'm2_total': '69',
 'moneda': '$',
 'title': '3 Ambientes en Alquiler Retiro con Vista Al Rio',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-en-alquiler-retiro-con-vista-al-rio-51385373.html'}
2023-03-27 22:43:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-venta-en-le-parc-51331297.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-venta-en-le-parc-51331297.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Departamento en Venta en Le Parc',
 'dormitorios': '3',
 'expensas': ' 236.000',
 'm2_cub': '206',
 'm2_total': '213',
 'moneda': 'USD',
 'title': 'Departamento en Venta en Le Parc',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-venta-en-le-parc-51331297.html'}
2023-03-27 22:43:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-11-de-septiembre-al-1700-51254868.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-11-de-septiembre-al-1700-51254868.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '11 DE SEPTIEMBRE 1700. Entre Jose hernandez y ArribeÑos',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '38',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes. | 11 de Septiembre Al 1700',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-11-de-septiembre-al-1700-51254868.html'}
2023-03-27 22:43:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-migueletes-al-1200-51306175.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-migueletes-al-1200-51306175.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Migueletes 1200. Entre Teodoro garcia y Av.federico lacroze',
 'dormitorios': '1',
 'expensas': ' 22.500',
 'm2_cub': '47',
 'm2_total': '47',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes. | Migueletes Al 1200',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-migueletes-al-1200-51306175.html'}
2023-03-27 22:43:27 [scrapy.extensions.logstats] INFO: Crawled 666 pages (at 17 pages/min), scraped 620 items (at 16 items/min)
2023-03-27 22:43:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/vista-al-rio-alquiler-libertador-departamento-1-51233729.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/vista-al-rio-alquiler-libertador-departamento-1-51233729.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Libertador 6600',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '43',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Vista Al Rio - Alquiler - Libertador - Departamento 1 Dormitorio - '
          'Belgrano - Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/vista-al-rio-alquiler-libertador-departamento-1-51233729.html'}
2023-03-27 22:43:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51311908.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51311908.html>
{'ambientes': '6',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'José Hernandez 2000',
 'dormitorios': '5',
 'expensas': ' 84.000',
 'm2_cub': '234',
 'm2_total': '234',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Belgrano, Capital Federal, Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51311908.html'}
2023-03-27 22:43:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-palermo-chico-51273581.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-palermo-chico-51273581.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Cabello 3400',
 'dormitorios': '2',
 'expensas': ' 60.000',
 'm2_cub': '102',
 'm2_total': '108',
 'moneda': 'USD',
 'title': 'Alquiler Departamento 4 Ambientes Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-palermo-chico-51273581.html'}
2023-03-27 22:43:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-en-palermo-piso-51383816.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-en-palermo-piso-51383816.html>
{'ambientes': '3',
 'barrio': ', Palermo Viejo, Palermo',
 'direccion': 'Vidt al 1900',
 'dormitorios': '2',
 'expensas': ' 39.000',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Alquiler Departamento de 3 Ambientes en Palermo - Piso 7',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-en-palermo-piso-51383816.html'}
2023-03-27 22:43:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impecable-3-amb-c-cochera.-piso-13-vista-al-rio.-a-m-51356951.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impecable-3-amb-c-cochera.-piso-13-vista-al-rio.-a-m-51356951.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Libertad al 1600',
 'dormitorios': '2',
 'expensas': ' 84.000',
 'm2_cub': '63',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Impecable 3 Amb C/cochera. Piso 13° Vista Al Río. a m de '
          'Libertador.',
 'url': 'https://www.zonaprop.com.ar/propiedades/impecable-3-amb-c-cochera.-piso-13-vista-al-rio.-a-m-51356951.html'}
2023-03-27 22:43:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-loft-en-alquiler-temporario-quartier-san-51366393.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-loft-en-alquiler-temporario-quartier-san-51366393.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Quartier San Telmo',
 'dormitorios': '1',
 'expensas': ' 19.200',
 'm2_cub': '33',
 'm2_total': '33',
 'moneda': 'USD',
 'title': 'Excelente Loft en Alquiler Temporario - Quartier San Telmo.',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-loft-en-alquiler-temporario-quartier-san-51366393.html'}
2023-03-27 22:43:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-apto-para-oficina-comercial-en-excelente-estado-51339611.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-apto-para-oficina-comercial-en-excelente-estado-51339611.html>
{'ambientes': '4',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Jose Marmol al 1100',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '110',
 'm2_total': '174',
 'moneda': '$',
 'title': 'PH Apto Para Oficina Comercial en Excelente Estado, con 4 Ambientes '
          'Impecables en Boedo',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-apto-para-oficina-comercial-en-excelente-estado-51339611.html'}
2023-03-27 22:43:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-villa-crespo-con-balcon-y-dep-serv-51348992.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-villa-crespo-con-balcon-y-dep-serv-51348992.html>
{'ambientes': '3',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Lavalleja 200',
 'dormitorios': '3',
 'expensas': ' 20.000',
 'm2_cub': '72',
 'm2_total': '81',
 'moneda': '$',
 'title': 'Alquiler 3 Amb Villa Crespo con Balcon y Dep Serv',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-villa-crespo-con-balcon-y-dep-serv-51348992.html'}
2023-03-27 22:43:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/solo-uso-profsional-comercial-alquiler-almagro-3-51282482.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:43:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:43:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/solo-uso-profsional-comercial-alquiler-almagro-3-51282482.html>
{'ambientes': '3',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Bartolome Mitre 3800',
 'dormitorios': '2',
 'expensas': ' 12.000',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Solo Uso Profsional Comercial Alquiler Almagro 3 Ambientes PH Bajas '
          'Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/solo-uso-profsional-comercial-alquiler-almagro-3-51282482.html'}
2023-03-27 22:44:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-47.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/bau-propiedades:-departamento-de-3-ambientes-con-51173884.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/bau-propiedades:-departamento-de-3-ambientes-con-51173884.html>
{'ambientes': '3',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Zapiola al 2200',
 'dormitorios': '2',
 'expensas': ' 69.000',
 'm2_cub': '85',
 'm2_total': '170',
 'moneda': 'USD',
 'title': 'Bau Propiedades: Departamento de 3 Ambientes con Terraza Propia de '
          '85 m² y Parrilla, Cochera, Ameniti',
 'url': 'https://www.zonaprop.com.ar/propiedades/bau-propiedades:-departamento-de-3-ambientes-con-51173884.html'}
2023-03-27 22:44:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-con-cochera-y-51215306.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-con-cochera-y-51215306.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1400',
 'dormitorios': '1',
 'expensas': ' 70.000',
 'm2_cub': '75',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Espectacular 2 Ambientes en Alquiler con Cochera y Baulera en '
          'Oceana. Puerto Madero.',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-con-cochera-y-51215306.html'}
2023-03-27 22:44:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-4-ambientes-en-torre-de-51360308.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-4-ambientes-en-torre-de-51360308.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Mendez de Andes 527',
 'dormitorios': '3',
 'expensas': ' 42.000',
 'm2_cub': '77',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Espectacular Departamento de 4 Ambientes en Torre de Categoría B - '
          'Residence - Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-4-ambientes-en-torre-de-51360308.html'}
2023-03-27 22:44:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/silos-de-dorrego-excelente-loft-palermo-hollywood-51298174.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/silos-de-dorrego-excelente-loft-palermo-hollywood-51298174.html>
{'ambientes': '5',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Dorrego al 1900',
 'dormitorios': '4',
 'expensas': ' 60.000',
 'm2_cub': '170',
 'm2_total': '215',
 'moneda': 'USD',
 'title': 'Silos de Dorrego - Excelente Loft - Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/silos-de-dorrego-excelente-loft-palermo-hollywood-51298174.html'}
2023-03-27 22:44:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/muy-canchero-decorado-3-dorm.-y-escritorios-luminoso-51242782.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/muy-canchero-decorado-3-dorm.-y-escritorios-luminoso-51242782.html>
{'ambientes': '5',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'San Martin al 1100',
 'dormitorios': '3',
 'expensas': ' 45.000',
 'm2_cub': '185',
 'm2_total': '185',
 'moneda': 'USD',
 'title': 'Muy Canchero Decorado 3 Dorm. y Escritorios, Luminoso con Balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/muy-canchero-decorado-3-dorm.-y-escritorios-luminoso-51242782.html'}
2023-03-27 22:44:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-almagro-51371421.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-almagro-51371421.html>
{'ambientes': '3',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Medrano al 100',
 'dormitorios': '2',
 'expensas': ' 16.100',
 'm2_cub': '57',
 'm2_total': '57',
 'moneda': '$',
 'title': 'Departamento - Almagro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-almagro-51371421.html'}
2023-03-27 22:44:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-en-alquiler-caballito-51273173.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-en-alquiler-caballito-51273173.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Nicolas Repetto 37',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '58',
 'm2_total': '64',
 'moneda': '$',
 'title': '3 Ambientes en Alquiler Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-en-alquiler-caballito-51273173.html'}
2023-03-27 22:44:27 [scrapy.extensions.logstats] INFO: Crawled 683 pages (at 17 pages/min), scraped 636 items (at 16 items/min)
2023-03-27 22:44:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-4-ambientes-con-cochera-51288015.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-4-ambientes-con-cochera-51288015.html>
{'ambientes': '4',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Cerviño y Oro',
 'dormitorios': '2',
 'expensas': ' 117.400',
 'm2_cub': '125',
 'm2_total': '125',
 'moneda': 'USD',
 'title': 'Alquiler Departamento de 4 Ambientes con Cochera - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-4-ambientes-con-cochera-51288015.html'}
2023-03-27 22:44:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impecable-departamento-en-alquiler-barrio-norte-51383456.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impecable-departamento-en-alquiler-barrio-norte-51383456.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Avenida Pueyrredón 1400',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '107',
 'm2_total': '107',
 'moneda': 'USD',
 'title': 'Impecable Departamento en Alquiler Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/impecable-departamento-en-alquiler-barrio-norte-51383456.html'}
2023-03-27 22:44:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-monte-castro-51244130.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-monte-castro-51244130.html>
{'ambientes': '3',
 'barrio': ', Monte Castro, Capital Federal',
 'direccion': 'Miranda 4400',
 'dormitorios': '2',
 'expensas': ' 14.000',
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Alquiler 3 Ambientes Monte Castro',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-monte-castro-51244130.html'}
2023-03-27 22:44:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/-en-excelente-ubicacion-proximo-al-parque-centenario-51383860.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/-en-excelente-ubicacion-proximo-al-parque-centenario-51383860.html>
{'ambientes': '4',
 'barrio': ', Parque Centenario, Capital Federal',
 'direccion': 'AV. ANGEL GALLARDO 100. Entre Av. corrientes y Rio de janeiro',
 'dormitorios': '3',
 'expensas': ' 27.000',
 'm2_cub': '96',
 'm2_total': '138',
 'moneda': '$',
 'title': '¡En Excelente Ubicación Próximo Al Parque Centenario, 3 Pa',
 'url': 'https://www.zonaprop.com.ar/propiedades/-en-excelente-ubicacion-proximo-al-parque-centenario-51383860.html'}
2023-03-27 22:44:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-2-amb-grandes-san-nicolas-51172227.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-2-amb-grandes-san-nicolas-51172227.html>
{'ambientes': '2',
 'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Viamonte 1400',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '57',
 'm2_total': '57',
 'moneda': '$',
 'title': 'Alquiler Depto 2 Amb Grandes San Nicolas',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-2-amb-grandes-san-nicolas-51172227.html'}
2023-03-27 22:44:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-4-ambientes-en-torre-de-51151651.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-4-ambientes-en-torre-de-51151651.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Mendez de Andes 527',
 'dormitorios': '3',
 'expensas': ' 42.000',
 'm2_cub': '77',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Espectacular Departamento de 4 Ambientes en Torre de Categoría B - '
          'Residence - Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-4-ambientes-en-torre-de-51151651.html'}
2023-03-27 22:44:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51173436.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51173436.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Dorrego al 2500',
 'dormitorios': '2',
 'expensas': ' 65.000',
 'm2_cub': '78',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51173436.html'}
2023-03-27 22:44:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51383997.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51383997.html>
{'ambientes': '3',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'La Pampa 4275',
 'dormitorios': '2',
 'expensas': ' 37.000',
 'm2_cub': '35',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Excelente 3 Ambientes en Edificio Full Amenities - Belgrano R',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51383997.html'}
2023-03-27 22:44:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-ph-apto-consultorios-u-otros-rubros-51252837.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:44:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:44:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-ph-apto-consultorios-u-otros-rubros-51252837.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Paraguay 2300',
 'dormitorios': '5',
 'expensas': 0,
 'm2_cub': '122',
 'm2_total': '253',
 'moneda': '$',
 'title': 'Alquiler PH Apto Consultorios U Otros Rubros',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-ph-apto-consultorios-u-otros-rubros-51252837.html'}
2023-03-27 22:45:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-48.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51387201.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51387201.html>
{'ambientes': '1',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Calasanz al 700',
 'expensas': ' 18.410',
 'm2_cub': '33',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51387201.html'}
2023-03-27 22:45:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-comercial-dpto-monoamb.-villa-sta-rita-51387523.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-comercial-dpto-monoamb.-villa-sta-rita-51387523.html>
{'ambientes': '1',
 'barrio': ', Villa Santa Rita, Capital Federal',
 'direccion': 'Camarones 2900',
 'expensas': ' 2.000',
 'm2_cub': '18',
 'm2_total': '18',
 'moneda': '$',
 'title': 'Alquiler Comercial Dpto Monoamb. Villa Sta Rita',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-comercial-dpto-monoamb.-villa-sta-rita-51387523.html'}
2023-03-27 22:45:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/cordoba-y-uruguay-apto-prof-133-m-sup2-.-ed-frances-51240198.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/cordoba-y-uruguay-apto-prof-133-m-sup2-.-ed-frances-51240198.html>
{'ambientes': '6',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Av. Cordoba al 1300',
 'dormitorios': '3',
 'expensas': ' 110.000',
 'm2_cub': '133',
 'm2_total': '133',
 'moneda': '$',
 'title': 'Cordoba y Uruguay - Apto Prof 133 m². Ed Francés Excelente '
          'Categoría.',
 'url': 'https://www.zonaprop.com.ar/propiedades/cordoba-y-uruguay-apto-prof-133-m-sup2-.-ed-frances-51240198.html'}
2023-03-27 22:45:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-monoambiente-nunez-51222455.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-monoambiente-nunez-51222455.html>
{'ambientes': '1',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Arcos 2800',
 'expensas': ' 17.223',
 'm2_cub': '29',
 'm2_total': '36',
 'moneda': '$',
 'title': 'Alquiler Departamento Monoambiente Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-monoambiente-nunez-51222455.html'}
2023-03-27 22:45:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51358135.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51358135.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cuba al 2500',
 'dormitorios': '3',
 'expensas': ' 24.000',
 'm2_total': '110',
 'moneda': '$',
 'title': 'Departamento - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51358135.html'}
2023-03-27 22:45:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/las-canitas-green-tower-con-tres-cocheras-51245028.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/las-canitas-green-tower-con-tres-cocheras-51245028.html>
{'ambientes': '5',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Soldado de la Independencia 500',
 'dormitorios': '3',
 'expensas': ' 120.000',
 'm2_cub': '256',
 'm2_total': '301',
 'moneda': 'USD',
 'title': 'Las Cañitas Green Tower con Tres Cocheras',
 'url': 'https://www.zonaprop.com.ar/propiedades/las-canitas-green-tower-con-tres-cocheras-51245028.html'}
2023-03-27 22:45:27 [scrapy.extensions.logstats] INFO: Crawled 699 pages (at 16 pages/min), scraped 651 items (at 15 items/min)
2023-03-27 22:45:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquilo-3-ambientes-av-carlos-calvo-4198-51357803.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquilo-3-ambientes-av-carlos-calvo-4198-51357803.html>
{'ambientes': '3',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Avenida Carlos Calvo 4100',
 'dormitorios': '2',
 'expensas': ' 21.000',
 'm2_cub': '59',
 'm2_total': '59',
 'moneda': '$',
 'title': 'Alquilo 3 Ambientes Av Carlos Calvo 4198',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquilo-3-ambientes-av-carlos-calvo-4198-51357803.html'}
2023-03-27 22:45:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/en-alquiler!-hermoso-2-ambientes-con-cochera-en-51386499.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/en-alquiler!-hermoso-2-ambientes-con-cochera-en-51386499.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Araoz al 1900',
 'dormitorios': '1',
 'expensas': ' 32.000',
 'm2_total': '50',
 'moneda': '$',
 'title': 'En Alquiler! Hermoso 2 Ambientes con Cochera en Palermo!',
 'url': 'https://www.zonaprop.com.ar/propiedades/en-alquiler!-hermoso-2-ambientes-con-cochera-en-51386499.html'}
2023-03-27 22:45:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dos-ambientes-a-estrenar.-muy-luminoso!-apto-51383876.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dos-ambientes-a-estrenar.-muy-luminoso!-apto-51383876.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Viamonte 1612',
 'dormitorios': '1',
 'expensas': ' 17.000',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Dos Ambientes a Estrenar. Muy Luminoso! Apto Profesional Barrio '
          'Norte.',
 'url': 'https://www.zonaprop.com.ar/propiedades/dos-ambientes-a-estrenar.-muy-luminoso!-apto-51383876.html'}
2023-03-27 22:45:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-con-balcon-en-alquiler-51378527.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-con-balcon-en-alquiler-51378527.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Guido al 1500',
 'dormitorios': '3',
 'expensas': ' 156.035',
 'm2_cub': '170',
 'm2_total': '181',
 'moneda': 'USD',
 'title': 'Departamento 5 Ambientes con Balcón en Alquiler - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-con-balcon-en-alquiler-51378527.html'}
2023-03-27 22:45:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-en-alquiler-a-36-meses-51170037.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-en-alquiler-a-36-meses-51170037.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Luis María Campos 1300',
 'dormitorios': '3',
 'expensas': ' 77.000',
 'm2_cub': '89',
 'm2_total': '91',
 'moneda': 'USD',
 'title': 'Depto 4 Ambientes en Alquiler a 36 Meses',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-en-alquiler-a-36-meses-51170037.html'}
2023-03-27 22:45:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-depen-canitas-amen-pileta-51251001.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-depen-canitas-amen-pileta-51251001.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Republica de Eslovenia 1900 1900',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '100',
 'm2_total': '109',
 'moneda': 'USD',
 'title': 'Alquiler 4 Ambientes + Depen Cañitas Amen Pileta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-depen-canitas-amen-pileta-51251001.html'}
2023-03-27 22:45:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/mono-ambiente-dividido-en-palermo-con-patio-51378723.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/mono-ambiente-dividido-en-palermo-con-patio-51378723.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Güemes 4500',
 'expensas': ' 18.000',
 'm2_cub': '42',
 'm2_total': '58',
 'moneda': '$',
 'title': 'Mono Ambiente Dividido en Palermo con Patio',
 'url': 'https://www.zonaprop.com.ar/propiedades/mono-ambiente-dividido-en-palermo-con-patio-51378723.html'}
2023-03-27 22:45:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-de-20-m-con-patio!-51261800.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-de-20-m-con-patio!-51261800.html>
{'ambientes': '1',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Avenida San Martín 3100',
 'expensas': ' 8.000',
 'm2_cub': '20',
 'm2_total': '23',
 'moneda': '$',
 'title': 'Monoambiente de 20 m con Patio!',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-de-20-m-con-patio!-51261800.html'}
2023-03-27 22:45:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/juana-manso-1122-piso-11-departamento-3-51360489.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/juana-manso-1122-piso-11-departamento-3-51360489.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1100',
 'dormitorios': '1',
 'expensas': ' 53.000',
 'm2_cub': '67',
 'm2_total': '71',
 'moneda': 'USD',
 'title': 'Juana Manso 1122 - Piso 11° Departamento 3',
 'url': 'https://www.zonaprop.com.ar/propiedades/juana-manso-1122-piso-11-departamento-3-51360489.html'}
2023-03-27 22:45:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/juramento-al-1900-impecable-vista-abierta-todo-sol-51278215.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/juramento-al-1900-impecable-vista-abierta-todo-sol-51278215.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av. Juramento 1900',
 'expensas': ' 7.637',
 'm2_cub': '18',
 'm2_total': '18',
 'moneda': '$',
 'title': 'Juramento Al 1900 - Impecable Vista Abierta Todo Sol - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/juramento-al-1900-impecable-vista-abierta-todo-sol-51278215.html'}
2023-03-27 22:45:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-49.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:45:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:45:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-palermo-apto-profesional-51380831.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-palermo-apto-profesional-51380831.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Lafinur 3000',
 'expensas': ' 16.000',
 'm2_cub': '22',
 'm2_total': '23',
 'moneda': 'USD',
 'title': 'Alquiler Monoambiente Palermo Apto Profesional',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-palermo-apto-profesional-51380831.html'}
2023-03-27 22:46:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-vistas-panoramicas.-cochera.-51290275.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-vistas-panoramicas.-cochera.-51290275.html>
{'ambientes': '3',
 'barrio': ', Liniers, Capital Federal',
 'direccion': 'Madero al 100',
 'dormitorios': '2',
 'expensas': ' 17.500',
 'm2_cub': '67',
 'm2_total': '67',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes Vistas Panorámicas. Cochera.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-vistas-panoramicas.-cochera.-51290275.html'}
2023-03-27 22:46:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-3-ambientes-con-full-amenities-cochera.-torre.-51346647.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-3-ambientes-con-full-amenities-cochera.-torre.-51346647.html>
{'ambientes': '3',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Serrano 287',
 'dormitorios': '2',
 'expensas': ' 35.000',
 'm2_cub': '63',
 'm2_total': '68',
 'moneda': '$',
 'title': 'Depto 3 Ambientes con Full Amenities Cochera. Torre. Seguridad. '
          'Palermo Queens',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-3-ambientes-con-full-amenities-cochera.-torre.-51346647.html'}
2023-03-27 22:46:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-alquiler-comercial-en-villa-urquiza-caba-51377895.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-alquiler-comercial-en-villa-urquiza-caba-51377895.html>
{'ambientes': '5',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Estomba al 2200',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '245',
 'm2_total': '395',
 'moneda': 'USD',
 'title': 'Casa - Alquiler Comercial en Villa Urquiza Caba',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-alquiler-comercial-en-villa-urquiza-caba-51377895.html'}
2023-03-27 22:46:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/oppel-departamento-en-alquiler-nunez-capital-51267132.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/oppel-departamento-en-alquiler-nunez-capital-51267132.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'VEDIA 1600. Entre Av. del libertador y 11 de sep',
 'dormitorios': '2',
 'expensas': ' 38.295',
 'm2_cub': '58',
 'm2_total': '85',
 'moneda': '$',
 'title': 'Oppel | Departamento en Alquiler | Nuñez Capital Federal |',
 'url': 'https://www.zonaprop.com.ar/propiedades/oppel-departamento-en-alquiler-nunez-capital-51267132.html'}
2023-03-27 22:46:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-villa-urquiza-51296790.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-villa-urquiza-51296790.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Franklin Roosevelt al 5600',
 'expensas': ' 15.000',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Departamento - Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-villa-urquiza-51296790.html'}
2023-03-27 22:46:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-4-ambientes-las-canitas-seg-24-has-51154625.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-4-ambientes-las-canitas-seg-24-has-51154625.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Republica de Eslovenia 1900 1900',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '108',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Alquiler Depto 4 Ambientes Las Cañitas Seg 24 Has',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-4-ambientes-las-canitas-seg-24-has-51154625.html'}
2023-03-27 22:46:27 [scrapy.extensions.logstats] INFO: Crawled 717 pages (at 18 pages/min), scraped 668 items (at 17 items/min)
2023-03-27 22:46:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-capital-federal-palermo-chico-51346910.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-capital-federal-palermo-chico-51346910.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Ortiz de Ocampo y Figueroa Alcorta, Palermo',
 'dormitorios': '3',
 'expensas': ' 57.000',
 'm2_cub': '150',
 'm2_total': '161',
 'moneda': 'USD',
 'title': 'Departamento - Capital Federal, Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-capital-federal-palermo-chico-51346910.html'}
2023-03-27 22:46:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-cuatro-ambientes-en-caballito-con-amenities!-51173028.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-cuatro-ambientes-en-caballito-con-amenities!-51173028.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Méndez de Andes 527',
 'dormitorios': '2',
 'expensas': ' 39.160',
 'm2_cub': '84',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Alquiler Cuatro Ambientes en Caballito con Amenities!',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-cuatro-ambientes-en-caballito-con-amenities!-51173028.html'}
2023-03-27 22:46:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-ambientes-amoblado-recoleta-51339710.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-ambientes-amoblado-recoleta-51339710.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Libertad al 1600',
 'dormitorios': '2',
 'expensas': ' 84.000',
 'm2_cub': '62',
 'm2_total': '68',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler 3 Ambientes Amoblado Recoleta - Edificio '
          'con Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-ambientes-amoblado-recoleta-51339710.html'}
2023-03-27 22:46:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/pasaje-bollini-y-pacheco-de-melo-51312264.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/pasaje-bollini-y-pacheco-de-melo-51312264.html>
{'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Pasaje Bollini al 2200',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '300',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Pasaje Bollini y Pacheco de Melo',
 'url': 'https://www.zonaprop.com.ar/propiedades/pasaje-bollini-y-pacheco-de-melo-51312264.html'}
2023-03-27 22:46:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/mono-en-alquiler-temporal-palermo-soho-51279575.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/mono-en-alquiler-temporal-palermo-soho-51279575.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Fray Justo Santa María de Oro 2100',
 'expensas': ' 10.000',
 'm2_cub': '23',
 'm2_total': '28',
 'moneda': 'USD',
 'title': 'Mono en Alquiler Temporal Palermo Soho',
 'url': 'https://www.zonaprop.com.ar/propiedades/mono-en-alquiler-temporal-palermo-soho-51279575.html'}
2023-03-27 22:46:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/-venta-departamento-6-ambientes-con-balcon-y-cochera.-51379824.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/-venta-departamento-6-ambientes-con-balcon-y-cochera.-51379824.html>
{'ambientes': '6',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Uriburu al 1000',
 'dormitorios': '5',
 'expensas': ' 40.000',
 'm2_cub': '153',
 'm2_total': '181',
 'moneda': 'USD',
 'title': '[venta] Departamento 6 Ambientes con Balcón y Cochera. Barrio Norte '
          '/ Recoleta. Para Actualizar',
 'url': 'https://www.zonaprop.com.ar/propiedades/-venta-departamento-6-ambientes-con-balcon-y-cochera.-51379824.html'}
2023-03-27 22:46:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-amoblado-equipado-y-con-amenities.-51286448.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-amoblado-equipado-y-con-amenities.-51286448.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Montevideo 1250',
 'expensas': ' 40.078',
 'm2_cub': '46',
 'm2_total': '46',
 'moneda': 'USD',
 'title': 'Monoambiente Amoblado, Equipado y con Amenities. Recoleta.',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-amoblado-equipado-y-con-amenities.-51286448.html'}
2023-03-27 22:46:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-alquiler-2-amb-en-complejo-la-musa-star-51347542.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-alquiler-2-amb-en-complejo-la-musa-star-51347542.html>
{'ambientes': '2',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Jorge Newbery 3454',
 'dormitorios': '1',
 'expensas': ' 46.000',
 'm2_cub': '47',
 'm2_total': '52',
 'moneda': 'USD',
 'title': 'Excelente Alquiler 2 Amb en Complejo La Musa Star - Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-alquiler-2-amb-en-complejo-la-musa-star-51347542.html'}
2023-03-27 22:46:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51383971.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:46:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:46:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51383971.html>
{'ambientes': '3',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'La Pampa 4275',
 'dormitorios': '2',
 'expensas': ' 37.000',
 'm2_cub': '35',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Excelente 3 Ambientes en Edificio Full Amenities - Belgrano R',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51383971.html'}
2023-03-27 22:47:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-50.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-departamento-monoambiente-penthouse-con-terraza-51249289.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-departamento-monoambiente-penthouse-con-terraza-51249289.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '3 de Febrero al 1000',
 'dormitorios': '1',
 'expensas': ' 16.000',
 'm2_cub': '24',
 'm2_total': '38',
 'moneda': 'USD',
 'title': 'Venta Departamento Monoambiente Penthouse con Terraza Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-departamento-monoambiente-penthouse-con-terraza-51249289.html'}
2023-03-27 22:47:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/vista-al-rio-alquiler-libertador-departamento-1-51233521.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/vista-al-rio-alquiler-libertador-departamento-1-51233521.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Libertador 6600',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '43',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Vista Al Rio - Alquiler - Libertador - Departamento 1 Dormitorio - '
          'Belgrano - Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/vista-al-rio-alquiler-libertador-departamento-1-51233521.html'}
2023-03-27 22:47:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51142460.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51142460.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Malvinas Argentinas al 200',
 'expensas': ' 95.000',
 'm2_cub': '95',
 'm2_total': '105',
 'moneda': '$',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51142460.html'}
2023-03-27 22:47:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-piso-de-4-amb.-con-dependencia-y-2-cocheras-51384577.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-piso-de-4-amb.-con-dependencia-y-2-cocheras-51384577.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Junin 1500 8°',
 'dormitorios': '3',
 'expensas': ' 43.500',
 'm2_cub': '155',
 'm2_total': '167',
 'moneda': 'USD',
 'title': 'Excelente Piso de 4 Amb. con Dependencia y 2 Cocheras',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-piso-de-4-amb.-con-dependencia-y-2-cocheras-51384577.html'}
2023-03-27 22:47:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-ph-3-ambientes.-barracas-51171942.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-ph-3-ambientes.-barracas-51171942.html>
{'ambientes': '3',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Isabel la Católica 900',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '120',
 'm2_total': '129',
 'moneda': 'USD',
 'title': 'Alquiler PH 3 Ambientes. Barracas',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-ph-3-ambientes.-barracas-51171942.html'}
2023-03-27 22:47:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-dpto-amueblado-4-amb-balcon-villa-ortuzar-51265460.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-dpto-amueblado-4-amb-balcon-villa-ortuzar-51265460.html>
{'ambientes': '4',
 'barrio': ', Villa Ortuzar, Capital Federal',
 'direccion': 'Heredia 1400',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '89',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Alquiler Dpto Amueblado 4 Amb Balcón Villa Ortuzar',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-dpto-amueblado-4-amb-balcon-villa-ortuzar-51265460.html'}
2023-03-27 22:47:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-ph-253-2-m-sup2--excelente-estado-51252840.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-ph-253-2-m-sup2--excelente-estado-51252840.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Paraguay 2300',
 'dormitorios': '5',
 'expensas': 0,
 'm2_cub': '122',
 'm2_total': '253',
 'moneda': '$',
 'title': 'Alquiler PH 253,2 m² Excelente Estado',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-ph-253-2-m-sup2--excelente-estado-51252840.html'}
2023-03-27 22:47:27 [scrapy.extensions.logstats] INFO: Crawled 734 pages (at 17 pages/min), scraped 684 items (at 16 items/min)
2023-03-27 22:47:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/divino-departamento-3-ambientes-con-cochera!-51282025.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/divino-departamento-3-ambientes-con-cochera!-51282025.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Sucre 755',
 'dormitorios': '3',
 'expensas': ' 85.000',
 'm2_cub': '150',
 'm2_total': '160',
 'moneda': 'USD',
 'title': 'Divino Departamento 3 Ambientes con Cochera!',
 'url': 'https://www.zonaprop.com.ar/propiedades/divino-departamento-3-ambientes-con-cochera!-51282025.html'}
2023-03-27 22:47:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-luminoso-4-ambientes-con-dependencia!-51308108.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-luminoso-4-ambientes-con-dependencia!-51308108.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Marcelo T. de Alvear al 1300',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '131',
 'm2_total': '145',
 'moneda': '$',
 'title': 'Venta - Luminoso 4 Ambientes con Dependencia!',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-luminoso-4-ambientes-con-dependencia!-51308108.html'}
2023-03-27 22:47:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/urquiza-r-fte-balcon-51343078.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/urquiza-r-fte-balcon-51343078.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Bauness 2024 1ºb',
 'expensas': ' 9.000',
 'm2_cub': '30',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Urquiza R Fte Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/urquiza-r-fte-balcon-51343078.html'}
2023-03-27 22:47:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-cuatro-ambientes-en-caballito-con-amenities!-51172674.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-cuatro-ambientes-en-caballito-con-amenities!-51172674.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Méndez de Andes 527',
 'dormitorios': '3',
 'expensas': ' 53.750',
 'm2_cub': '84',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Alquiler Cuatro Ambientes en Caballito con Amenities!',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-cuatro-ambientes-en-caballito-con-amenities!-51172674.html'}
2023-03-27 22:47:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-46-m-totales-fresias-51360947.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-46-m-totales-fresias-51360947.html>
{'ambientes': '2',
 'barrio': ', Villa Santa Rita, Capital Federal',
 'direccion': 'Remedios de Escalada de san Martin al 2700',
 'dormitorios': '1',
 'expensas': ' 22.800',
 'm2_cub': '43',
 'm2_total': '46',
 'moneda': '$',
 'title': 'Departamento de 2 Ambientes 46 m Totales - Fresias Garden - Villa '
          'Santa Rita',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-46-m-totales-fresias-51360947.html'}
2023-03-27 22:47:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51383993.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51383993.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'La Pampa 4275',
 'dormitorios': '2',
 'expensas': ' 37.000',
 'm2_cub': '35',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Excelente 3 Ambientes en Edificio Full Amenities - Belgrano R',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-edificio-full-amenities-51383993.html'}
2023-03-27 22:47:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-departamento-centro-51265976.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-departamento-centro-51265976.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Alquiler Temporario -departamento Centro',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Alquiler Temporario - Departamento Centro',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-departamento-centro-51265976.html'}
2023-03-27 22:47:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51173583.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:47:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:47:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51173583.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Dorrego al 2500',
 'dormitorios': '1',
 'expensas': ' 45.000',
 'm2_total': '58',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51173583.html'}
2023-03-27 22:48:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-tipo-casa!-3-amb-con-cochera-y-balcon-51238066.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-tipo-casa!-3-amb-con-cochera-y-balcon-51238066.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Bacacay 3840',
 'dormitorios': '2',
 'expensas': ' 10.000',
 'm2_cub': '115',
 'm2_total': '115',
 'moneda': '$',
 'title': 'Departamento Tipo Casa! 3 Amb con Cochera y Balcón - Parrillas '
          'Jardín - Bajas Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-tipo-casa!-3-amb-con-cochera-y-balcon-51238066.html'}
2023-03-27 22:48:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-51.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-villa-crespo-51370876.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-villa-crespo-51370876.html>
{'ambientes': '2',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Corrientes Av. al 5000',
 'dormitorios': '1',
 'expensas': ' 12.900',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Departamento en Villa Crespo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-villa-crespo-51370876.html'}
2023-03-27 22:48:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/unico-duplex-en-ayacucho-100-347-m-sup2--cubiertos-51137989.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/unico-duplex-en-ayacucho-100-347-m-sup2--cubiertos-51137989.html>
{'ambientes': '6',
 'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Ayacucho 100',
 'dormitorios': '5',
 'expensas': ' 90.000',
 'm2_cub': '347',
 'm2_total': '347',
 'moneda': '$',
 'title': 'Unico Duplex en Ayacucho 100 - 347 m² Cubiertos en 2 Plantas - '
          'Centro',
 'url': 'https://www.zonaprop.com.ar/propiedades/unico-duplex-en-ayacucho-100-347-m-sup2--cubiertos-51137989.html'}
2023-03-27 22:48:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-barrio-norte-51374792.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-barrio-norte-51374792.html>
{'ambientes': '7',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Azcuénaga al 700',
 'dormitorios': '6',
 'expensas': 0,
 'm2_cub': '261',
 'm2_total': '261',
 'moneda': '$',
 'title': 'PH - Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-barrio-norte-51374792.html'}
2023-03-27 22:48:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-duplex-3-ambientes-con-cochera-en-las-canitas-51279362.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-duplex-3-ambientes-con-cochera-en-las-canitas-51279362.html>
{'ambientes': '3',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Baez al 500',
 'dormitorios': '2',
 'expensas': ' 61.500',
 'm2_cub': '78',
 'm2_total': '83',
 'moneda': '$',
 'title': 'Alquiler Duplex 3 Ambientes con Cochera en Las Cañitas',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-duplex-3-ambientes-con-cochera-en-las-canitas-51279362.html'}
2023-03-27 22:48:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51192743.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51192743.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av. Alvear al 1400',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_total': '167',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51192743.html'}
2023-03-27 22:48:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-parque-patricios-alquiler-luminoso-51385272.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-parque-patricios-alquiler-luminoso-51385272.html>
{'ambientes': '1',
 'barrio': ', Parque Patricios, Capital Federal',
 'direccion': 'Av. Garay al 2300',
 'expensas': ' 7.200',
 'm2_cub': '20',
 'm2_total': '20',
 'moneda': '$',
 'title': 'Departamento - Parque Patricios - Alquiler - Luminoso - '
          'Monoambiente',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-parque-patricios-alquiler-luminoso-51385272.html'}
2023-03-27 22:48:27 [scrapy.extensions.logstats] INFO: Crawled 750 pages (at 16 pages/min), scraped 699 items (at 15 items/min)
2023-03-27 22:48:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-tres-ambientes-en-caballito-con-amenities!-51365113.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-tres-ambientes-en-caballito-con-amenities!-51365113.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Méndez de Andes 527',
 'dormitorios': '2',
 'expensas': ' 37.160',
 'm2_cub': '58',
 'm2_total': '61',
 'moneda': 'USD',
 'title': 'Alquiler Tres Ambientes en Caballito con Amenities!',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-tres-ambientes-en-caballito-con-amenities!-51365113.html'}
2023-03-27 22:48:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-av-del-libertador-y-suipacha-51300025.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-av-del-libertador-y-suipacha-51300025.html>
{'ambientes': '5',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Av. Del Libertador y Suipacha',
 'dormitorios': '3',
 'expensas': ' 91.000',
 'm2_cub': '186',
 'm2_total': '247',
 'moneda': 'USD',
 'title': 'Alquiler Amoblado - Av del Libertador y Suipacha - Retiro - C. A. '
          'b. A.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-av-del-libertador-y-suipacha-51300025.html'}
2023-03-27 22:48:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-4amb-c-dep-y-balcon-apto-prof.-51256475.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-4amb-c-dep-y-balcon-apto-prof.-51256475.html>
{'ambientes': '4',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Avenida Triunvirato 3700',
 'dormitorios': '3',
 'expensas': ' 30.000',
 'm2_cub': '77',
 'm2_total': '85',
 'moneda': '$',
 'title': 'Alquiler Depto 4amb C/dep y Balcón - Apto Prof.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-4amb-c-dep-y-balcon-apto-prof.-51256475.html'}
2023-03-27 22:48:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lindo-2-ambientes-frente-al-solar-de-la-abadia-51374932.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lindo-2-ambientes-frente-al-solar-de-la-abadia-51374932.html>
{'ambientes': '2',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Arce 900 3°',
 'dormitorios': '1',
 'expensas': ' 17.050',
 'm2_cub': '30',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Lindo 2 Ambientes Frente Al Solar de La Abadía',
 'url': 'https://www.zonaprop.com.ar/propiedades/lindo-2-ambientes-frente-al-solar-de-la-abadia-51374932.html'}
2023-03-27 22:48:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/en-alquiler!-muy-buen-4-ambientes-con-balcon-en-51190849.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/en-alquiler!-muy-buen-4-ambientes-con-balcon-en-51190849.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Vuelta de Obligado al 1900',
 'dormitorios': '3',
 'expensas': ' 72.000',
 'm2_cub': '74',
 'm2_total': '77',
 'moneda': '$',
 'title': 'En Alquiler! Muy Buen 4 Ambientes con Balcón en Belgrano!',
 'url': 'https://www.zonaprop.com.ar/propiedades/en-alquiler!-muy-buen-4-ambientes-con-balcon-en-51190849.html'}
2023-03-27 22:48:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/paraguay-y-coronel-diaz-25-m-sup2--palermo-51218987.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/paraguay-y-coronel-diaz-25-m-sup2--palermo-51218987.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Paraguay 3400',
 'expensas': ' 17.718',
 'm2_cub': '25',
 'm2_total': '25',
 'moneda': '$',
 'title': 'Paraguay y Coronel Diaz - 25 m² - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/paraguay-y-coronel-diaz-25-m-sup2--palermo-51218987.html'}
2023-03-27 22:48:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/solo-profesional-alquiler-ph-almagro-4-ambientes-51282486.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/solo-profesional-alquiler-ph-almagro-4-ambientes-51282486.html>
{'ambientes': '4',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Bartolome Mitre 3800',
 'dormitorios': '3',
 'expensas': ' 15.000',
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Solo Profesional Alquiler PH Almagro 4 Ambientes Terraza Balcon '
          'Bajas Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/solo-profesional-alquiler-ph-almagro-4-ambientes-51282486.html'}
2023-03-27 22:48:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-oportunidad!-saavedra-51293785.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:48:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:48:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-oportunidad!-saavedra-51293785.html>
{'ambientes': '3',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Melian 3200',
 'dormitorios': '2',
 'expensas': ' 21.000',
 'm2_cub': '44',
 'm2_total': '44',
 'moneda': '$',
 'title': 'Departamento de 3 Ambientes - Oportunidad! - Saavedra',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-oportunidad!-saavedra-51293785.html'}
2023-03-27 22:49:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-5-amb-c-dep-cochera-palermo-chico-51311848.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-5-amb-c-dep-cochera-palermo-chico-51311848.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Avenida del Libertador 2600',
 'dormitorios': '3',
 'expensas': ' 115.000',
 'm2_cub': '122',
 'm2_total': '122',
 'moneda': 'USD',
 'title': 'Alquiler Depto 5 Amb C/dep Cochera - Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-5-amb-c-dep-cochera-palermo-chico-51311848.html'}
2023-03-27 22:49:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-solo-uso-comercial-alquiler-villa-urquiza-51244991.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-solo-uso-comercial-alquiler-villa-urquiza-51244991.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'NAHUEL HUAPI 4300. Entre Donado y Mariano acha',
 'expensas': ' 10.500',
 'm2_cub': '32',
 'm2_total': '32',
 'moneda': '$',
 'title': 'Monoambiente Sólo Uso Comercial Alquiler Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-solo-uso-comercial-alquiler-villa-urquiza-51244991.html'}
2023-03-27 22:49:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-52.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51262628.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51262628.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1500',
 'dormitorios': '2',
 'expensas': ' 57.000',
 'm2_cub': '78',
 'm2_total': '87',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51262628.html'}
2023-03-27 22:49:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-4-amb-en-monte-castro-con-terraza-sin-expensas-51374312.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-4-amb-en-monte-castro-con-terraza-sin-expensas-51374312.html>
{'ambientes': '4',
 'barrio': ', Monte Castro, Capital Federal',
 'direccion': 'Avenida Álvarez Jonte 5200',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '85',
 'm2_total': '125',
 'moneda': '$',
 'title': 'PH 4 Amb en Monte Castro con Terraza Sin Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-4-amb-en-monte-castro-con-terraza-sin-expensas-51374312.html'}
2023-03-27 22:49:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-4-ambientes-palermo-51383893.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-4-ambientes-palermo-51383893.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av Coronel Díaz 1700',
 'dormitorios': '3',
 'expensas': ' 38.200',
 'm2_cub': '89',
 'm2_total': '93',
 'moneda': '$',
 'title': 'Departamento Alquiler 4 Ambientes - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-4-ambientes-palermo-51383893.html'}
2023-03-27 22:49:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-5-estr-full-amnties.-hermoso-dpto-2-3-amb-alto-51353406.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-5-estr-full-amnties.-hermoso-dpto-2-3-amb-alto-51353406.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Colpayo ',
 'dormitorios': '1',
 'expensas': ' 44.000',
 'm2_cub': '54',
 'm2_total': '59',
 'moneda': '$',
 'title': 'Torre 5 Estr Full Amnties. Hermoso Dpto 2 / 3 Amb Alto Vig',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-5-estr-full-amnties.-hermoso-dpto-2-3-amb-alto-51353406.html'}
2023-03-27 22:49:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-51179016.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-51179016.html>
{'ambientes': '5',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Alquiler- Departamento-recoleta -',
 'dormitorios': '4',
 'expensas': ' 58.000',
 'm2_cub': '150',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Alquiler - Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-51179016.html'}
2023-03-27 22:49:27 [scrapy.extensions.logstats] INFO: Crawled 766 pages (at 16 pages/min), scraped 714 items (at 15 items/min)
2023-03-27 22:49:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/bau-propiedades:-departamento-3-dorm.-soleado-a-m-del-51237926.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/bau-propiedades:-departamento-3-dorm.-soleado-a-m-del-51237926.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Cerrito al 1500',
 'dormitorios': '3',
 'expensas': ' 50.000',
 'm2_cub': '90',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Bau Propiedades: Departamento 3 Dorm., Soleado a m del Patio '
          'Bullrich!',
 'url': 'https://www.zonaprop.com.ar/propiedades/bau-propiedades:-departamento-3-dorm.-soleado-a-m-del-51237926.html'}
2023-03-27 22:49:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-3-ambientes-en-torre-de-51282303.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-3-ambientes-en-torre-de-51282303.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Mendez de Andes 527',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_cub': '55',
 'm2_total': '62',
 'moneda': 'USD',
 'title': 'Espectacular Departamento de 3 Ambientes en Torre de Categoría B - '
          'Residence - Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-departamento-de-3-ambientes-en-torre-de-51282303.html'}
2023-03-27 22:49:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-nunez-vista-panoramica-51388353.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-nunez-vista-panoramica-51388353.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Vedia 1900',
 'dormitorios': '1',
 'expensas': ' 15.500',
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Alquiler 2 Ambientes en Nuñez Vista Panoràmica',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-nunez-vista-panoramica-51388353.html'}
2023-03-27 22:49:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-y-moderno.-2-dorm.-cochera-amenities!-51385050.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-y-moderno.-2-dorm.-cochera-amenities!-51385050.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Nuñez 2400',
 'dormitorios': '2',
 'expensas': ' 18.000',
 'm2_cub': '65',
 'm2_total': '83',
 'moneda': 'USD',
 'title': 'Excelente y Moderno. 2 Dorm. - Cochera - Amenities! Seg 24 Hs.',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-y-moderno.-2-dorm.-cochera-amenities!-51385050.html'}
2023-03-27 22:49:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/zona-premium-91-m-sup2--tot.-bcon.-al-fte-cochera-y-51280282.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:49:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/zona-premium-91-m-sup2--tot.-bcon.-al-fte-cochera-y-51280282.html>
{'ambientes': '4',
 'barrio': ', Agronomía, Capital Federal',
 'direccion': 'NAZARRE 2600. Entre Estado plurinacional de bolivi y Esquina',
 'dormitorios': '3',
 'expensas': ' 28.500',
 'm2_cub': '83',
 'm2_total': '91',
 'moneda': '$',
 'title': 'Zona Premium, 91 m² Tot. Bcon. Al Fte, Cochera y Baulera!',
 'url': 'https://www.zonaprop.com.ar/propiedades/zona-premium-91-m-sup2--tot.-bcon.-al-fte-cochera-y-51280282.html'}
2023-03-27 22:49:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/arroyo-y-cerrito-51376907.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/arroyo-y-cerrito-51376907.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Arroyo al 900',
 'dormitorios': '3',
 'expensas': ' 129.472',
 'm2_cub': '214',
 'm2_total': '224',
 'moneda': 'USD',
 'title': 'Arroyo y Cerrito',
 'url': 'https://www.zonaprop.com.ar/propiedades/arroyo-y-cerrito-51376907.html'}
2023-03-27 22:49:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-faena-aleph-dacal-bienes-51271975.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-faena-aleph-dacal-bienes-51271975.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Petrona Eyle al 300 Faena Aleph Piso 3 B',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '95',
 'm2_total': '115',
 'moneda': 'USD',
 'title': 'Departamento en Puerto Madero Faena Aleph Dacal Bienes Raices',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-faena-aleph-dacal-bienes-51271975.html'}
2023-03-27 22:49:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-en-caballito-51364308.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-en-caballito-51364308.html>
{'ambientes': '1',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Senillosa al 100',
 'expensas': ' 11.000',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Monoambiente en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-en-caballito-51364308.html'}
2023-03-27 22:49:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/-en-excelente-ubicacion-proximo-al-parque-centenario-51383863.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/-en-excelente-ubicacion-proximo-al-parque-centenario-51383863.html>
{'ambientes': '4',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'AV. ANGEL GALLARDO 100. Entre Av. corrientes y Rio de janeiro',
 'dormitorios': '3',
 'expensas': ' 27.000',
 'm2_cub': '96',
 'm2_total': '138',
 'moneda': '$',
 'title': '¡En Excelente Ubicación Próximo Al Parque Centenario, 3 Pa',
 'url': 'https://www.zonaprop.com.ar/propiedades/-en-excelente-ubicacion-proximo-al-parque-centenario-51383863.html'}
2023-03-27 22:49:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-curapaligue-al-100-51360966.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:49:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-curapaligue-al-100-51360966.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'CURAPALIGUE 100. Entre Falcon, ramon l., cnel.',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes. | Curapaligue Al 100',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-curapaligue-al-100-51360966.html'}
2023-03-27 22:50:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-caballito-51282748.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-caballito-51282748.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Valle al 300',
 'dormitorios': '2',
 'expensas': ' 50.000',
 'm2_cub': '66',
 'm2_total': '72',
 'moneda': '$',
 'title': 'Alquiler 3 Ambientes Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-caballito-51282748.html'}
2023-03-27 22:50:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-53.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:50:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/zona-premium-91-m-sup2--tot.-bcon.-al-fte-cochera-y-51277674.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/zona-premium-91-m-sup2--tot.-bcon.-al-fte-cochera-y-51277674.html>
{'ambientes': '4',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'NAZARRE 2600. Entre Estado plurinacional de bolivi y Esquina',
 'dormitorios': '3',
 'expensas': ' 28.500',
 'm2_cub': '83',
 'm2_total': '91',
 'moneda': '$',
 'title': 'Zona Premium, 91 m² Tot. Bcon. Al Fte, Cochera y Baulera!',
 'url': 'https://www.zonaprop.com.ar/propiedades/zona-premium-91-m-sup2--tot.-bcon.-al-fte-cochera-y-51277674.html'}
2023-03-27 22:50:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-liniers-departamento-2-ambientes-51310272.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:50:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-liniers-departamento-2-ambientes-51310272.html>
{'ambientes': '2',
 'barrio': ', Liniers, Capital Federal',
 'direccion': 'Ercilla 6600',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_cub': '28',
 'm2_total': '28',
 'moneda': '$',
 'title': 'Alquiler Liniers - Departamento 2 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-liniers-departamento-2-ambientes-51310272.html'}
2023-03-27 22:50:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-muy-luminoso-51364037.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-muy-luminoso-51364037.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Armenia 2100',
 'dormitorios': '2',
 'expensas': ' 21.000',
 'm2_cub': '46',
 'm2_total': '46',
 'moneda': '$',
 'title': 'Alquiler 3 Ambientes Muy Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-muy-luminoso-51364037.html'}
2023-03-27 22:50:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-villa-urquiza-51373215.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-villa-urquiza-51373215.html>
{'ambientes': '3',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Piran al 6200 - Piso 6º',
 'dormitorios': '2',
 'expensas': ' 12.000',
 'm2_cub': '60',
 'm2_total': '66',
 'moneda': '$',
 'title': 'Departamento en Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-villa-urquiza-51373215.html'}
2023-03-27 22:50:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/fantastica-casa-con-ascensor-apto-profesional-en-51231442.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/fantastica-casa-con-ascensor-apto-profesional-en-51231442.html>
{'ambientes': '7',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Artilleros al 1900',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '170',
 'm2_total': '170',
 'moneda': 'USD',
 'title': 'Fantastica Casa con Ascensor, Apto Profesional en Belgrano Chico.',
 'url': 'https://www.zonaprop.com.ar/propiedades/fantastica-casa-con-ascensor-apto-profesional-en-51231442.html'}
2023-03-27 22:50:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-en-palermo-con-51369008.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-en-palermo-con-51369008.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'jorge newbery 3454',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '37',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Alquiler Temporario Monoambiente en Palermo con Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-en-palermo-con-51369008.html'}
2023-03-27 22:50:27 [scrapy.extensions.logstats] INFO: Crawled 784 pages (at 18 pages/min), scraped 731 items (at 17 items/min)
2023-03-27 22:50:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-cuatro-ambientes-en-caballito-con-amenities!-51172728.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-cuatro-ambientes-en-caballito-con-amenities!-51172728.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Méndez de Andes 527',
 'dormitorios': '3',
 'expensas': ' 53.750',
 'm2_cub': '84',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Alquiler Cuatro Ambientes en Caballito con Amenities!',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-cuatro-ambientes-en-caballito-con-amenities!-51172728.html'}
2023-03-27 22:50:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-casa-5-amb-villa-pueyrredon-cochera-51311455.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-casa-5-amb-villa-pueyrredon-cochera-51311455.html>
{'ambientes': '5',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'Nazca 5500',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '227',
 'm2_total': '267',
 'moneda': 'USD',
 'title': 'Alquiler Casa 5 Amb Villa Pueyrredon Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-casa-5-amb-villa-pueyrredon-cochera-51311455.html'}
2023-03-27 22:50:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-con-detalles-de-categoria-con-51342537.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-con-detalles-de-categoria-con-51342537.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Alvarez Thomas 3500 10°',
 'dormitorios': '1',
 'expensas': ' 17.500',
 'm2_cub': '45',
 'm2_total': '52',
 'moneda': 'USD',
 'title': 'Excelente 2 Ambientes con Detalles de Categoría con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-con-detalles-de-categoria-con-51342537.html'}
2023-03-27 22:50:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-amoblado-por-abasto-shopping-51264582.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-amoblado-por-abasto-shopping-51264582.html>
{'ambientes': '3',
 'barrio': ', Abasto, Capital Federal',
 'direccion': 'Gallo Esq. Guardia Vieja',
 'dormitorios': '2',
 'expensas': ' 21.000',
 'm2_cub': '56',
 'm2_total': '60',
 'moneda': 'USD',
 'title': '3 Ambientes Amoblado por Abasto Shopping',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-amoblado-por-abasto-shopping-51264582.html'}
2023-03-27 22:50:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-54.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:50:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51383448.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51383448.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Santa Fe al 2600',
 'dormitorios': '3',
 'expensas': ' 50.000',
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Departamento en Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51383448.html'}
2023-03-27 22:50:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-venta-o-alquiler-vivienda-u-oficina-51258409.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-venta-o-alquiler-vivienda-u-oficina-51258409.html>
{'ambientes': '4',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'San Martín al 500',
 'dormitorios': '3',
 'expensas': ' 50.000',
 'm2_cub': '125',
 'm2_total': '125',
 'moneda': '$',
 'title': 'Departamento en Venta o Alquiler, Vivienda U Oficina - Microcentro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-venta-o-alquiler-vivienda-u-oficina-51258409.html'}
2023-03-27 22:50:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-amb.-con-terraza-propia-51262048.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-amb.-con-terraza-propia-51262048.html>
{'ambientes': '3',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Jean Jaure al 700',
 'dormitorios': '2',
 'expensas': ' 33.000',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Departamento 3 Amb. con Terraza Propia',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-amb.-con-terraza-propia-51262048.html'}
2023-03-27 22:50:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-de-4-ambientes-con-dependencias-y-cochera.-51383598.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:50:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-de-4-ambientes-con-dependencias-y-cochera.-51383598.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Valle al 1100',
 'dormitorios': '3',
 'expensas': ' 53.000',
 'm2_cub': '136',
 'm2_total': '136',
 'moneda': 'USD',
 'title': 'Semipiso de 4 Ambientes con Dependencias y Cochera. - Caballito - '
          'Venta',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-de-4-ambientes-con-dependencias-y-cochera.-51383598.html'}
2023-03-27 22:51:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-ambientes-terraza-pileta-51292861.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-ambientes-terraza-pileta-51292861.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Scalabrini Ortiz al 3300',
 'dormitorios': '2',
 'expensas': ' 95.000',
 'm2_cub': '100',
 'm2_total': '203',
 'moneda': '$',
 'title': 'Departamento en Alquiler 3 Ambientes Terraza / Pileta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-ambientes-terraza-pileta-51292861.html'}
2023-03-27 22:51:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-alquiler-2-amb-en-complejo-la-musa-star-51347525.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-alquiler-2-amb-en-complejo-la-musa-star-51347525.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Jorge Newbery 3454',
 'dormitorios': '1',
 'expensas': ' 46.000',
 'm2_cub': '47',
 'm2_total': '52',
 'moneda': 'USD',
 'title': 'Excelente Alquiler 2 Amb en Complejo La Musa Star - Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-alquiler-2-amb-en-complejo-la-musa-star-51347525.html'}
2023-03-27 22:51:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-de-20-m-con-patio!-51261796.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-de-20-m-con-patio!-51261796.html>
{'ambientes': '1',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Avenida San Martín 3100',
 'expensas': ' 8.000',
 'm2_cub': '20',
 'm2_total': '23',
 'moneda': '$',
 'title': 'Monoambiente de 20 m con Patio!',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-de-20-m-con-patio!-51261796.html'}
2023-03-27 22:51:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-55.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:51:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-nunez-con-amenities-51299010.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-nunez-con-amenities-51299010.html>
{'ambientes': '4',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Avenida Congreso 1500',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '88',
 'm2_total': '98',
 'moneda': 'USD',
 'title': 'Alquiler 4 Ambientes Nuñez con Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-nunez-con-amenities-51299010.html'}
2023-03-27 22:51:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-torres-le-parc-alcorta-51265625.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:51:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-torres-le-parc-alcorta-51265625.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Avenida Presidente Figueroa Alcorta 3500',
 'dormitorios': '3',
 'expensas': ' 260.000',
 'm2_cub': '208',
 'm2_total': '208',
 'moneda': 'USD',
 'title': 'Alquiler Torres Le Parc Alcorta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-torres-le-parc-alcorta-51265625.html'}
2023-03-27 22:51:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-temporal-en-alquiler-4-ambientes-con-51235542.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:51:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-temporal-en-alquiler-4-ambientes-con-51235542.html>
{'ambientes': '4',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'Teodoro García al 1900',
 'dormitorios': '3',
 'expensas': ' 80.000',
 'm2_cub': '130',
 'm2_total': '210',
 'moneda': 'USD',
 'title': 'Departamento Temporal en Alquiler 4 Ambientes con Terraza. Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-temporal-en-alquiler-4-ambientes-con-51235542.html'}
2023-03-27 22:51:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-de-categoria-con-vista-a-la-embajada-de-australia-51202632.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-de-categoria-con-vista-a-la-embajada-de-australia-51202632.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Villanueva al 1300',
 'dormitorios': '4',
 'expensas': ' 140.000',
 'm2_cub': '178',
 'm2_total': '191',
 'moneda': 'USD',
 'title': 'Piso de Categoría con Vista a La Embajada de Australia - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-de-categoria-con-vista-a-la-embajada-de-australia-51202632.html'}
2023-03-27 22:51:27 [scrapy.extensions.logstats] INFO: Crawled 801 pages (at 17 pages/min), scraped 746 items (at 15 items/min)
2023-03-27 22:51:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-quartier-de-oro-51299886.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-quartier-de-oro-51299886.html>
{'ambientes': '3',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Av. Cerviño 4500',
 'dormitorios': '2',
 'expensas': ' 107.000',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Departamento en Quartier de Oro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-quartier-de-oro-51299886.html'}
2023-03-27 22:51:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-villa-urquiza-51341084.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-villa-urquiza-51341084.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Donado al 1175 3° g',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '48',
 'm2_total': '53',
 'moneda': '$',
 'title': 'Departamento en Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-villa-urquiza-51341084.html'}
2023-03-27 22:51:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-2-ambientes-c-balcon-51285223.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-2-ambientes-c-balcon-51285223.html>
{'ambientes': '2',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'Av. Directorio 3500',
 'dormitorios': '1',
 'expensas': ' 18.500',
 'm2_cub': '37',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Alquiler de Departamento 2 Ambientes C Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-2-ambientes-c-balcon-51285223.html'}
2023-03-27 22:51:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-ph-2-amb-con-terraza-v.-devoto-s-expensas-51229517.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-ph-2-amb-con-terraza-v.-devoto-s-expensas-51229517.html>
{'ambientes': '2',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Nueva York 4800',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '44',
 'm2_total': '84',
 'moneda': '$',
 'title': 'Alquiler PH 2 Amb con Terraza V. Devoto S/expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-ph-2-amb-con-terraza-v.-devoto-s-expensas-51229517.html'}
2023-03-27 22:51:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/5-ambientes-corrientes-avda.-al-5900-51371237.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/5-ambientes-corrientes-avda.-al-5900-51371237.html>
{'ambientes': '5',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Corrientes, Avda. 5900',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': '$',
 'title': '5 Ambientes | Corrientes, Avda. Al 5900',
 'url': 'https://www.zonaprop.com.ar/propiedades/5-ambientes-corrientes-avda.-al-5900-51371237.html'}
2023-03-27 22:51:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporario-51380687.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporario-51380687.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Araoz al 2800',
 'dormitorios': '3',
 'expensas': ' 66.020',
 'm2_cub': '105',
 'm2_total': '107',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporario',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporario-51380687.html'}
2023-03-27 22:51:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-villa-pueyrredon-51165785.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-villa-pueyrredon-51165785.html>
{'ambientes': '3',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'Bolivia al 5000',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '135',
 'm2_total': '411',
 'moneda': '$',
 'title': 'Casa - Villa Pueyrredon',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-villa-pueyrredon-51165785.html'}
2023-03-27 22:51:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-3-ambientes-51270827.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:51:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-3-ambientes-51270827.html>
{'ambientes': '3',
 'barrio': ', La Paternal, Capital Federal',
 'direccion': 'Doctor Adolfo Dickman 1200',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '52',
 'm2_total': '56',
 'moneda': '$',
 'title': 'Alquiler Departamento 3 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-3-ambientes-51270827.html'}
2023-03-27 22:52:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-piso-5-amb-recoleta-reciclado-categoria-51377551.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-piso-5-amb-recoleta-reciclado-categoria-51377551.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Avenida Callao 1500',
 'dormitorios': '3',
 'expensas': ' 100.000',
 'm2_cub': '264',
 'm2_total': '270',
 'moneda': 'USD',
 'title': 'Alquiler Piso 5 Amb Recoleta Reciclado Categoria',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-piso-5-amb-recoleta-reciclado-categoria-51377551.html'}
2023-03-27 22:52:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-luminoso-4-ambientes-con-dependencia!-51308112.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-luminoso-4-ambientes-con-dependencia!-51308112.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Marcelo T. de Alvear al 1300',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '131',
 'm2_total': '145',
 'moneda': '$',
 'title': 'Venta - Luminoso 4 Ambientes con Dependencia!',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-luminoso-4-ambientes-con-dependencia!-51308112.html'}
2023-03-27 22:52:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-belgrano-capital-51312066.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-belgrano-capital-51312066.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '11 de Septiembre 1900',
 'dormitorios': '4',
 'expensas': ' 240.000',
 'm2_cub': '400',
 'm2_total': '400',
 'moneda': 'USD',
 'title': 'Departamento Piso en Alquiler en Belgrano, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-belgrano-capital-51312066.html'}
2023-03-27 22:52:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-56.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-3-ambientes-av-cordoba-y-medrano-51372599.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-3-ambientes-av-cordoba-y-medrano-51372599.html>
{'ambientes': '3',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Lavalle 3800',
 'dormitorios': '2',
 'expensas': ' 22.000',
 'm2_cub': '51',
 'm2_total': '57',
 'moneda': '$',
 'title': 'Alquiler Depto 3 Ambientes Av Cordoba y Medrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-3-ambientes-av-cordoba-y-medrano-51372599.html'}
2023-03-27 22:52:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-de-categoria-alquiler-3-dorm.-escritorio-2-51186250.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-de-categoria-alquiler-3-dorm.-escritorio-2-51186250.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arribeños al 1700 - 3 Dormitorios + Escritorio + 2 Cocheras',
 'dormitorios': '4',
 'expensas': ' 120.000',
 'm2_cub': '260',
 'm2_total': '280',
 'moneda': 'USD',
 'title': 'Torre de Categoria - Alquiler - 3 Dorm. Escritorio 2 Cocheras '
          'Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-de-categoria-alquiler-3-dorm.-escritorio-2-51186250.html'}
2023-03-27 22:52:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/zencity-3-dorm-en-suite-seg-24-hs-2-cocheras-51318497.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/zencity-3-dorm-en-suite-seg-24-hs-2-cocheras-51318497.html>
{'ambientes': '5',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Rosario Vera Peñaloza al 500',
 'dormitorios': '3',
 'expensas': ' 55.000',
 'm2_cub': '180',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Zencity 3 Dorm en Suite Seg 24 Hs, 2 Cocheras, Amenities, con o Sin '
          'Muebles',
 'url': 'https://www.zonaprop.com.ar/propiedades/zencity-3-dorm-en-suite-seg-24-hs-2-cocheras-51318497.html'}
2023-03-27 22:52:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-57.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:27 [scrapy.extensions.logstats] INFO: Crawled 817 pages (at 16 pages/min), scraped 760 items (at 14 items/min)
2023-03-27 22:52:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/reservado-51320841.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/reservado-51320841.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Esmeralda 923',
 'dormitorios': '1',
 'expensas': ' 16.000',
 'm2_cub': '62',
 'm2_total': '62',
 'moneda': '$',
 'title': 'Reservado',
 'url': 'https://www.zonaprop.com.ar/propiedades/reservado-51320841.html'}
2023-03-27 22:52:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-dormit-y-depend-balcon-recoleta-51362404.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-dormit-y-depend-balcon-recoleta-51362404.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Rodriguez Peña al 1200',
 'dormitorios': '2',
 'expensas': ' 48.000',
 'm2_cub': '80',
 'm2_total': '85',
 'moneda': '$',
 'title': '2 Dormit y Depend - Balcon - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-dormit-y-depend-balcon-recoleta-51362404.html'}
2023-03-27 22:52:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-en-arribenos-al-1700-51159047.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-en-arribenos-al-1700-51159047.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Alquiler 4 Ambientes en Arribeños al 1700',
 'dormitorios': '3',
 'expensas': 0,
 'm2_total': '270',
 'moneda': 'USD',
 'title': 'Alquiler 4 Ambientes en Arribeños Al 1700',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-en-arribenos-al-1700-51159047.html'}
2023-03-27 22:52:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51270149.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51270149.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Beruti 2800 8',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Departamento en Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51270149.html'}
2023-03-27 22:52:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-3-ambientes-pompeya-51322607.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-3-ambientes-pompeya-51322607.html>
{'ambientes': '3',
 'barrio': ', Pompeya, Capital Federal',
 'direccion': 'Abraham J. Luppi al 900',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '55',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Departamento Alquiler 3 Ambientes - Pompeya',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-3-ambientes-pompeya-51322607.html'}
2023-03-27 22:52:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-mono-ambiente-c-cochera-villa-51236607.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-mono-ambiente-c-cochera-villa-51236607.html>
{'ambientes': '1',
 'barrio': ', Villa Lugano, Capital Federal',
 'direccion': 'Chilavert 6971, Villa Lugano, Capital Federal, Argentina.',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Alquiler Departamento Mono Ambiente C/ Cochera, Villa Lugano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-mono-ambiente-c-cochera-villa-51236607.html'}
2023-03-27 22:52:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-en-oceana-puerto-51379268.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-en-oceana-puerto-51379268.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1400',
 'dormitorios': '2',
 'expensas': ' 140.000',
 'm2_cub': '137',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes con Cochera en Oceana Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-en-oceana-puerto-51379268.html'}
2023-03-27 22:52:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/comodo-dos-ambientes-con-balcon-y-lavadero-51321379.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/comodo-dos-ambientes-con-balcon-y-lavadero-51321379.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'colombres 1356',
 'dormitorios': '1',
 'expensas': ' 11.000',
 'm2_cub': '30',
 'm2_total': '32',
 'moneda': '$',
 'title': 'Comodo Dos Ambientes con Balcon y Lavadero',
 'url': 'https://www.zonaprop.com.ar/propiedades/comodo-dos-ambientes-con-balcon-y-lavadero-51321379.html'}
2023-03-27 22:52:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/sin-comision-impecable-estado-amoblado-piscina-51277990.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/sin-comision-impecable-estado-amoblado-piscina-51277990.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': '(dbj-416) Bonpland al 1440 - SIN Comision Inmobiliaria',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '85',
 'moneda': 'USD',
 'title': 'Sin Comision - Impecable Estado Amoblado - Piscina - Gym - Balcon - '
          '75 m² - Cochera - Muy Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/sin-comision-impecable-estado-amoblado-piscina-51277990.html'}
2023-03-27 22:52:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/juana-manso-1300-puerto-madero-venta-y-alquiler-51266023.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:52:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:52:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/juana-manso-1300-puerto-madero-venta-y-alquiler-51266023.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 1351',
 'dormitorios': '2',
 'expensas': ' 70.000',
 'm2_cub': '87',
 'm2_total': '96',
 'moneda': 'USD',
 'title': 'Juana Manso 1300 - Puerto Madero - Venta y Alquiler - 3 Ambientes - '
          'Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/juana-manso-1300-puerto-madero-venta-y-alquiler-51266023.html'}
2023-03-27 22:53:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51280162.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51280162.html>
{'ambientes': '4',
 'barrio': ', Liniers, Capital Federal',
 'direccion': 'Pieres al 500',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '106',
 'm2_total': '116',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51280162.html'}
2023-03-27 22:53:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-completamente-amoblado-51230816.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-completamente-amoblado-51230816.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Soler al 5600',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '48',
 'moneda': 'USD',
 'title': 'Excelente 2 Ambientes Completamente Amoblado',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-completamente-amoblado-51230816.html'}
2023-03-27 22:53:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-un-ambiente-frente-con-balcon-51186180.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-un-ambiente-frente-con-balcon-51186180.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'LA PAMPA 2600',
 'expensas': ' 10.000',
 'm2_cub': '30',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Venta Ó Alquiler un Ambiente Frente con Balcon Edificio Moderno '
          'Parrilla Laundry',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-un-ambiente-frente-con-balcon-51186180.html'}
2023-03-27 22:53:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/arcos-al-1400-torre-weik-4-ambientes-3-dorm.-51201481.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/arcos-al-1400-torre-weik-4-ambientes-3-dorm.-51201481.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arcos al 1400 -torre Weik - 4 Ambientes -3 Dormitorios en Suite '
              '- Balcón Terraza - 2 Cocheras Fijas - Full Amenities',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '181',
 'm2_total': '229',
 'moneda': 'USD',
 'title': 'Arcos Al 1400 - Torre Weik - 4 Ambientes - 3 Dorm. Suite - 2 '
          'Cocheras Fijas - Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/arcos-al-1400-torre-weik-4-ambientes-3-dorm.-51201481.html'}
2023-03-27 22:53:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-temporario-monoambiente-51303455.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-temporario-monoambiente-51303455.html>
{'ambientes': '1',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Sinclair y Demaría',
 'expensas': ' 25.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Venta o Alquiler Temporario Monoambiente',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-temporario-monoambiente-51303455.html'}
2023-03-27 22:53:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-departamento-villa-urquiza-51328700.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-departamento-villa-urquiza-51328700.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Mendoza 5200',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '37',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Alquiler Temporario Departamento Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-departamento-villa-urquiza-51328700.html'}
2023-03-27 22:53:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-58.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:27 [scrapy.extensions.logstats] INFO: Crawled 834 pages (at 17 pages/min), scraped 776 items (at 16 items/min)
2023-03-27 22:53:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51156320.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51156320.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Las Heras al 3900',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_cub': '96',
 'm2_total': '96',
 'moneda': '$',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51156320.html'}
2023-03-27 22:53:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-temporario-3-ambientes-palermo-soho-51347658.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-temporario-3-ambientes-palermo-soho-51347658.html>
{'ambientes': '3',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Paraguay al 4800',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '84',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento Temporario 3 Ambientes Palermo Soho Piscina Parrilla '
          'Gym Terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-temporario-3-ambientes-palermo-soho-51347658.html'}
2023-03-27 22:53:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-temporario-loft-palermo-51173024.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-temporario-loft-palermo-51173024.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Quartier Dorrego',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Quartier Dorrego - Alquiler Temporario Loft - Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-temporario-loft-palermo-51173024.html'}
2023-03-27 22:53:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recoleta-retiro.-dos-ambientes-impecable-disponible-51323498.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recoleta-retiro.-dos-ambientes-impecable-disponible-51323498.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av Libertador 600',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '39',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Recoleta, Retiro. Dos Ambientes Impecable, Disponible, '
          'Completamente Equipado',
 'url': 'https://www.zonaprop.com.ar/propiedades/recoleta-retiro.-dos-ambientes-impecable-disponible-51323498.html'}
2023-03-27 22:53:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/guise-1988-palermo-alquiler-temporal-51369403.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/guise-1988-palermo-alquiler-temporal-51369403.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Guise 1988',
 'dormitorios': '1',
 'expensas': 0,
 'm2_total': '40',
 'moneda': '$',
 'title': 'Guise 1988 Palermo Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/guise-1988-palermo-alquiler-temporal-51369403.html'}
2023-03-27 22:53:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51246443.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51246443.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Ohiggins 1700',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '75',
 'm2_total': '75',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Belgrano, Capital Federal, Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51246443.html'}
2023-03-27 22:53:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-en-nunez-a-estrenar-con-amenities-51239108.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-en-nunez-a-estrenar-con-amenities-51239108.html>
{'ambientes': '1',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Amenabar 3200 1°',
 'expensas': ' 15.000',
 'm2_cub': '32',
 'm2_total': '36',
 'moneda': '$',
 'title': 'Monoambiente en Nuñez a Estrenar con Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-en-nunez-a-estrenar-con-amenities-51239108.html'}
2023-03-27 22:53:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-san-cristobal-51262744.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-san-cristobal-51262744.html>
{'ambientes': '1',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Santiago del Estero al 1000',
 'expensas': ' 20.000',
 'moneda': '$',
 'title': 'Departamento - San Cristobal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-san-cristobal-51262744.html'}
2023-03-27 22:53:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3ambientes-av-avellaneda-51316603.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:53:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:53:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3ambientes-av-avellaneda-51316603.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Avenida Avellaneda 1800',
 'dormitorios': '2',
 'expensas': 0,
 'm2_total': '60',
 'moneda': '$',
 'title': 'Departamento en Alquiler 3ambientes - Av Avellaneda 1800 - Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3ambientes-av-avellaneda-51316603.html'}
2023-03-27 22:54:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/-8-amb-alquiler-terraza-patio-a-m-av-uso-51259857.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/-8-amb-alquiler-terraza-patio-a-m-av-uso-51259857.html>
{'ambientes': '8',
 'barrio': ', Mataderos, Capital Federal',
 'direccion': 'CUYO 2290',
 'dormitorios': '7',
 'expensas': 0,
 'm2_cub': '150',
 'm2_total': '235',
 'moneda': '$',
 'title': '# 8 Amb # Alquiler # Terraza # Patio # a m Av # Uso Comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/-8-amb-alquiler-terraza-patio-a-m-av-uso-51259857.html'}
2023-03-27 22:54:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquilo-ph-4-amb-c-coch-sobre-av-la-plata-cerca-parque-51361206.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquilo-ph-4-amb-c-coch-sobre-av-la-plata-cerca-parque-51361206.html>
{'ambientes': '3',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Av La Plata 370',
 'dormitorios': '2',
 'expensas': ' 18.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Alquilo PH 4 Amb C/coch Sobre Av La Plata Cerca Parque Rivadavia',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquilo-ph-4-amb-c-coch-sobre-av-la-plata-cerca-parque-51361206.html'}
2023-03-27 22:54:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-dpto-4-amb-con-cochera-baulera-recoleta-51368024.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-dpto-4-amb-con-cochera-baulera-recoleta-51368024.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Uruguay 1200',
 'dormitorios': '3',
 'expensas': ' 88.000',
 'm2_cub': '137',
 'm2_total': '145',
 'moneda': '$',
 'title': 'Alquiler Dpto 4 Amb con Cochera/baulera - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-dpto-4-amb-con-cochera-baulera-recoleta-51368024.html'}
2023-03-27 22:54:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-2-amb-jardines-de-libertador-51371754.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-2-amb-jardines-de-libertador-51371754.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Av. del Libertador al 8500 - Jardines de Libertador',
 'dormitorios': '1',
 'expensas': 0,
 'm2_total': '52',
 'moneda': 'USD',
 'title': 'Alquiler Temporario - 2 Amb Jardines de Libertador - Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-2-amb-jardines-de-libertador-51371754.html'}
2023-03-27 22:54:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-palermo-51173794.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-palermo-51173794.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Salguero 1800',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '45',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes Alquiler Temporal Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-palermo-51173794.html'}
2023-03-27 22:54:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-en-capitalfederal-51296398.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-en-capitalfederal-51296398.html>
{'ambientes': '1',
 'barrio': ', Liniers, Capital Federal',
 'direccion': 'Ángel Roffo 7005',
 'dormitorios': '1',
 'expensas': ' 7.200',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Monoambiente en Alquiler en Capitalfederal',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-en-capitalfederal-51296398.html'}
2023-03-27 22:54:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-palermo-hollywood-uso-comercial-o-profesional-51186488.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-palermo-hollywood-uso-comercial-o-profesional-51186488.html>
{'ambientes': '4',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'AV. Cordoba al 5900',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '106',
 'm2_total': '177',
 'moneda': '$',
 'title': 'PH - Palermo Hollywood - Uso Comercial o Profesional Exclusivamente',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-palermo-hollywood-uso-comercial-o-profesional-51186488.html'}
2023-03-27 22:54:27 [scrapy.extensions.logstats] INFO: Crawled 850 pages (at 16 pages/min), scraped 792 items (at 16 items/min)
2023-03-27 22:54:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-59.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-dpto-3-amb-en-muy-buena-ubicacion-51386214.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-dpto-3-amb-en-muy-buena-ubicacion-51386214.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'San Isidro Labrador 4200',
 'dormitorios': '2',
 'expensas': ' 16.000',
 'm2_cub': '57',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Hermoso Dpto 3 Amb en Muy Buena Ubicación',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-dpto-3-amb-en-muy-buena-ubicacion-51386214.html'}
2023-03-27 22:54:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-3-amb-dos-dorm.-en-suite.-2-cocheras-51218977.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-3-amb-dos-dorm.-en-suite.-2-cocheras-51218977.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Aime Paine y Bvd Azucena Villaflor',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '163',
 'm2_total': '168',
 'moneda': 'USD',
 'title': 'Excelente 3 Amb Dos Dorm. en Suite. 2 Cocheras',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-3-amb-dos-dorm.-en-suite.-2-cocheras-51218977.html'}
2023-03-27 22:54:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/barrio-norte-2amb-internos-51376123.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/barrio-norte-2amb-internos-51376123.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Uriburu al 1000',
 'dormitorios': '1',
 'expensas': ' 6.808',
 'm2_cub': '30',
 'm2_total': '36',
 'moneda': '$',
 'title': 'Barrio Norte 2amb Internos',
 'url': 'https://www.zonaprop.com.ar/propiedades/barrio-norte-2amb-internos-51376123.html'}
2023-03-27 22:54:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-en-constitucion-51386819.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-en-constitucion-51386819.html>
{'ambientes': '1',
 'barrio': ', Constitución, Capital Federal',
 'direccion': 'Luis Saenz Peña al 1000',
 'expensas': 0,
 'm2_cub': '31',
 'm2_total': '39',
 'moneda': '$',
 'title': 'Alquiler Departamento en Constitución',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-en-constitucion-51386819.html'}
2023-03-27 22:54:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-alquiler-departamento-recoleta-51363426.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-alquiler-departamento-recoleta-51363426.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Venta- Alquiler- Departamento- Recoleta',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '116',
 'm2_total': '116',
 'moneda': 'USD',
 'title': 'Venta - Alquiler - Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-alquiler-departamento-recoleta-51363426.html'}
2023-03-27 22:54:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/v.-del-parque-exc.2-amb-amoblado-ideal-estudiantes-51343166.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/v.-del-parque-exc.2-amb-amoblado-ideal-estudiantes-51343166.html>
{'ambientes': '2',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Nogoyá 3268',
 'expensas': ' 8.500',
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': '$',
 'title': 'V. del Parque Exc.2 Amb Amoblado - Ideal Estudiantes',
 'url': 'https://www.zonaprop.com.ar/propiedades/v.-del-parque-exc.2-amb-amoblado-ideal-estudiantes-51343166.html'}
2023-03-27 22:54:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recoleta.-2-amb-de-80-m-sup2-.-muy-luminoso.-ver!-51149226.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recoleta.-2-amb-de-80-m-sup2-.-muy-luminoso.-ver!-51149226.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Guido al 1500',
 'dormitorios': '1',
 'expensas': 0,
 'm2_total': '77',
 'moneda': 'USD',
 'title': 'Recoleta. 2 Amb de 80 m². Muy Luminoso. Ver!',
 'url': 'https://www.zonaprop.com.ar/propiedades/recoleta.-2-amb-de-80-m-sup2-.-muy-luminoso.-ver!-51149226.html'}
2023-03-27 22:54:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-en-san-telmo-alquiler-temporal-51376133.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:54:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:54:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-en-san-telmo-alquiler-temporal-51376133.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Bolivar 623',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '27',
 'm2_total': '27',
 'moneda': 'USD',
 'title': 'Departamento 1 Ambiente en San Telmo Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-en-san-telmo-alquiler-temporal-51376133.html'}
2023-03-27 22:55:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-departamento-2-ambientes-av-rivadavia-5474-51375990.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-departamento-2-ambientes-av-rivadavia-5474-51375990.html>
{'ambientes': '2',
 'barrio': ', Primera Junta, Caballito',
 'direccion': 'Av. Rivadavia ',
 'expensas': ' 15.000',
 'm2_cub': '43',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Hermoso Departamento 2 Ambientes "Av Rivadavia 5474" en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-departamento-2-ambientes-av-rivadavia-5474-51375990.html'}
2023-03-27 22:55:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-barrio-river-3-dormit-doble-suite-coch-51203178.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-barrio-river-3-dormit-doble-suite-coch-51203178.html>
{'ambientes': '5',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Alte .Manuel J. García 1089',
 'expensas': 0,
 'm2_cub': '250',
 'm2_total': '250',
 'moneda': 'USD',
 'title': 'Casa Barrio River, 3 Dormit, Doble Suite, Coch, Quincho, Terraza, '
          'Dep. servicio',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-barrio-river-3-dormit-doble-suite-coch-51203178.html'}
2023-03-27 22:55:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-recoleta-51178394.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-recoleta-51178394.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av Las Heras ',
 'expensas': 0,
 'm2_cub': '83',
 'm2_total': '92',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes Alquiler Temporal Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-recoleta-51178394.html'}
2023-03-27 22:55:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51262431.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51262431.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Anchorena al 1700',
 'dormitorios': '1',
 'expensas': ' 7.500',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51262431.html'}
2023-03-27 22:55:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/unidad-3-ambientes-en-alquiler-51289049.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/unidad-3-ambientes-en-alquiler-51289049.html>
{'ambientes': '3',
 'barrio': ', La Paternal, Capital Federal',
 'direccion': 'juan agustin garcia 1800',
 'dormitorios': '2',
 'expensas': ' 7.000',
 'm2_cub': '63',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Unidad 3 Ambientes en Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/unidad-3-ambientes-en-alquiler-51289049.html'}
2023-03-27 22:55:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-recoleta-arroyo-900-usd-51235287.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-recoleta-arroyo-900-usd-51235287.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Arroyo ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '48',
 'm2_total': '54',
 'moneda': 'USD',
 'title': 'Alquiler - 2 Ambientes - Recoleta - Arroyo 900 - Usd 900 - Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-recoleta-arroyo-900-usd-51235287.html'}
2023-03-27 22:55:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-barrio-norte-capital-51286643.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-barrio-norte-capital-51286643.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'CORDOBA AV. 1500',
 'expensas': ' 9.871',
 'm2_cub': '30',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Departamento 1 Ambiente - Barrio Norte, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-barrio-norte-capital-51286643.html'}
2023-03-27 22:55:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-51314280.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-51314280.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manzo al 1500',
 'dormitorios': '2',
 'expensas': ' 55.000',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento en Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-puerto-madero-51314280.html'}
2023-03-27 22:55:27 [scrapy.extensions.logstats] INFO: Crawled 867 pages (at 17 pages/min), scraped 808 items (at 16 items/min)
2023-03-27 22:55:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-60.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51349946.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51349946.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Juan Francisco Seguí al 4400',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '173',
 'm2_total': '187',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51349946.html'}
2023-03-27 22:55:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-al-frente-51156296.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-al-frente-51156296.html>
{'ambientes': '3',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'Bolivia 4548',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '62',
 'm2_total': '66',
 'moneda': '$',
 'title': 'Departamento de 3 Ambientes Al Frente',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-al-frente-51156296.html'}
2023-03-27 22:55:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-alquiler-en-palermo-51289105.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-alquiler-en-palermo-51289105.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Aráoz 2000',
 'dormitorios': '1',
 'expensas': ' 16.000',
 'm2_cub': '34',
 'm2_total': '34',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes en Alquiler en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-alquiler-en-palermo-51289105.html'}
2023-03-27 22:55:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/reservado-ph-5-amb-planta-baja-contrafrente-51289146.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/reservado-ph-5-amb-planta-baja-contrafrente-51289146.html>
{'ambientes': '5',
 'barrio': ', Villa Real, Capital Federal',
 'direccion': 'Pje colihue ',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '75',
 'm2_total': '110',
 'moneda': '$',
 'title': 'Reservado - PH 5 Amb, Planta Baja Contrafrente',
 'url': 'https://www.zonaprop.com.ar/propiedades/reservado-ph-5-amb-planta-baja-contrafrente-51289146.html'}
2023-03-27 22:55:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquilar-2-ambientes-loft-51286270.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquilar-2-ambientes-loft-51286270.html>
{'ambientes': '2',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Moreno al 500',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '64',
 'moneda': '$',
 'title': 'Alquilar 2 Ambientes - Loft',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquilar-2-ambientes-loft-51286270.html'}
2023-03-27 22:55:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-4-ambientes-palermo-51179104.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-4-ambientes-palermo-51179104.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av Libertador 4700',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '110',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Departamento Alquiler Temporal 4 Ambientes Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-4-ambientes-palermo-51179104.html'}
2023-03-27 22:55:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-cocina-independiente-bano-51252713.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:55:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:55:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-cocina-independiente-bano-51252713.html>
{'ambientes': '1',
 'barrio': ', Cid Campeador, Caballito',
 'direccion': 'ÁNGEL GALLARDO ',
 'dormitorios': '2',
 'expensas': ' 11.000',
 'm2_cub': '31',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Departamento 1 Ambiente, Cocina Independiente, Baño Completo en '
          'Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-cocina-independiente-bano-51252713.html'}
2023-03-27 22:56:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dpto-en-alquiler-3-dorm.-recoleta-51353105.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dpto-en-alquiler-3-dorm.-recoleta-51353105.html>
{'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Vicente López 1750',
 'dormitorios': '3',
 'expensas': ' 30.000',
 'm2_cub': '110',
 'm2_total': '110',
 'moneda': '$',
 'title': 'Dpto en Alquiler 3 Dorm. Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/dpto-en-alquiler-3-dorm.-recoleta-51353105.html'}
2023-03-27 22:56:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-alquiler-flores-balcon-apto-prof.-51380774.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-alquiler-flores-balcon-apto-prof.-51380774.html>
{'ambientes': '1',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Granaderos 0',
 'expensas': ' 11.400',
 'm2_cub': '37',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Monoambiente Alquiler Flores Balcon Apto Prof.',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-alquiler-flores-balcon-apto-prof.-51380774.html'}
2023-03-27 22:56:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamen-2-amb-pb-patio-caballito-51387194.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamen-2-amb-pb-patio-caballito-51387194.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Hualfin 800',
 'dormitorios': '1',
 'expensas': ' 11.000',
 'm2_cub': '44',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Alquiler Departamen 2 Amb Pb Patio Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamen-2-amb-pb-patio-caballito-51387194.html'}
2023-03-27 22:56:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-un-dormitorio-caballito-51256676.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-un-dormitorio-caballito-51256676.html>
{'ambientes': '2',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Avellaneda al 1700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '52',
 'moneda': 'USD',
 'title': 'Alquiler Amoblado un Dormitorio Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-un-dormitorio-caballito-51256676.html'}
2023-03-27 22:56:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/vivienda-o-apto-profesional-se-alquila-por-3-anos-51299031.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/vivienda-o-apto-profesional-se-alquila-por-3-anos-51299031.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'vicente lopez 2200',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '85',
 'moneda': '$',
 'title': 'Vivienda o Apto Profesional Se Alquila por 3 Años',
 'url': 'https://www.zonaprop.com.ar/propiedades/vivienda-o-apto-profesional-se-alquila-por-3-anos-51299031.html'}
2023-03-27 22:56:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/u$s-2000-3-amb-cochera-palermo-humboldt-2000-51313336.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/u$s-2000-3-amb-cochera-palermo-humboldt-2000-51313336.html>
{'ambientes': '3',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Humboldt al 2000',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '79',
 'm2_total': '79',
 'moneda': 'USD',
 'title': 'U$s 2000 - 3 Amb - Cochera - Palermo - Humboldt 2000 (Gig)',
 'url': 'https://www.zonaprop.com.ar/propiedades/u$s-2000-3-amb-cochera-palermo-humboldt-2000-51313336.html'}
2023-03-27 22:56:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3amb-67-m-sup2--nuevo!-a-m-av-garay!-bcon-fte!-lav-51241290.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3amb-67-m-sup2--nuevo!-a-m-av-garay!-bcon-fte!-lav-51241290.html>
{'ambientes': '3',
 'barrio': ', Parque Patricios, Capital Federal',
 'direccion': 'Sanchez de Loria al 1700',
 'dormitorios': '2',
 'expensas': ' 19.230',
 'm2_cub': '66',
 'm2_total': '66',
 'moneda': '$',
 'title': '3amb · 67 m² · Nuevo! a m Av Garay! Bcón Fte! Lav Ind! Cam! Vig '
          '24hs! Sum! M/lum!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3amb-67-m-sup2--nuevo!-a-m-av-garay!-bcon-fte!-lav-51241290.html'}
2023-03-27 22:56:27 [scrapy.extensions.logstats] INFO: Crawled 882 pages (at 15 pages/min), scraped 822 items (at 14 items/min)
2023-03-27 22:56:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-constitucion-51272131.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-constitucion-51272131.html>
{'ambientes': '1',
 'barrio': ', Constitución, Capital Federal',
 'direccion': 'Estados Unidos al 1500',
 'expensas': 0,
 'm2_cub': '33',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento en Constitución',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-constitucion-51272131.html'}
2023-03-27 22:56:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-reciclado-en-el-obelisco.-apto-51362775.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-reciclado-en-el-obelisco.-apto-51362775.html>
{'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Corrientes 1000',
 'expensas': ' 10.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Monoambiente Reciclado en El Obelisco. Apto Profesional o Vivienda',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-reciclado-en-el-obelisco.-apto-51362775.html'}
2023-03-27 22:56:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-61.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-santa-fe-al-4400-contrafrente-90-m-sup2--3-dorm-51262682.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-santa-fe-al-4400-contrafrente-90-m-sup2--3-dorm-51262682.html>
{'ambientes': '4',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Av Santa Fe al 4400',
 'dormitorios': '3',
 'expensas': ' 31.640',
 'm2_cub': '86',
 'm2_total': '90',
 'moneda': '$',
 'title': 'Av Santa Fe Al 4400 Contrafrente 90 m² 3 Dorm',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-santa-fe-al-4400-contrafrente-90-m-sup2--3-dorm-51262682.html'}
2023-03-27 22:56:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-alquiler-2-ambientes-san-telmo-51141524.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-alquiler-2-ambientes-san-telmo-51141524.html>
{'ambientes': '2',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Balcarce al 1000',
 'dormitorios': '1',
 'expensas': ' 8.000',
 'm2_cub': '63',
 'm2_total': '63',
 'moneda': '$',
 'title': 'PH Alquiler 2 Ambientes - San Telmo',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-alquiler-2-ambientes-san-telmo-51141524.html'}
2023-03-27 22:56:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-ambientes-con-4to-dorm.-o-dep.-con-cochera-belgrano-51239927.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-ambientes-con-4to-dorm.-o-dep.-con-cochera-belgrano-51239927.html>
{'ambientes': '4',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Mcal. A. J. De Sucre 3000 8°',
 'dormitorios': '3',
 'expensas': ' 54.000',
 'm2_cub': '150',
 'm2_total': '165',
 'moneda': 'USD',
 'title': '4 Ambientes con 4to Dorm. o Dep. con Cochera Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-ambientes-con-4to-dorm.-o-dep.-con-cochera-belgrano-51239927.html'}
2023-03-27 22:56:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282674.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282674.html>
{'ambientes': '3',
 'barrio': ', Congreso, Capital Federal',
 'direccion': 'General Urquiza al 1000',
 'dormitorios': '2',
 'expensas': ' 23.700',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': '3amb · 60 m² · Nvo! S/ambl! Bcón Fte! 2 Aa! Pile! Sum! Parr! Gym! '
          'Full Amenities!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282674.html'}
2023-03-27 22:56:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-puerto-madero-51352679.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:56:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:56:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-puerto-madero-51352679.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor 400',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '168',
 'm2_total': '168',
 'moneda': 'USD',
 'title': 'Departamento Piso en Alquiler en Puerto Madero, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-puerto-madero-51352679.html'}
2023-03-27 22:57:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-belgrano-51179431.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-belgrano-51179431.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av Cabildo 2500',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '54',
 'm2_total': '54',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes Alquiler Temporal en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-belgrano-51179431.html'}
2023-03-27 22:57:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-parque-chacabuco-51162706.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-parque-chacabuco-51162706.html>
{'ambientes': '2',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Vernet al 300',
 'dormitorios': '1',
 'expensas': ' 4.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Departamento - Parque Chacabuco',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-parque-chacabuco-51162706.html'}
2023-03-27 22:57:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-muy-amplio-con-balcon-y-51377920.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-muy-amplio-con-balcon-y-51377920.html>
{'ambientes': '1',
 'barrio': ', Constitución, Capital Federal',
 'direccion': 'Lima al 1100',
 'expensas': ' 22.000',
 'm2_cub': '38',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Alquiler Monoambiente Muy Amplio con Balcon y Amenities, Lima Al '
          '1100',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-muy-amplio-con-balcon-y-51377920.html'}
2023-03-27 22:57:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-amb-lat-40-m-sup2--excelente-ubicacion-51347676.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-amb-lat-40-m-sup2--excelente-ubicacion-51347676.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Goyena al 1500',
 'dormitorios': '1',
 'expensas': ' 15.600',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': '2 Amb Lat - 40 m² Excelente Ubicacion',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-amb-lat-40-m-sup2--excelente-ubicacion-51347676.html'}
2023-03-27 22:57:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-1-ambiente-ubicado-en-pena-y-51349479.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-1-ambiente-ubicado-en-pena-y-51349479.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'PEÑA 3080',
 'expensas': ' 13.000',
 'm2_cub': '29',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Departamento de 1 Ambiente Ubicado en Peña y Bustamante 30 m',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-1-ambiente-ubicado-en-pena-y-51349479.html'}
2023-03-27 22:57:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-amb.-luminoso-y-refaccionado-a-nuevo-c-balcon-51261726.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-amb.-luminoso-y-refaccionado-a-nuevo-c-balcon-51261726.html>
{'ambientes': '2',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Venezuela al 2700',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': '$',
 'title': '2 Amb. Luminoso y Refaccionado a Nuevo C/ Balcón - Aires Acondic. - '
          'Espacio Para Lavarropas',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-amb.-luminoso-y-refaccionado-a-nuevo-c-balcon-51261726.html'}
2023-03-27 22:57:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/mega-2-ambientes-con-terraza-y-cochera!-pegado-a-la-51172522.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/mega-2-ambientes-con-terraza-y-cochera!-pegado-a-la-51172522.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Junin 875',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Mega 2 Ambientes con Terraza y Cochera! Pegado a La Uba!',
 'url': 'https://www.zonaprop.com.ar/propiedades/mega-2-ambientes-con-terraza-y-cochera!-pegado-a-la-51172522.html'}
2023-03-27 22:57:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-c-balcon.-estrenar.-boedo-51387795.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-c-balcon.-estrenar.-boedo-51387795.html>
{'ambientes': '1',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Avenida Independencia 3900',
 'expensas': ' 3.500',
 'm2_cub': '36',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Alquiler Monoambiente C/balcón. Estrenar. Boedo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-c-balcon.-estrenar.-boedo-51387795.html'}
2023-03-27 22:57:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51354426.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51354426.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Av. Pedro Goyena al 500',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '87',
 'm2_total': '95',
 'moneda': '$',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51354426.html'}
2023-03-27 22:57:27 [scrapy.extensions.logstats] INFO: Crawled 899 pages (at 17 pages/min), scraped 838 items (at 16 items/min)
2023-03-27 22:57:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51230405.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51230405.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Jose Antonio Cabrera al 5600',
 'dormitorios': '1',
 'expensas': ' 35.000',
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51230405.html'}
2023-03-27 22:57:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alvear-icon.-exclusiva-residencia.-vista-y-51369866.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alvear-icon.-exclusiva-residencia.-vista-y-51369866.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Aime Paine al 1100',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '74',
 'm2_total': '82',
 'moneda': 'USD',
 'title': 'Alvear Icon. Exclusiva Residencia. Vista y Equipamiento '
          'Insuperable. Ideal Altos Ejecutivos y Embaja',
 'url': 'https://www.zonaprop.com.ar/propiedades/alvear-icon.-exclusiva-residencia.-vista-y-51369866.html'}
2023-03-27 22:57:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-62.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ruggieri-al-2900-piso-11-torre-las-plazas.-navona-51337612.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ruggieri-al-2900-piso-11-torre-las-plazas.-navona-51337612.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Ruggieri al 2900, Piso 11. Temporario Torre Las Plazas. Navona',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '72',
 'm2_total': '72',
 'moneda': 'USD',
 'title': 'Ruggieri Al 2900, Piso 11, Torre Las Plazas. Navona, con Muebles',
 'url': 'https://www.zonaprop.com.ar/propiedades/ruggieri-al-2900-piso-11-torre-las-plazas.-navona-51337612.html'}
2023-03-27 22:57:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-a-estrenar-y-en-alquiler-a-pasos-avda-cramer-51149047.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-a-estrenar-y-en-alquiler-a-pasos-avda-cramer-51149047.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'monroe 2800. Entre Cramer',
 'expensas': ' 12.000',
 'm2_cub': '34',
 'm2_total': '37',
 'moneda': '$',
 'title': 'Venta a Estrenar y en Alquiler a Pasos Avda Cramer Apto Prof',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-a-estrenar-y-en-alquiler-a-pasos-avda-cramer-51149047.html'}
2023-03-27 22:57:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-2amb-c-bano!-terraza-parrilla-sum-51262345.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-2amb-c-bano!-terraza-parrilla-sum-51262345.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'av mendoza 5884',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '75',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Espectacular 2amb C/ Baño! Terraza + Parrilla + Sum',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-2amb-c-bano!-terraza-parrilla-sum-51262345.html'}
2023-03-27 22:57:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-loft-temporario-palermo-51372134.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-loft-temporario-palermo-51372134.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Quartier Dorrego',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Quartier Dorrego - Alquiler Loft Temporario - Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-loft-temporario-palermo-51372134.html'}
2023-03-27 22:57:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-dos-amb.-muy-luminoso.-excelente-51339555.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-dos-amb.-muy-luminoso.-excelente-51339555.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'La Pampa 2715',
 'dormitorios': '1',
 'expensas': ' 9.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento de Dos Amb. Muy Luminoso. Excelente Ubicación!',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-dos-amb.-muy-luminoso.-excelente-51339555.html'}
2023-03-27 22:57:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/a-estrenar-divino-dpto-2-amb.-c-cochera-seg-24hs-51352733.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:57:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:57:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/a-estrenar-divino-dpto-2-amb.-c-cochera-seg-24hs-51352733.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Niceto Vega 5700',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '45',
 'm2_total': '57',
 'moneda': 'USD',
 'title': 'A Estrenar, Divino Dpto 2 Amb. C/cochera Seg 24hs, Divino Dpto Full '
          'Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/a-estrenar-divino-dpto-2-amb.-c-cochera-seg-24hs-51352733.html'}
2023-03-27 22:58:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-3-ambientes-con-balcon-cochera-y-baulera-51304998.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-3-ambientes-con-balcon-cochera-y-baulera-51304998.html>
{'ambientes': '3',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'San Jose de Calasanz al 800',
 'dormitorios': '2',
 'expensas': ' 21.700',
 'm2_cub': '75',
 'm2_total': '87',
 'moneda': '$',
 'title': 'Semipiso 3 Ambientes con Balcón - Cochera y Baulera',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-3-ambientes-con-balcon-cochera-y-baulera-51304998.html'}
2023-03-27 22:58:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-190-m-sup2--4-51367632.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-190-m-sup2--4-51367632.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Parera al 100',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '195',
 'm2_total': '195',
 'moneda': 'USD',
 'title': 'Alquiler - Departamento - Recoleta - 190 m² - 4 Dorm. - 1 Cochera - '
          'Calle Parera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-190-m-sup2--4-51367632.html'}
2023-03-27 22:58:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/flores-n-2-amb-alquiler-al-contrafrente!-cochera-51297173.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/flores-n-2-amb-alquiler-al-contrafrente!-cochera-51297173.html>
{'ambientes': '2',
 'barrio': ', Flores Norte, Flores',
 'direccion': 'Gavilan ',
 'dormitorios': '1',
 'expensas': ' 12.900',
 'm2_cub': '50',
 'm2_total': '51',
 'moneda': '$',
 'title': 'Flores N | 2 Amb | Alquiler | Al Contrafrente! Cochera Opcional!',
 'url': 'https://www.zonaprop.com.ar/propiedades/flores-n-2-amb-alquiler-al-contrafrente!-cochera-51297173.html'}
2023-03-27 22:58:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-4-ambientes-con-dependencia-51225828.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-4-ambientes-con-dependencia-51225828.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Luis Maria Campos al 1500',
 'dormitorios': '3',
 'expensas': ' 54.000',
 'm2_cub': '105',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler 4 Ambientes con Dependencia',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-4-ambientes-con-dependencia-51225828.html'}
2023-03-27 22:58:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-la-paternal-capital-51327209.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-la-paternal-capital-51327209.html>
{'ambientes': '3',
 'barrio': ', La Paternal, Capital Federal',
 'direccion': 'SAN BLAS 2300',
 'dormitorios': '2',
 'expensas': ' 17.000',
 'm2_cub': '48',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes - La Paternal, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-la-paternal-capital-51327209.html'}
2023-03-27 22:58:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/se-alquila-o-vende-hermoso-3-ambientes-a-estrenar-de-51274728.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/se-alquila-o-vende-hermoso-3-ambientes-a-estrenar-de-51274728.html>
{'ambientes': '3',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Scalabrini Ortiz al 1492',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Se Alquila o Vende Hermoso 3 Ambientes a Estrenar de 90 m en '
          'Palermo! Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/se-alquila-o-vende-hermoso-3-ambientes-a-estrenar-de-51274728.html'}
2023-03-27 22:58:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquilo-hermoso-departamento-de-2-ambientes-en-51289112.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquilo-hermoso-departamento-de-2-ambientes-en-51289112.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'ROSARIO 500',
 'dormitorios': '1',
 'expensas': ' 14.500',
 'm2_cub': '33',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Alquilo Hermoso Departamento de 2 Ambientes en Caballito, Muy '
          'Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquilo-hermoso-departamento-de-2-ambientes-en-51289112.html'}
2023-03-27 22:58:27 [scrapy.extensions.logstats] INFO: Crawled 915 pages (at 16 pages/min), scraped 853 items (at 15 items/min)
2023-03-27 22:58:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-de-7-ambientes-c-patio-terraza-y-entrada-indep.-51338344.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-de-7-ambientes-c-patio-terraza-y-entrada-indep.-51338344.html>
{'ambientes': '7',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Combate de los Pozos 1100. Entre Av san juan y Humberto 1°',
 'dormitorios': '6',
 'expensas': 0,
 'm2_cub': '196',
 'm2_total': '400',
 'moneda': '$',
 'title': 'PH de 7 Ambientes C/patio, Terraza y Entrada Indep.',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-de-7-ambientes-c-patio-terraza-y-entrada-indep.-51338344.html'}
2023-03-27 22:58:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/huergo-200-las-canitas-4-ambientes.-51315270.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/huergo-200-las-canitas-4-ambientes.-51315270.html>
{'ambientes': '4',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Huergo ',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Huergo 200, Las Cañitas - 4 Ambientes.',
 'url': 'https://www.zonaprop.com.ar/propiedades/huergo-200-las-canitas-4-ambientes.-51315270.html'}
2023-03-27 22:58:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lindisimo-dpto-en-palermo-3-ambientes-amoblado-con-51305918.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lindisimo-dpto-en-palermo-3-ambientes-amoblado-con-51305918.html>
{'barrio': '',
 'direccion': '',
 'expensas': 0,
 'moneda': 's',
 'title': '',
 'url': 'https://www.zonaprop.com.ar/propiedades/lindisimo-dpto-en-palermo-3-ambientes-amoblado-con-51305918.html'}
2023-03-27 22:58:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-de-3-dorm.-con-dep.-y-cochera.-expensas-51220140.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-de-3-dorm.-con-dep.-y-cochera.-expensas-51220140.html>
{'ambientes': '4',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Terrada 340',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '110',
 'm2_total': '110',
 'moneda': '$',
 'title': 'Semipiso de 3 Dorm. con Dep. y Cochera. expensas Incluidas',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-de-3-dorm.-con-dep.-y-cochera.-expensas-51220140.html'}
2023-03-27 22:58:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-63.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-en-las-51161994.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-en-las-51161994.html>
{'ambientes': '3',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Ortega y Gasset 1000',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '95',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes Alquiler Temporal en Las Cañitas',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-en-las-51161994.html'}
2023-03-27 22:58:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-contrafrente-con-balcon-51353398.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-contrafrente-con-balcon-51353398.html>
{'ambientes': '2',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'GABRIELA MISTRAL 3100',
 'dormitorios': '1',
 'expensas': ' 13.000',
 'm2_cub': '44',
 'm2_total': '48',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes Contrafrente con Balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-contrafrente-con-balcon-51353398.html'}
2023-03-27 22:58:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/muy-luminoso-c-balcon-y-cochera-amenities-v.-51232106.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/muy-luminoso-c-balcon-y-cochera-amenities-v.-51232106.html>
{'ambientes': '1',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Lavalleja 800',
 'expensas': ' 23.000',
 'm2_cub': '37',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Muy Luminoso, C/ Balcón y Cochera - Amenities / V. Crespo',
 'url': 'https://www.zonaprop.com.ar/propiedades/muy-luminoso-c-balcon-y-cochera-amenities-v.-51232106.html'}
2023-03-27 22:58:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-apto-profesional-con-cochera-en-nunez-51200901.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-apto-profesional-con-cochera-en-nunez-51200901.html>
{'ambientes': '1',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Juana Azurduy al 1500',
 'expensas': ' 16.000',
 'm2_cub': '33',
 'm2_total': '33',
 'moneda': 'USD',
 'title': 'Departamento Apto Profesional con Cochera en Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-apto-profesional-con-cochera-en-nunez-51200901.html'}
2023-03-27 22:58:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/araoz-y-santa-fe-tres-ambientes-al-frente-impecable-51261469.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:58:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:58:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/araoz-y-santa-fe-tres-ambientes-al-frente-impecable-51261469.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'ARAOZ 2490',
 'dormitorios': '2',
 'expensas': ' 18.000',
 'm2_cub': '75',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Araoz y Santa Fe - Tres Ambientes Al Frente Impecable - Piso 10',
 'url': 'https://www.zonaprop.com.ar/propiedades/araoz-y-santa-fe-tres-ambientes-al-frente-impecable-51261469.html'}
2023-03-27 22:59:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-10-ambientes-uso-comercial-inigualable!-51364138.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-10-ambientes-uso-comercial-inigualable!-51364138.html>
{'ambientes': '10',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Caracas 600',
 'dormitorios': '7',
 'expensas': 0,
 'm2_cub': '428',
 'm2_total': '748',
 'moneda': '$',
 'title': 'Casa 10 Ambientes Uso Comercial Inigualable!',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-10-ambientes-uso-comercial-inigualable!-51364138.html'}
2023-03-27 22:59:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-almagro-51259751.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-almagro-51259751.html>
{'ambientes': '3',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Lambare al 1000',
 'dormitorios': '2',
 'expensas': ' 12.000',
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Departamento - Almagro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-almagro-51259751.html'}
2023-03-27 22:59:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monserrat-2-ambientes-contrato-de-1-ano-51299243.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monserrat-2-ambientes-contrato-de-1-ano-51299243.html>
{'ambientes': '2',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'Alsina 1600',
 'dormitorios': '1',
 'expensas': ' 15.500',
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Alquiler - Monserrat - 2 Ambientes - Contrato de 1 Año',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monserrat-2-ambientes-contrato-de-1-ano-51299243.html'}
2023-03-27 22:59:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-monoambiente-para-vivienda-o-oficina-comercial-51297873.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-monoambiente-para-vivienda-o-oficina-comercial-51297873.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey Arredondo 2400 7°',
 'expensas': ' 17.500',
 'm2_cub': '33',
 'm2_total': '36',
 'moneda': '$',
 'title': 'Hermoso Monoambiente Para Vivienda o Oficina Comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-monoambiente-para-vivienda-o-oficina-comercial-51297873.html'}
2023-03-27 22:59:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/estrene-departamento-con-amenities-1-suite-vest-y-51250090.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/estrene-departamento-con-amenities-1-suite-vest-y-51250090.html>
{'ambientes': '2',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Av Santa Fe al 5300 esq Dorrego',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Estrene Departamento con Amenities - 1 Suite Vest y Toilette Seg '
          '24hs Opcion',
 'url': 'https://www.zonaprop.com.ar/propiedades/estrene-departamento-con-amenities-1-suite-vest-y-51250090.html'}
2023-03-27 22:59:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-dpto-2-amb-con-piscina-sum-plaza-ninos!-51342049.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-dpto-2-amb-con-piscina-sum-plaza-ninos!-51342049.html>
{'ambientes': '2',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'dorrego 898',
 'dormitorios': '1',
 'expensas': ' 26.000',
 'm2_cub': '48',
 'm2_total': '52',
 'moneda': '$',
 'title': 'Excelente Dpto 2 Amb con Piscina Sum Plaza Niños!',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-dpto-2-amb-con-piscina-sum-plaza-ninos!-51342049.html'}
2023-03-27 22:59:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51217557.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51217557.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Callao al 1500',
 'dormitorios': '3',
 'expensas': ' 55.000',
 'm2_cub': '144',
 'm2_total': '155',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51217557.html'}
2023-03-27 22:59:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-balcon-51289267.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-balcon-51289267.html>
{'ambientes': '4',
 'barrio': ', Flores Norte, Flores',
 'direccion': 'Boyacá 1379',
 'dormitorios': '3',
 'expensas': ' 35.000',
 'm2_cub': '140',
 'm2_total': '140',
 'moneda': '$',
 'title': 'Alquiler Departamento 4 Ambientes - Balcon - Dependencia en Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-balcon-51289267.html'}
2023-03-27 22:59:27 [scrapy.extensions.logstats] INFO: Crawled 933 pages (at 18 pages/min), scraped 870 items (at 17 items/min)
2023-03-27 22:59:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-barrio-norte-51144645.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-barrio-norte-51144645.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Gallo ',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '105',
 'm2_total': '105',
 'moneda': '$',
 'title': 'Alquiler 2 Ambientes Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-barrio-norte-51144645.html'}
2023-03-27 22:59:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-balcon-luminoso-cochera-moderno-bano-y-51376462.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-balcon-luminoso-cochera-moderno-bano-y-51376462.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'MENDEZ DE ANDES 477',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_cub': '80',
 'moneda': '$',
 'title': '3 Ambientes Balcon Luminoso Cochera Moderno Baño y Toilette Mendez '
          'de Andes 447',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-balcon-luminoso-cochera-moderno-bano-y-51376462.html'}
2023-03-27 22:59:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-almagro-51132715.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-almagro-51132715.html>
{'ambientes': '2',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Sarmiento al 3300',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '39',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Departamento - Almagro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-almagro-51132715.html'}
2023-03-27 22:59:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-64.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51265905.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51265905.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Av. Libertador 2600',
 'dormitorios': '3',
 'expensas': 0,
 'm2_total': '198',
 'moneda': 'USD',
 'title': 'Departamento en Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51265905.html'}
2023-03-27 22:59:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-51245140.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-51245140.html>
{'ambientes': '3',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Ituzaingo 900',
 'dormitorios': '2',
 'expensas': ' 26.000',
 'm2_cub': '53',
 'm2_total': '53',
 'moneda': '$',
 'title': 'Departamento en',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-51245140.html'}
2023-03-27 22:59:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-cuenca-al-2000-51382045.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-cuenca-al-2000-51382045.html>
{'ambientes': '3',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'CUENCA 2000. Entre Alvarez jonte y Gonzalez, elpidio',
 'dormitorios': '2',
 'expensas': ' 17.500',
 'm2_cub': '39',
 'm2_total': '41',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes. | Cuenca Al 2000',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-cuenca-al-2000-51382045.html'}
2023-03-27 22:59:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-ph-51387988.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 22:59:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 22:59:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-ph-51387988.html>
{'ambientes': '2',
 'barrio': ', Monte Castro, Capital Federal',
 'direccion': 'Rio Colorado 4400',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '66',
 'moneda': '$',
 'title': 'Hermoso PH',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-ph-51387988.html'}
2023-03-27 23:00:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-patio-en-alquiler-villa-51355317.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-patio-en-alquiler-villa-51355317.html>
{'ambientes': '2',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'Echenagucia 100',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes con Patio en Alquiler - Villa Luro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-patio-en-alquiler-villa-51355317.html'}
2023-03-27 23:00:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/d.-alvarez-649-1-piso-x-escalera-frente-2-dorm.-51312112.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/d.-alvarez-649-1-piso-x-escalera-frente-2-dorm.-51312112.html>
{'ambientes': '3',
 'barrio': ', Caballito Norte, Caballito',
 'direccion': 'Donato alvarez 600',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '75',
 'm2_total': '116',
 'moneda': '$',
 'title': 'D. Álvarez 649 1º Piso X Escalera Frente 2 Dorm. Terraza Propia',
 'url': 'https://www.zonaprop.com.ar/propiedades/d.-alvarez-649-1-piso-x-escalera-frente-2-dorm.-51312112.html'}
2023-03-27 23:00:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-flores-51372710.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-flores-51372710.html>
{'ambientes': '2',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Av. Avellaneda al 2800',
 'dormitorios': '1',
 'expensas': ' 11.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Departamento en Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-flores-51372710.html'}
2023-03-27 23:00:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-sobre-lote-propio-con-jardin-51329501.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-sobre-lote-propio-con-jardin-51329501.html>
{'ambientes': '5',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Arevalo 2900',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '150',
 'm2_total': '300',
 'moneda': '$',
 'title': 'Casa Sobre Lote Propio con Jardín',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-sobre-lote-propio-con-jardin-51329501.html'}
2023-03-27 23:00:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/pleno-palermo-torre-con-amenities-3-dorm.-51327554.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/pleno-palermo-torre-con-amenities-3-dorm.-51327554.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'DORREGO, AVDA. 2400. Entre Guatemala y Paraguay',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '90',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Pleno Palermo Torre con Amenities 3 Dorm.',
 'url': 'https://www.zonaprop.com.ar/propiedades/pleno-palermo-torre-con-amenities-3-dorm.-51327554.html'}
2023-03-27 23:00:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-ideal-alquiler-comercial-51159638.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-ideal-alquiler-comercial-51159638.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'JORGE NEWBERY 1888',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '120',
 'm2_total': '142',
 'moneda': '$',
 'title': 'Casa Ideal Alquiler Comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-ideal-alquiler-comercial-51159638.html'}
2023-03-27 23:00:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-comodo-y-luminoso-en-excelente-ubicacion-51274710.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-comodo-y-luminoso-en-excelente-ubicacion-51274710.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Santa Fe 2600',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '98',
 'm2_total': '98',
 'moneda': '$',
 'title': '3 Ambientes Cómodo y Luminoso en Excelente Ubicación',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-comodo-y-luminoso-en-excelente-ubicacion-51274710.html'}
2023-03-27 23:00:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-amb.-alquiler-temporario-av-monroe-y-cramer-51386191.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-amb.-alquiler-temporario-av-monroe-y-cramer-51386191.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'MONROE Y AV. CRAMER',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': 'USD',
 'title': '2 Amb. Alquiler Temporario Av Monroe y Cramer',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-amb.-alquiler-temporario-av-monroe-y-cramer-51386191.html'}
2023-03-27 23:00:27 [scrapy.extensions.logstats] INFO: Crawled 949 pages (at 16 pages/min), scraped 885 items (at 15 items/min)
2023-03-27 23:00:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-apto-profesional-en-palermo-51308583.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-apto-profesional-en-palermo-51308583.html>
{'ambientes': '2',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Virasoro al 2300',
 'dormitorios': '1',
 'expensas': ' 18.200',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Departamento Apto Profesional en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-apto-profesional-en-palermo-51308583.html'}
2023-03-27 23:00:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casas-p.-horiz.-villa-general-mitre-capital-51369255.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casas-p.-horiz.-villa-general-mitre-capital-51369255.html>
{'ambientes': '3',
 'barrio': ', Villa General Mitre, Capital Federal',
 'direccion': 'TERRERO 1200',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '77',
 'm2_total': '95',
 'moneda': '$',
 'title': 'Casas - P. Horiz. - Villa General Mitre, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/casas-p.-horiz.-villa-general-mitre-capital-51369255.html'}
2023-03-27 23:00:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-alquiler-de-4-ambientes-en-51255148.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-alquiler-de-4-ambientes-en-51255148.html>
{'ambientes': '4',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Del Barco Centenera al 1000',
 'dormitorios': '3',
 'expensas': ' 23.000',
 'm2_cub': '52',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Hermoso Departamento en Alquiler de 4 Ambientes en Parque Chacabuco',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-alquiler-de-4-ambientes-en-51255148.html'}
2023-03-27 23:00:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-lateral-luminoso-balcon-frances-apto-51353570.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-lateral-luminoso-balcon-frances-apto-51353570.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'HIDALGO 1000',
 'dormitorios': '1',
 'expensas': ' 5.000',
 'm2_cub': '40',
 'moneda': '$',
 'title': '2 Ambientes Lateral Luminoso Balcon Frances Apto Profesional '
          'Hidalgo 1044',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-lateral-luminoso-balcon-frances-apto-51353570.html'}
2023-03-27 23:00:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-65.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-santa-fe-5000-con-o-sin-muebles-reciclado-a-51365194.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-santa-fe-5000-con-o-sin-muebles-reciclado-a-51365194.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av. Santa Fe ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Av Santa Fe 5000 - con o Sin Muebles - Reciclado a Nuevo - Palermo '
          '- Caba',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-santa-fe-5000-con-o-sin-muebles-reciclado-a-51365194.html'}
2023-03-27 23:00:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-piso-c-muebles:-3-dorm-escritorio-dep-51381563.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-piso-c-muebles:-3-dorm-escritorio-dep-51381563.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '11 de Septiembre al 1500',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '183',
 'm2_total': '197',
 'moneda': 'USD',
 'title': 'Espectacular Piso C/muebles: 3 Dorm, Escritorio, Dep, Cochera - '
          'Paquete',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-piso-c-muebles:-3-dorm-escritorio-dep-51381563.html'}
2023-03-27 23:00:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-parque-patricios-51305462.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:00:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:00:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-parque-patricios-51305462.html>
{'ambientes': '3',
 'barrio': ', Parque Patricios, Capital Federal',
 'direccion': 'Rondeau al 3000',
 'expensas': ' 8.000',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Departamento - Parque Patricios',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-parque-patricios-51305462.html'}
2023-03-27 23:01:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/bajas-expensas-departamento-5-ambientes-muy-luminoso-51260622.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/bajas-expensas-departamento-5-ambientes-muy-luminoso-51260622.html>
{'ambientes': '5',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Aranguren al 1000',
 'dormitorios': '4',
 'expensas': ' 25.000',
 'm2_cub': '85',
 'm2_total': '91',
 'moneda': '$',
 'title': 'Bajas Expensas - Departamento 5 Ambientes Muy Luminoso - Lavadero - '
          'Cochera Fija',
 'url': 'https://www.zonaprop.com.ar/propiedades/bajas-expensas-departamento-5-ambientes-muy-luminoso-51260622.html'}
2023-03-27 23:01:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51256463.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51256463.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Billinghurst al 1000. Hermoso 2 Amb. Equipado con Seguridad. '
              'Alquiler Temporario.',
 'dormitorios': '1',
 'expensas': 0,
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51256463.html'}
2023-03-27 23:01:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/1-amb-nuevo-divisible-en-2-amb-a-estrenar-con-51241034.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/1-amb-nuevo-divisible-en-2-amb-a-estrenar-con-51241034.html>
{'ambientes': '1',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Deheza al 4700',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': '1 Amb Nuevo Divisible en 2 Amb a Estrenar con Amenities, Cochera y '
          'Baulera.',
 'url': 'https://www.zonaprop.com.ar/propiedades/1-amb-nuevo-divisible-en-2-amb-a-estrenar-con-51241034.html'}
2023-03-27 23:01:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-apto-oficina!-51286828.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-apto-oficina!-51286828.html>
{'ambientes': '1',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Olga Cossettini 1540',
 'dormitorios': '1',
 'expensas': ' 18.000',
 'm2_cub': '39',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente en Alquiler, Apto Oficina!',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-apto-oficina!-51286828.html'}
2023-03-27 23:01:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/gran-ph-2-amb-y-medio-planta-baja-frente-patio-51256095.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/gran-ph-2-amb-y-medio-planta-baja-frente-patio-51256095.html>
{'ambientes': '2',
 'barrio': ', Villa Santa Rita, Capital Federal',
 'direccion': 'Juan Agustin Garcia ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '48',
 'moneda': '$',
 'title': 'Gran PH 2 Amb y Medio, Planta Baja Frente, Patio Cubierto, Sin '
          'Expensas, 45 M²!',
 'url': 'https://www.zonaprop.com.ar/propiedades/gran-ph-2-amb-y-medio-planta-baja-frente-patio-51256095.html'}
2023-03-27 23:01:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-botanico-capital-federal-51269180.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-botanico-capital-federal-51269180.html>
{'ambientes': '1',
 'barrio': ', Botánico, Palermo',
 'direccion': 'SCALABRINI ORTIZ 2800',
 'expensas': ' 31.000',
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Departamento 1 Ambiente - Botánico, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-botanico-capital-federal-51269180.html'}
2023-03-27 23:01:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-palermo-salguero-1800-usd-51258958.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-palermo-salguero-1800-usd-51258958.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Salguero ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Alquiler - 3 Ambientes - Palermo - Salguero 1800 - Usd 1.0000 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-palermo-salguero-1800-usd-51258958.html'}
2023-03-27 23:01:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-en-palermo-51385128.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-en-palermo-51385128.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Avenida Cordoba al 4800',
 'dormitorios': '1',
 'expensas': ' 22.000',
 'm2_cub': '42',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Alquiler Departamento en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-en-palermo-51385128.html'}
2023-03-27 23:01:27 [scrapy.extensions.logstats] INFO: Crawled 965 pages (at 16 pages/min), scraped 900 items (at 15 items/min)
2023-03-27 23:01:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermosisimo-depto-vista-al-rio-y-abierta-a-plaza!-con-51331280.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermosisimo-depto-vista-al-rio-y-abierta-a-plaza!-con-51331280.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1500',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '138',
 'm2_total': '158',
 'moneda': 'USD',
 'title': 'Hermosìsimo Depto Vista Al Rìo y Abierta a Plaza! con o Sin '
          'Muebles. 3 Dorm. 1 Cochera 1 Baule',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermosisimo-depto-vista-al-rio-y-abierta-a-plaza!-con-51331280.html'}
2023-03-27 23:01:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-palermo-51375712.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-palermo-51375712.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Las Heras 3800',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes Alquiler Temporal Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-palermo-51375712.html'}
2023-03-27 23:01:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-impecable-3-ambientes-con-cochera-belgrano.-51293670.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-impecable-3-ambientes-con-cochera-belgrano.-51293670.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Avenida Libertador al 5700',
 'dormitorios': '2',
 'expensas': ' 42.900',
 'm2_cub': '72',
 'm2_total': '79',
 'moneda': 'USD',
 'title': 'Alquiler Impecable 3 Ambientes con Cochera, Belgrano. Edificio Full '
          'Amenities.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-impecable-3-ambientes-con-cochera-belgrano.-51293670.html'}
2023-03-27 23:01:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/maure-y-3-de-febrero-3-amb.-c-cochera-fija-90-m-sup2-51212764.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/maure-y-3-de-febrero-3-amb.-c-cochera-fija-90-m-sup2-51212764.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'maure 2300',
 'dormitorios': '2',
 'expensas': ' 56.000',
 'm2_cub': '83',
 'm2_total': '90',
 'moneda': '$',
 'title': 'Maure y 3 de Febrero 3 Amb. C/cochera Fija 90 m²',
 'url': 'https://www.zonaprop.com.ar/propiedades/maure-y-3-de-febrero-3-amb.-c-cochera-fija-90-m-sup2-51212764.html'}
2023-03-27 23:01:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51355344.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51355344.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Santa Fe al 3400',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '86',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51355344.html'}
2023-03-27 23:01:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-66.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51366895.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51366895.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Austria al 1800',
 'dormitorios': '1',
 'expensas': ' 22.000',
 'moneda': '$',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51366895.html'}
2023-03-27 23:01:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-excelente-estado-51217626.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:01:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:01:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-excelente-estado-51217626.html>
{'ambientes': '3',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Comuna 11',
 'dormitorios': '2',
 'expensas': ' 22.000',
 'm2_cub': '60',
 'm2_total': '62',
 'moneda': '$',
 'title': 'Departamento en Excelente Estado',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-excelente-estado-51217626.html'}
2023-03-27 23:02:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51170668.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51170668.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Medrano al 1600',
 'dormitorios': '3',
 'expensas': ' 30.000',
 'm2_cub': '75',
 'm2_total': '79',
 'moneda': '$',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51170668.html'}
2023-03-27 23:02:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-palermo-soho-51373886.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-palermo-soho-51373886.html>
{'ambientes': '1',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Soler al 4700',
 'expensas': 0,
 'm2_cub': '25',
 'm2_total': '25',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente Alquiler - Palermo Soho',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-palermo-soho-51373886.html'}
2023-03-27 23:02:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dueno-alquiler-depto-3amb-51298613.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dueno-alquiler-depto-3amb-51298613.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey Olaguer y Feliú 2600',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '48',
 'm2_total': '48',
 'moneda': '$',
 'title': 'Dueño Alquiler Depto 3amb',
 'url': 'https://www.zonaprop.com.ar/propiedades/dueno-alquiler-depto-3amb-51298613.html'}
2023-03-27 23:02:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amoblado.-3-piso-por-escalera.-cerca-universidad-uade-51285482.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amoblado.-3-piso-por-escalera.-cerca-universidad-uade-51285482.html>
{'ambientes': '2',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'Independencia 1400',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Amoblado. 3 Piso por Escalera. Cerca Universidad Uade',
 'url': 'https://www.zonaprop.com.ar/propiedades/amoblado.-3-piso-por-escalera.-cerca-universidad-uade-51285482.html'}
2023-03-27 23:02:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-palermo-chico-capital-51268363.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-palermo-chico-capital-51268363.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'F.J. Santa Maria de Oro al 3000 y Av Libertador',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '75',
 'm2_total': '75',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Palermo Chico, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-palermo-chico-capital-51268363.html'}
2023-03-27 23:02:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-temporal-belgrano-51369046.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-temporal-belgrano-51369046.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Juramento 2800',
 'expensas': ' 1',
 'm2_cub': '37',
 'm2_total': '37',
 'moneda': '$',
 'title': 'Departamento Monoambiente Alquiler Temporal Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-temporal-belgrano-51369046.html'}
2023-03-27 23:02:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51374042.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51374042.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Vicente Lopez al 1700',
 'dormitorios': '1',
 'expensas': ' 39.000',
 'm2_cub': '73',
 'm2_total': '73',
 'moneda': '$',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51374042.html'}
2023-03-27 23:02:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-departamento-en-recoleta-con-cochera-y-51301987.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-departamento-en-recoleta-con-cochera-y-51301987.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Riobamba al 900',
 'dormitorios': '2',
 'expensas': ' 35.000',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Espectacular Departamento en Recoleta con Cochera y Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-departamento-en-recoleta-con-cochera-y-51301987.html'}
2023-03-27 23:02:27 [scrapy.extensions.logstats] INFO: Crawled 981 pages (at 16 pages/min), scraped 915 items (at 15 items/min)
2023-03-27 23:02:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/austria-2600-51357020.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/austria-2600-51357020.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Austria 2600',
 'dormitorios': '3',
 'expensas': ' 140.000',
 'm2_cub': '260',
 'm2_total': '288',
 'moneda': 'USD',
 'title': 'Austria 2600',
 'url': 'https://www.zonaprop.com.ar/propiedades/austria-2600-51357020.html'}
2023-03-27 23:02:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/residencia-de-lujo-51349618.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/residencia-de-lujo-51349618.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Alvear al 1300',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '350',
 'm2_total': '350',
 'moneda': 'USD',
 'title': 'Residencia de Lujo',
 'url': 'https://www.zonaprop.com.ar/propiedades/residencia-de-lujo-51349618.html'}
2023-03-27 23:02:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dos-ambientes-amoblado-jardines-del-libertador-vista-51180836.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dos-ambientes-amoblado-jardines-del-libertador-vista-51180836.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'AV DEL LIBERTADOR ',
 'expensas': ' 1',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Dos Ambientes Amoblado Jardines del Libertador Vista Rio',
 'url': 'https://www.zonaprop.com.ar/propiedades/dos-ambientes-amoblado-jardines-del-libertador-vista-51180836.html'}
2023-03-27 23:02:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto.-3amb-con-cochera-en-donado-al-1600!-51142315.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto.-3amb-con-cochera-en-donado-al-1600!-51142315.html>
{'ambientes': '3',
 'barrio': ', Villa Ortuzar, Capital Federal',
 'direccion': 'Donado 1655',
 'dormitorios': '2',
 'expensas': ' 27.000',
 'm2_cub': '65',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Depto. 3amb con Cochera en Donado Al 1600!',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto.-3amb-con-cochera-en-donado-al-1600!-51142315.html'}
2023-03-27 23:02:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-3-ambientes-recoleta-51244224.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-3-ambientes-recoleta-51244224.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Peña al 2200',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '62',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Alquiler de Departamento 3 Ambientes Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-3-ambientes-recoleta-51244224.html'}
2023-03-27 23:02:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hortiguera-y-av-rivadavia-seg-24-has-51290164.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hortiguera-y-av-rivadavia-seg-24-has-51290164.html>
{'ambientes': '1',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Hortiguera 82 12º',
 'expensas': ' 14.500',
 'm2_cub': '30',
 'm2_total': '34',
 'moneda': '$',
 'title': 'Hortiguera y Av Rivadavia - Seg 24 Has',
 'url': 'https://www.zonaprop.com.ar/propiedades/hortiguera-y-av-rivadavia-seg-24-has-51290164.html'}
2023-03-27 23:02:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-67.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/se-alquila-depto-2-amb-con-balcon-y-cochera-51203512.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/se-alquila-depto-2-amb-con-balcon-y-cochera-51203512.html>
{'ambientes': '2',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'gral jose g artigas 2900',
 'dormitorios': '1',
 'expensas': ' 19.000',
 'm2_cub': '46',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Se Alquila Depto 2 Amb con Balcón y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/se-alquila-depto-2-amb-con-balcon-y-cochera-51203512.html'}
2023-03-27 23:02:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-depto-apto-profesional-con-terraza-51313640.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:02:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:02:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-depto-apto-profesional-con-terraza-51313640.html>
{'ambientes': '1',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'San Luis 2600',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_cub': '34',
 'm2_total': '77',
 'moneda': '$',
 'title': 'Excelente Depto Apto Profesional con Terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-depto-apto-profesional-con-terraza-51313640.html'}
2023-03-27 23:03:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lindisimo-monoambiente-en-buenisima-ubicacion-51245811.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lindisimo-monoambiente-en-buenisima-ubicacion-51245811.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Talcahuano al 700',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Lindísimo Monoambiente en Buenísima Ubicación',
 'url': 'https://www.zonaprop.com.ar/propiedades/lindisimo-monoambiente-en-buenisima-ubicacion-51245811.html'}
2023-03-27 23:03:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplio-departamento-de-1-ambiente-divisible-51322812.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplio-departamento-de-1-ambiente-divisible-51322812.html>
{'ambientes': '1',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Baigorria 2400',
 'expensas': ' 13.000',
 'm2_cub': '31',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Amplio Departamento de 1 Ambiente Divisible',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplio-departamento-de-1-ambiente-divisible-51322812.html'}
2023-03-27 23:03:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51364985.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51364985.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Av. Boedo 1900. Entre Av. chiclana y Metán',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '49',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51364985.html'}
2023-03-27 23:03:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-town-house-soho-frente-polo-tecnologico-51301115.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-town-house-soho-frente-polo-tecnologico-51301115.html>
{'barrio': ', Palermo Soho, Palermo',
 'direccion': 'GODOY CRUZ 2369. Entre Paraguay y Guatemala',
 'expensas': 0,
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Torre Town House Soho Frente Polo Tecnológico',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-town-house-soho-frente-polo-tecnologico-51301115.html'}
2023-03-27 23:03:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-51281223.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-51281223.html>
{'ambientes': '2',
 'barrio': ', Monte Castro, Capital Federal',
 'direccion': 'Cervantes al 1900',
 'dormitorios': '1',
 'expensas': ' 12.100',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-51281223.html'}
2023-03-27 23:03:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-amoblado-y-equipado-51304030.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-amoblado-y-equipado-51304030.html>
{'ambientes': '1',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Av Las Heras 3828',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '22',
 'm2_total': '39',
 'moneda': 'USD',
 'title': 'Alquiler Temporario Monoambiente Amoblado y Equipado en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-amoblado-y-equipado-51304030.html'}
2023-03-27 23:03:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-2-ambientes-alq-temporal-nunez-51175884.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-2-ambientes-alq-temporal-nunez-51175884.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Ciudad de la paz 3200',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '57',
 'm2_total': '57',
 'moneda': 'USD',
 'title': 'Depto 2 Ambientes Alq Temporal Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-2-ambientes-alq-temporal-nunez-51175884.html'}
2023-03-27 23:03:27 [scrapy.extensions.logstats] INFO: Crawled 997 pages (at 16 pages/min), scraped 930 items (at 15 items/min)
2023-03-27 23:03:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-en-sacalbrini-ortiz-y-las-51365591.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-en-sacalbrini-ortiz-y-las-51365591.html>
{'ambientes': '5',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Scalabrini Ortiz Esquina las Heras 3 Dormitorios Palermo',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '88',
 'm2_total': '88',
 'moneda': '$',
 'title': 'Alquiler de Departamento en Sacalbrini Ortiz y Las Heras 3 Dorm.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-departamento-en-sacalbrini-ortiz-y-las-51365591.html'}
2023-03-27 23:03:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-c-cochera-anchorena-1700-51356647.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-c-cochera-anchorena-1700-51356647.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Anchorena 1700',
 'dormitorios': '3',
 'expensas': ' 63.000',
 'm2_cub': '107',
 'm2_total': '117',
 'moneda': '$',
 'title': 'Alquiler - Departamento C/ Cochera - Anchorena 1700 - Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-c-cochera-anchorena-1700-51356647.html'}
2023-03-27 23:03:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-amueblado-en-nunez-51304622.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-amueblado-en-nunez-51304622.html>
{'ambientes': '4',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'O´higgins 2800',
 'dormitorios': '3',
 'expensas': ' 66.000',
 'm2_cub': '88',
 'm2_total': '88',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporal Amueblado en Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-amueblado-en-nunez-51304622.html'}
2023-03-27 23:03:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-puerto-madero-precio-pack-51141173.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-puerto-madero-precio-pack-51141173.html>
{'ambientes': '5',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Petrona Eyle 300',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '300',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Departamento 5 Ambientes - Puerto Madero (Precio Pack)',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-puerto-madero-precio-pack-51141173.html'}
2023-03-27 23:03:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-duplex-en-palermo-2-ambientes-alquiler-51170016.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-duplex-en-palermo-2-ambientes-alquiler-51170016.html>
{'ambientes': '2',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Mansilla 3800',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '60',
 'm2_total': '64',
 'moneda': 'USD',
 'title': 'Departamento Duplex en Palermo 2 Ambientes Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-duplex-en-palermo-2-ambientes-alquiler-51170016.html'}
2023-03-27 23:03:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-departamento-2-ambientes-cochera-barrio-51302022.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-departamento-2-ambientes-cochera-barrio-51302022.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Riobamba al 900',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Espectacular Departamento 2 Ambientes Cochera Barrio Norte Full '
          'Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-departamento-2-ambientes-cochera-barrio-51302022.html'}
2023-03-27 23:03:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-4-amb-devoto-2di-esc-b-exp-con-parrilla-51222553.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-4-amb-devoto-2di-esc-b-exp-con-parrilla-51222553.html>
{'ambientes': '4',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Desaguadero 3600',
 'dormitorios': '3',
 'expensas': ' 2.000',
 'm2_cub': '65',
 'm2_total': '78',
 'moneda': '$',
 'title': 'PH 4 Amb Devoto 2di /esc B/exp con Parrilla',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-4-amb-devoto-2di-esc-b-exp-con-parrilla-51222553.html'}
2023-03-27 23:03:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-68.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:03:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler.-150-m-sup2-.-cochera.-51229887.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:03:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler.-150-m-sup2-.-cochera.-51229887.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Cavia al 3075. Muy Luminoso! 150 m2. Cochera.',
 'dormitorios': '3',
 'expensas': ' 80.000',
 'm2_cub': '150',
 'm2_total': '150',
 'moneda': '$',
 'title': 'Departamento en Alquiler. 150 m². Cochera.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler.-150-m-sup2-.-cochera.-51229887.html'}
2023-03-27 23:04:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-todo-incluido-catalinas-51140665.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-todo-incluido-catalinas-51140665.html>
{'ambientes': '1',
 'barrio': ', Catalinas, Capital Federal',
 'direccion': 'Avenida Cordoba al 400',
 'expensas': ' 20.000',
 'm2_cub': '35',
 'm2_total': '41',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Todo Incluido - Catalinas',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-todo-incluido-catalinas-51140665.html'}
2023-03-27 23:04:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-lomas-de-nunez.-4-habitaciones.-con-51352938.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-lomas-de-nunez.-4-habitaciones.-con-51352938.html>
{'ambientes': '5',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Lomas de Núñez',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '300',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Casa en Alquiler Lomas de Núñez. 4 Habitaciones. con Cochera. '
          'Pileta. Jardín.',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-lomas-de-nunez.-4-habitaciones.-con-51352938.html'}
2023-03-27 23:04:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-alvear-1900-recoleta-alquiler-temporario-2-3-51158709.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-alvear-1900-recoleta-alquiler-temporario-2-3-51158709.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Avenida Alvear 1929',
 'dormitorios': '3',
 'expensas': ' 100.000',
 'm2_cub': '125',
 'm2_total': '134',
 'moneda': 'USD',
 'title': 'Av Alvear 1900 - Recoleta - Alquiler Temporario - 2/3 Dorm.',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-alvear-1900-recoleta-alquiler-temporario-2-3-51158709.html'}
2023-03-27 23:04:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-con-detalles-de-diseno-51348223.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-con-detalles-de-diseno-51348223.html>
{'ambientes': '2',
 'barrio': ', Parque Centenario, Capital Federal',
 'direccion': 'WARNES Y A.GALLARDO',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '35',
 'm2_total': '37',
 'moneda': '$',
 'title': '2 Ambientes con Detalles de Diseño',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-con-detalles-de-diseno-51348223.html'}
2023-03-27 23:04:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-amoblado-4-amb.-con-balcon-frente-y-51286494.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-amoblado-4-amb.-con-balcon-frente-y-51286494.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Migueletes al 1000',
 'dormitorios': '3',
 'expensas': ' 122.400',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Alquiler Depto - Amoblado - 4 Amb. con Balcon Frente y Cochera Fija',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-amoblado-4-amb.-con-balcon-frente-y-51286494.html'}
2023-03-27 23:04:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impactante-duplex-en-la-isla-alquiler-con-muebles-51235263.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impactante-duplex-en-la-isla-alquiler-con-muebles-51235263.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Galileo y Guido - La Isla',
 'dormitorios': '4',
 'expensas': ' 300.000',
 'm2_cub': '437',
 'm2_total': '465',
 'moneda': 'USD',
 'title': 'Impactante Dúplex en La Isla - Alquiler con Muebles Premium.',
 'url': 'https://www.zonaprop.com.ar/propiedades/impactante-duplex-en-la-isla-alquiler-con-muebles-51235263.html'}
2023-03-27 23:04:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-piso-de-3-dorm.-con-2-cocheras-51134229.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-piso-de-3-dorm.-con-2-cocheras-51134229.html>
{'ambientes': '4',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Seguí Entre Oro y Kennedy',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '189',
 'm2_total': '218',
 'moneda': 'USD',
 'title': 'Venta o Alquiler Piso de 3 Dorm. con 2 Cocheras',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-o-alquiler-piso-de-3-dorm.-con-2-cocheras-51134229.html'}
2023-03-27 23:04:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-villa-crespo-51236150.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:27 [scrapy.extensions.logstats] INFO: Crawled 1014 pages (at 17 pages/min), scraped 945 items (at 15 items/min)
2023-03-27 23:04:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-villa-crespo-51236150.html>
{'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Padilla al 900',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '30',
 'm2_total': '34',
 'moneda': 'USD',
 'title': 'Departamento en Villa Crespo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-villa-crespo-51236150.html'}
2023-03-27 23:04:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-zona-centrica-51209075.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-zona-centrica-51209075.html>
{'ambientes': '1',
 'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Tucuman 1500',
 'expensas': ' 10.500',
 'm2_cub': '22',
 'm2_total': '22',
 'moneda': '$',
 'title': 'Departamento Monoambiente en Zona Centrica',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-zona-centrica-51209075.html'}
2023-03-27 23:04:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/muy-lindo-monoambiente-todo-amoblado-y-equipado-51274818.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/muy-lindo-monoambiente-todo-amoblado-y-equipado-51274818.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Scalabrini Ortiz 2300 7°',
 'expensas': ' 18.000',
 'm2_cub': '32',
 'm2_total': '32',
 'moneda': '$',
 'title': 'Muy Lindo Monoambiente Todo Amoblado y Equipado',
 'url': 'https://www.zonaprop.com.ar/propiedades/muy-lindo-monoambiente-todo-amoblado-y-equipado-51274818.html'}
2023-03-27 23:04:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palermo-mario-bravo-y-avda.-cordoba-3-ambientes-al-51281991.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palermo-mario-bravo-y-avda.-cordoba-3-ambientes-al-51281991.html>
{'ambientes': '2',
 'barrio': ', Palermo Viejo, Palermo',
 'direccion': 'Mario Bravo 1000',
 'dormitorios': '2',
 'expensas': ' 2.000',
 'm2_cub': '51',
 'm2_total': '54',
 'moneda': '$',
 'title': 'Palermo, Mario Bravo y Avda. Cordoba, 3 Ambientes, Al Frente, por '
          'Escalera',
 'url': 'https://www.zonaprop.com.ar/propiedades/palermo-mario-bravo-y-avda.-cordoba-3-ambientes-al-51281991.html'}
2023-03-27 23:04:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-profesional-4-amb-c-dep-de-servicio-51162287.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-profesional-4-amb-c-dep-de-servicio-51162287.html>
{'ambientes': '4',
 'barrio': ', Congreso, Capital Federal',
 'direccion': 'Callao ',
 'dormitorios': '3',
 'expensas': ' 22.000',
 'm2_cub': '91',
 'm2_total': '91',
 'moneda': '$',
 'title': 'Alquiler Profesional - 4 Amb C/ Dep de Servicio - Callao 200 - Caba',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-profesional-4-amb-c-dep-de-servicio-51162287.html'}
2023-03-27 23:04:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-belgrano-51206907.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-belgrano-51206907.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Álvarez Thomas al 2100',
 'expensas': 0,
 'm2_total': '130',
 'moneda': '$',
 'title': 'PH - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-belgrano-51206907.html'}
2023-03-27 23:04:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-3er-piso-interno-luminoso-sin-51315109.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-3er-piso-interno-luminoso-sin-51315109.html>
{'ambientes': '1',
 'barrio': ', Liniers, Capital Federal',
 'direccion': 'RIVADAVIA 10444',
 'expensas': 0,
 'm2_cub': '20',
 'm2_total': '20',
 'moneda': '$',
 'title': 'Departamento 1 Ambiente 3er Piso Interno Luminoso Sin Balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-3er-piso-interno-luminoso-sin-51315109.html'}
2023-03-27 23:04:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-con-cochera-en-alquiler-en-51382657.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-con-cochera-en-alquiler-en-51382657.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Amenabar al 2400',
 'dormitorios': '1',
 'expensas': ' 32.000',
 'm2_cub': '37',
 'm2_total': '41',
 'moneda': '$',
 'title': 'Excelente Departamento con Cochera en Alquiler en Belgrano - '
          'Amenabar 2400',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-con-cochera-en-alquiler-en-51382657.html'}
2023-03-27 23:04:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-69.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:04:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:04:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto.-2-ambientes-con-amplia-cocina-y-lavadero-51247016.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto.-2-ambientes-con-amplia-cocina-y-lavadero-51247016.html>
{'ambientes': '2',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Campana 2572',
 'dormitorios': '1',
 'expensas': ' 3.500',
 'm2_cub': '38',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Depto. 2 Ambientes con Amplia Cocina y Lavadero Independiente Uso '
          'Comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto.-2-ambientes-con-amplia-cocina-y-lavadero-51247016.html'}
2023-03-27 23:05:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-amb-con-balcon-aterr-y-lav-1-cuadra-de-parq.-51340069.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-amb-con-balcon-aterr-y-lav-1-cuadra-de-parq.-51340069.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'AMBROSETTI, JUAN B. 100. Entre Rivadavia y Neuquen',
 'dormitorios': '2',
 'expensas': ' 13.200',
 'm2_cub': '57',
 'm2_total': '60',
 'moneda': '$',
 'title': '3 Amb con Balcon Aterr y Lav - 1 Cuadra de Parq. Rivadavia',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-amb-con-balcon-aterr-y-lav-1-cuadra-de-parq.-51340069.html'}
2023-03-27 23:05:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermosisimo-monoambiente-en-villa-devoto!-muy-51280343.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermosisimo-monoambiente-en-villa-devoto!-muy-51280343.html>
{'ambientes': '1',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'AVENIDA SAN MARTIN 7100. Entre Ladines y Griveo',
 'expensas': ' 17.000',
 'm2_cub': '30',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Hermosisimo Monoambiente en Villa Devoto! Muy Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermosisimo-monoambiente-en-villa-devoto!-muy-51280343.html'}
2023-03-27 23:05:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/sarmiento-4100-2-amb-duplex-con-vestidor-cfrente-51352759.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/sarmiento-4100-2-amb-duplex-con-vestidor-cfrente-51352759.html>
{'ambientes': '2',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'sarmiento ',
 'dormitorios': '1',
 'expensas': ' 13.000',
 'm2_cub': '40',
 'moneda': '$',
 'title': 'Sarmiento 4100 - 2 Amb Duplex con Vestidor - Cfrente',
 'url': 'https://www.zonaprop.com.ar/propiedades/sarmiento-4100-2-amb-duplex-con-vestidor-cfrente-51352759.html'}
2023-03-27 23:05:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-4-dorm.-y-2-banos-con-fondo-libre-51164799.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-4-dorm.-y-2-banos-con-fondo-libre-51164799.html>
{'ambientes': '5',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Paraguay 5400',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '250',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Casa 4 Dorm. y 2 Baños con Fondo Libre',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-4-dorm.-y-2-banos-con-fondo-libre-51164799.html'}
2023-03-27 23:05:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dos-ambientes-centro-51386089.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dos-ambientes-centro-51386089.html>
{'ambientes': '2',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Cordoba al 800',
 'dormitorios': '1',
 'expensas': ' 28.000',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Dos Ambientes - Centro',
 'url': 'https://www.zonaprop.com.ar/propiedades/dos-ambientes-centro-51386089.html'}
2023-03-27 23:05:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51163896.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51163896.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Figueroa Alcorta al 3500',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '213',
 'm2_total': '213',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51163896.html'}
2023-03-27 23:05:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/cuatro-ambientes-con-cochera-belgrano-51262419.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/cuatro-ambientes-con-cochera-belgrano-51262419.html>
{'ambientes': '4',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'Cuba al 1700',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '89',
 'm2_total': '96',
 'moneda': 'USD',
 'title': 'Cuatro Ambientes con Cochera - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/cuatro-ambientes-con-cochera-belgrano-51262419.html'}
2023-03-27 23:05:27 [scrapy.extensions.logstats] INFO: Crawled 1030 pages (at 16 pages/min), scraped 961 items (at 16 items/min)
2023-03-27 23:05:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recoleta-la-isla-triplex-5-dorm.-780-m-sup2-51373475.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recoleta-la-isla-triplex-5-dorm.-780-m-sup2-51373475.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Gelly y Obes al 2200',
 'dormitorios': '5',
 'expensas': ' 180.000',
 'm2_total': '780',
 'moneda': 'USD',
 'title': 'Recoleta - La Isla - Triplex 5 Dorm. - 780 m²',
 'url': 'https://www.zonaprop.com.ar/propiedades/recoleta-la-isla-triplex-5-dorm.-780-m-sup2-51373475.html'}
2023-03-27 23:05:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-microcentro-esmeralda-700-51296816.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-microcentro-esmeralda-700-51296816.html>
{'ambientes': '1',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Esmeralda ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': 'USD',
 'title': 'Alquiler - Monoambiente - Microcentro - Esmeralda 700 - Usd 500 '
          'Todo Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-microcentro-esmeralda-700-51296816.html'}
2023-03-27 23:05:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-belgrano-alquiler-temporal-51178584.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-belgrano-alquiler-temporal-51178584.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Olazabal 1800',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes en Belgrano Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-belgrano-alquiler-temporal-51178584.html'}
2023-03-27 23:05:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-1-dormitorio-en-villa-51364996.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-1-dormitorio-en-villa-51364996.html>
{'ambientes': '2',
 'barrio': ', Villa Ortuzar, Capital Federal',
 'direccion': 'Holmberg 895',
 'dormitorios': '1',
 'expensas': ' 2.500',
 'm2_cub': '45',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Departamento en Alquiler de 1 Dormitorio en Villa Ortuzar',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-1-dormitorio-en-villa-51364996.html'}
2023-03-27 23:05:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51137486.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51137486.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Alvear Tower Azucena Villaflor al al 500',
 'dormitorios': '1',
 'expensas': ' 100.000',
 'm2_cub': '90',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51137486.html'}
2023-03-27 23:05:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-expensas-incluidas-muy-buen-estado-51366896.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-expensas-incluidas-muy-buen-estado-51366896.html>
{'ambientes': '2',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'ESTADOS UNIDOS 1756',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '32',
 'm2_total': '32',
 'moneda': '$',
 'title': '2 Ambientes Expensas Incluidas Muy Buen Estado',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-expensas-incluidas-muy-buen-estado-51366896.html'}
2023-03-27 23:05:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/bacacay-1000-monoambiente-balcon-al-frente-51340668.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/bacacay-1000-monoambiente-balcon-al-frente-51340668.html>
{'ambientes': '1',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Bacacay al 1000',
 'expensas': ' 8.600',
 'm2_cub': '23',
 'm2_total': '26',
 'moneda': '$',
 'title': 'Bacacay 1000 - Monoambiente - Balcon Al Frente',
 'url': 'https://www.zonaprop.com.ar/propiedades/bacacay-1000-monoambiente-balcon-al-frente-51340668.html'}
2023-03-27 23:05:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-corrientes-4325-departamento-en-alquiler-amoblado-51213110.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-corrientes-4325-departamento-en-alquiler-amoblado-51213110.html>
{'ambientes': '2',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'av Corrientes ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '47',
 'moneda': 'USD',
 'title': 'Av Corrientes 4325 - Departamento en Alquiler Amoblado',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-corrientes-4325-departamento-en-alquiler-amoblado-51213110.html'}
2023-03-27 23:05:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-70.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:05:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-palermo-chico-capital-51253697.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:05:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-palermo-chico-capital-51253697.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'GODOY CRUZ 3000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '140',
 'm2_total': '145',
 'moneda': 'USD',
 'title': 'Departamento 3 Dor. C/dep - Palermo Chico, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-palermo-chico-capital-51253697.html'}
2023-03-27 23:06:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermosa-casa-tipo-ph-3-ambientes-con-terraza!-51221343.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermosa-casa-tipo-ph-3-ambientes-con-terraza!-51221343.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Baldomero Fernandez Moreno 2855',
 'expensas': 0,
 'm2_cub': '75',
 'm2_total': '95',
 'moneda': '$',
 'title': 'Hermosa Casa Tipo PH 3 Ambientes con Terraza!',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermosa-casa-tipo-ph-3-ambientes-con-terraza!-51221343.html'}
2023-03-27 23:06:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-tres-ambientes-con-dependencia-de-51242998.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-tres-ambientes-con-dependencia-de-51242998.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Caracas 70',
 'dormitorios': '2',
 'expensas': ' 40.000',
 'm2_cub': '88',
 'm2_total': '88',
 'moneda': '$',
 'title': 'Departamento Tres Ambientes con Dependencia de Servicios.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-tres-ambientes-con-dependencia-de-51242998.html'}
2023-03-27 23:06:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-con-cochera-en-recoleta-51287147.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-con-cochera-en-recoleta-51287147.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Marcelo Torcuato de Alvear 2400',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '66',
 'm2_total': '73',
 'moneda': 'USD',
 'title': 'Excelente Departamento con Cochera en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-con-cochera-en-recoleta-51287147.html'}
2023-03-27 23:06:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-el-centro-de-la-ciudad-en-51168379.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-el-centro-de-la-ciudad-en-51168379.html>
{'ambientes': '2',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Lavalle 1500',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '90',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes en El Centro de La Ciudad en Alquiler '
          'Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-el-centro-de-la-ciudad-en-51168379.html'}
2023-03-27 23:06:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51382389.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51382389.html>
{'ambientes': '1',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Alvear Icon , Aimé Painé al al 1100',
 'dormitorios': '1',
 'expensas': ' 80.000',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51382389.html'}
2023-03-27 23:06:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-belgrano-categoria-51383305.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-belgrano-categoria-51383305.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '11 de Septiembre 1650. Entre Hernandez, jose y Del pino, virrey',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '150',
 'm2_total': '160',
 'moneda': 'USD',
 'title': 'Alquiler Belgrano Categoria',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-belgrano-categoria-51383305.html'}
2023-03-27 23:06:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-alquiler-temporal-palermo-51178404.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-alquiler-temporal-palermo-51178404.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av Scalabrini Ortiz ',
 'dormitorios': '3',
 'expensas': ' 35.000',
 'm2_cub': '145',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Departamento 4 Ambientes Alquiler Temporal Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-alquiler-temporal-palermo-51178404.html'}
2023-03-27 23:06:27 [scrapy.extensions.logstats] INFO: Crawled 1047 pages (at 17 pages/min), scraped 977 items (at 16 items/min)
2023-03-27 23:06:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-el-51365065.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-el-51365065.html>
{'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Maipu 742',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes Alquiler Temporal en El Centro de La '
          'Ciudad',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-el-51365065.html'}
2023-03-27 23:06:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-con-balcon-51358207.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-con-balcon-51358207.html>
{'ambientes': '2',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'GABRIELA MISTRAL 2946',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '52',
 'moneda': '$',
 'title': 'Hermoso 2 Ambientes con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-con-balcon-51358207.html'}
2023-03-27 23:06:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lafinur-y-gutierrez-duplex-70-m-sup2--2-ambientes-51163212.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lafinur-y-gutierrez-duplex-70-m-sup2--2-ambientes-51163212.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Lafinur al 3000',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Lafinur y Gutierrez Duplex 70 m² 2 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/lafinur-y-gutierrez-duplex-70-m-sup2--2-ambientes-51163212.html'}
2023-03-27 23:06:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/libertad-al-1300-3-a-excte-vista-plaza-c.-pellegrini-51313770.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/libertad-al-1300-3-a-excte-vista-plaza-c.-pellegrini-51313770.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Libertad al 1300',
 'dormitorios': '3',
 'expensas': ' 150.000',
 'm2_cub': '220',
 'm2_total': '230',
 'moneda': 'USD',
 'title': 'Libertad Al 1300,3,a Excte Vista Plaza C. Pellegrini, Sin Muebles',
 'url': 'https://www.zonaprop.com.ar/propiedades/libertad-al-1300-3-a-excte-vista-plaza-c.-pellegrini-51313770.html'}
2023-03-27 23:06:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51247558.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51247558.html>
{'ambientes': '1',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Distrito Quartier.',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': 'USD',
 'title': 'Distrito Quartier - Excelente Loft en Alquiler Temporario.',
 'url': 'https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51247558.html'}
2023-03-27 23:06:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-63-m-sup2--cubiertos-totales-c-patio-51314019.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-63-m-sup2--cubiertos-totales-c-patio-51314019.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Av. de los Incas y Barzana 3°',
 'expensas': ' 25.000',
 'm2_cub': '31',
 'm2_total': '63',
 'moneda': '$',
 'title': 'Monoambiente 63 m² Cubiertos Totales C/ Patio Propio',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-63-m-sup2--cubiertos-totales-c-patio-51314019.html'}
2023-03-27 23:06:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/retasado-especatcular-penthosue-zencity-terraza-51385100.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/retasado-especatcular-penthosue-zencity-terraza-51385100.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Boulevard Rosario Vera Peñaloza al 400',
 'dormitorios': '3',
 'expensas': ' 38.000',
 'm2_cub': '340',
 'm2_total': '400',
 'moneda': 'Consultar',
 'title': 'Retasado Especatcular Penthosue Zencity Terraza Privada. Parrilla',
 'url': 'https://www.zonaprop.com.ar/propiedades/retasado-especatcular-penthosue-zencity-terraza-51385100.html'}
2023-03-27 23:06:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/almagro-3-ambientes-al-frente-balcon-pintado-impec-51363522.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:06:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:06:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/almagro-3-ambientes-al-frente-balcon-pintado-impec-51363522.html>
{'ambientes': '3',
 'barrio': ', Almagro Norte, Almagro',
 'direccion': 'GASCON 588',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '47',
 'm2_total': '48',
 'moneda': '$',
 'title': 'Almagro 3 Ambientes Al Frente Balcon Pintado Impec/ Pisos '
          'Plastificados',
 'url': 'https://www.zonaprop.com.ar/propiedades/almagro-3-ambientes-al-frente-balcon-pintado-impec-51363522.html'}
2023-03-27 23:07:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-ubicado-en-belgrano-51360564.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-ubicado-en-belgrano-51360564.html>
{'ambientes': '7',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arribeños -MKO 1900',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '200',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Departamento Piso en Alquiler Ubicado en Belgrano, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-ubicado-en-belgrano-51360564.html'}
2023-03-27 23:07:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-71.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-villa-ortuzar-51253435.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-villa-ortuzar-51253435.html>
{'ambientes': '5',
 'barrio': ', Villa Ortuzar, Capital Federal',
 'direccion': 'Carbajal al 3800',
 'dormitorios': '4',
 'expensas': ' 150.000',
 'm2_cub': '336',
 'm2_total': '358',
 'moneda': 'USD',
 'title': 'Departamento - Villa Ortuzar',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-villa-ortuzar-51253435.html'}
2023-03-27 23:07:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-3-ambientes-super-luminoso-recoleta-51380282.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-3-ambientes-super-luminoso-recoleta-51380282.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Avenida Córdoba 1646',
 'dormitorios': '2',
 'expensas': ' 13.000',
 'm2_cub': '53',
 'm2_total': '56',
 'moneda': 'USD',
 'title': 'Hermoso 3 Ambientes Súper Luminoso Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-3-ambientes-super-luminoso-recoleta-51380282.html'}
2023-03-27 23:07:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-villa-crespo-51385082.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-villa-crespo-51385082.html>
{'ambientes': '4',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Córdoba al 4700',
 'dormitorios': '3',
 'expensas': ' 53.000',
 'm2_cub': '85',
 'm2_total': '93',
 'moneda': '$',
 'title': 'Departamento - Villa Crespo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-villa-crespo-51385082.html'}
2023-03-27 23:07:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-3-ambs-c-amenities-51233317.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-3-ambs-c-amenities-51233317.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Riobamba 1200',
 'dormitorios': '2',
 'expensas': ' 80.000',
 'm2_cub': '121',
 'm2_total': '129',
 'moneda': 'USD',
 'title': 'Alquiler Departamento Recoleta 3 Ambs C/ Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-3-ambs-c-amenities-51233317.html'}
2023-03-27 23:07:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-2-ambientes-palermo-51160482.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-2-ambientes-palermo-51160482.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av santa Fe ',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporal 2 Ambientes Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-2-ambientes-palermo-51160482.html'}
2023-03-27 23:07:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/como-una-casa-51363628.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/como-una-casa-51363628.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Guido al 2600',
 'dormitorios': '2',
 'expensas': ' 58.000',
 'm2_cub': '145',
 'm2_total': '169',
 'moneda': 'USD',
 'title': 'Como Una Casa',
 'url': 'https://www.zonaprop.com.ar/propiedades/como-una-casa-51363628.html'}
2023-03-27 23:07:27 [scrapy.extensions.logstats] INFO: Crawled 1063 pages (at 16 pages/min), scraped 992 items (at 15 items/min)
2023-03-27 23:07:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-2-amb-lateral-vista-abierta-a-2-c.-estacion-51304231.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-2-amb-lateral-vista-abierta-a-2-c.-estacion-51304231.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Av. Directorio al 200',
 'dormitorios': '1',
 'expensas': ' 13.800',
 'm2_cub': '33',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Depto 2 Amb Lateral Vista Abierta a 2 C. Estacion Subte E M/lum '
          'B/est',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-2-amb-lateral-vista-abierta-a-2-c.-estacion-51304231.html'}
2023-03-27 23:07:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/temporario-1amb-divino!-totalmente-equipado-peru-al-51293115.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/temporario-1amb-divino!-totalmente-equipado-peru-al-51293115.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Peru 1600',
 'expensas': 0,
 'm2_cub': '24',
 'm2_total': '26',
 'moneda': 'USD',
 'title': 'Temporario, 1amb Divino! Totalmente Equipado, Peru Al 1600',
 'url': 'https://www.zonaprop.com.ar/propiedades/temporario-1amb-divino!-totalmente-equipado-peru-al-51293115.html'}
2023-03-27 23:07:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/increible-4-dorm.-c-muebles-terraza-jacuzzi-51343765.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/increible-4-dorm.-c-muebles-terraza-jacuzzi-51343765.html>
{'ambientes': '7',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Callao al 900',
 'dormitorios': '4',
 'expensas': ' 1',
 'm2_cub': '300',
 'm2_total': '350',
 'moneda': 'USD',
 'title': 'Increíble 4 Dorm. C/muebles - Terraza, Jacuzzi - Cochera y '
          'Dependencia',
 'url': 'https://www.zonaprop.com.ar/propiedades/increible-4-dorm.-c-muebles-terraza-jacuzzi-51343765.html'}
2023-03-27 23:07:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exclusivo-departamento-de-3-ambientes-c-cochera-en-51282325.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exclusivo-departamento-de-3-ambientes-c-cochera-en-51282325.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Vuelta de Obligado al 2200',
 'dormitorios': '2',
 'expensas': ' 52.000',
 'm2_cub': '85',
 'm2_total': '90',
 'moneda': '$',
 'title': 'Exclusivo Departamento de 3 Ambientes C/ Cochera en Inmejorable '
          'Ubicación - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/exclusivo-departamento-de-3-ambientes-c-cochera-en-51282325.html'}
2023-03-27 23:07:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palermo-gurruchaga-2000-2-amb-pb-al-fte-en-buen-estado-51316371.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palermo-gurruchaga-2000-2-amb-pb-al-fte-en-buen-estado-51316371.html>
{'ambientes': '2',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'GURRUCHAGA ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Palermo Gurruchaga 2000 2 Amb Pb Al Fte en Buen Estado Cocina '
          'Lavadero',
 'url': 'https://www.zonaprop.com.ar/propiedades/palermo-gurruchaga-2000-2-amb-pb-al-fte-en-buen-estado-51316371.html'}
2023-03-27 23:07:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palermo-alquiler-depto.-3-amb-balcon-y-cochera-51370819.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palermo-alquiler-depto.-3-amb-balcon-y-cochera-51370819.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Ancon ',
 'dormitorios': '2',
 'expensas': ' 40.000',
 'm2_cub': '90',
 'm2_total': '129',
 'moneda': 'USD',
 'title': 'Palermo, Alquiler Depto. 3 Amb, Balcón y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/palermo-alquiler-depto.-3-amb-balcon-y-cochera-51370819.html'}
2023-03-27 23:07:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-temporal-belgrano-51179124.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-temporal-belgrano-51179124.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '3 de Febrero ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '38',
 'm2_total': '39',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente Alquiler Temporal Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-temporal-belgrano-51179124.html'}
2023-03-27 23:07:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51324595.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51324595.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Federico Lacroze al 2200',
 'dormitorios': '2',
 'expensas': ' 35.000',
 'moneda': '$',
 'title': 'Departamento en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51324595.html'}
2023-03-27 23:07:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51069734.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51069734.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Yerbal al 600',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51069734.html'}
2023-03-27 23:07:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-al-frente-con-balcon-muy-51273388.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:07:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:07:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-al-frente-con-balcon-muy-51273388.html>
{'ambientes': '3',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Valentin Gomez 3099',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '55',
 'm2_total': '58',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes Al Frente con Balcón - Muy Buena Zona -',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-al-frente-con-balcon-muy-51273388.html'}
2023-03-27 23:08:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-72.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/duplex-de-3-ambientes-51353426.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/duplex-de-3-ambientes-51353426.html>
{'ambientes': '2',
 'barrio': '',
 'direccion': '',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Duplex de 3 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/duplex-de-3-ambientes-51353426.html'}
2023-03-27 23:08:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-con-pileta-en-villa-urquiza-51200261.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-con-pileta-en-villa-urquiza-51200261.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Monroe 5200',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '36',
 'm2_total': '36',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente con Pileta en Villa Urquiza Alquiler '
          'Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-con-pileta-en-villa-urquiza-51200261.html'}
2023-03-27 23:08:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282671.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282671.html>
{'ambientes': '3',
 'barrio': ', Caballito Norte, Caballito',
 'direccion': 'General Urquiza al 1000',
 'dormitorios': '2',
 'expensas': ' 23.700',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': '3amb · 60 m² · Nvo! S/ambl! Bcón Fte! 2 Aa! Pile! Sum! Parr! Gym! '
          'Full Amenities!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282671.html'}
2023-03-27 23:08:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-frente-balcon-riobamba-y-51258386.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-frente-balcon-riobamba-y-51258386.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'riobamba ',
 'expensas': ' 20.000',
 'm2_cub': '32',
 'm2_total': '32',
 'moneda': '$',
 'title': 'Alquiler Monoambiente Frente Balcon - Riobamba y Paraguay',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-frente-balcon-riobamba-y-51258386.html'}
2023-03-27 23:08:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-monoambiente-en-palermo-51378491.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-monoambiente-en-palermo-51378491.html>
{'ambientes': '1',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Jeronimo Salguero al 1600',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Alquiler Departamento Monoambiente en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-monoambiente-en-palermo-51378491.html'}
2023-03-27 23:08:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-barrancas-51261395.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-barrancas-51261395.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Luis Maria Campos 1500- Belgrano',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_cub': '160',
 'm2_total': '168',
 'moneda': 'USD',
 'title': 'Departamento - Belgrano Barrancas',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-barrancas-51261395.html'}
2023-03-27 23:08:27 [scrapy.extensions.logstats] INFO: Crawled 1080 pages (at 17 pages/min), scraped 1008 items (at 16 items/min)
2023-03-27 23:08:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-andalgala-al-1600-51388434.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-andalgala-al-1600-51388434.html>
{'ambientes': '2',
 'barrio': ', Mataderos, Capital Federal',
 'direccion': 'ANDALGALA 1600. Entre Pizarro y Zelada',
 'dormitorios': '1',
 'expensas': ' 3.000',
 'm2_cub': '45',
 'm2_total': '87',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes. | Andalgala Al 1600',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-andalgala-al-1600-51388434.html'}
2023-03-27 23:08:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-con-cochera-liniers.-51296420.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-con-cochera-liniers.-51296420.html>
{'ambientes': '4',
 'barrio': ', Liniers, Capital Federal',
 'direccion': 'Av. Lisandro de la Torre 1563',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_cub': '100',
 'm2_total': '100',
 'moneda': '$',
 'title': 'Depto 4 Ambientes con Cochera - Liniers.',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-con-cochera-liniers.-51296420.html'}
2023-03-27 23:08:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-de-3-dorm.-con-terraza-y-pileta-propia-en-51318458.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-de-3-dorm.-con-terraza-y-pileta-propia-en-51318458.html>
{'ambientes': '5',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor al 500',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '305',
 'm2_total': '380',
 'moneda': 'USD',
 'title': 'Semipiso de 3 Dorm. con Terraza y Pileta Propia en Alvear Tower',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-de-3-dorm.-con-terraza-y-pileta-propia-en-51318458.html'}
2023-03-27 23:08:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-ambientes-frente-balcon-luminoso-bano-y-toilette-51353527.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-ambientes-frente-balcon-luminoso-bano-y-toilette-51353527.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'HIDALGO 800',
 'dormitorios': '3',
 'expensas': ' 13.000',
 'm2_cub': '95',
 'moneda': '$',
 'title': '4 Ambientes Frente Balcon Luminoso Baño y Toilette Impecable '
          'Hidalgo 835',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-ambientes-frente-balcon-luminoso-bano-y-toilette-51353527.html'}
2023-03-27 23:08:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-chico-51186668.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-chico-51186668.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Olazabal al 900',
 'dormitorios': '2',
 'expensas': 0,
 'm2_total': '115',
 'moneda': 'USD',
 'title': 'Departamento - Belgrano Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-chico-51186668.html'}
2023-03-27 23:08:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-mono-ambiente-al-frente-con-balcon-y-51313151.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-mono-ambiente-al-frente-con-balcon-y-51313151.html>
{'ambientes': '1',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Yerbal al 2400',
 'expensas': ' 15.000',
 'm2_cub': '30',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Alquiler - Mono - Ambiente Al Frente con Balcón y Patio - Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-mono-ambiente-al-frente-con-balcon-y-51313151.html'}
2023-03-27 23:08:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/belgrano.-mendoza-3100-amoblado-51139309.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/belgrano.-mendoza-3100-amoblado-51139309.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Mendoza ',
 'expensas': 0,
 'm2_cub': '36',
 'm2_total': '36',
 'moneda': '$',
 'title': 'Belgrano. Mendoza 3100 Amoblado',
 'url': 'https://www.zonaprop.com.ar/propiedades/belgrano.-mendoza-3100-amoblado-51139309.html'}
2023-03-27 23:08:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-alto-palermo-park-pisos-de-1-a-3-dorm.-mas-51217480.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-alto-palermo-park-pisos-de-1-a-3-dorm.-mas-51217480.html>
{'ambientes': '2',
 'barrio': ', Palermo Viejo, Palermo',
 'direccion': 'Juncal 3200',
 'dormitorios': '1',
 'expensas': ' 49.000',
 'm2_cub': '130',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Torre Alto Palermo Park - Pisos de 1 a 3 Dorm. Mas Dependencia',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-alto-palermo-park-pisos-de-1-a-3-dorm.-mas-51217480.html'}
2023-03-27 23:08:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-3-ambientes-en-venta-nunez-correa-2300-51350807.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:08:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:08:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-3-ambientes-en-venta-nunez-correa-2300-51350807.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Correa al 2300',
 'dormitorios': '2',
 'expensas': ' 6.000',
 'm2_cub': '70',
 'm2_total': '110',
 'moneda': 'USD',
 'title': 'PH 3 Ambientes en Venta - Nuñez - Correa 2300',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-3-ambientes-en-venta-nunez-correa-2300-51350807.html'}
2023-03-27 23:09:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51365602.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51365602.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Vidt al 1900',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Departamento - Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51365602.html'}
2023-03-27 23:09:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-73.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51367215.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51367215.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Av. Boedo 1900. Entre Av. chiclana y Metán',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '37',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51367215.html'}
2023-03-27 23:09:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-en-colegiales-51160016.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-en-colegiales-51160016.html>
{'ambientes': '5',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Zapata 500',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '125',
 'm2_total': '134',
 'moneda': 'USD',
 'title': 'Departamento 4 Ambientes en Colegiales',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-en-colegiales-51160016.html'}
2023-03-27 23:09:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-callao1200-gran-lc-vista-panor-2dorm-amuebl-51385715.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-callao1200-gran-lc-vista-panor-2dorm-amuebl-51385715.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'callao ',
 'dormitorios': '2',
 'expensas': ' 32.000',
 'm2_cub': '90',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Av Callao1200 Gran Lc Vista Panor 2dorm Amuebl - Equipado 2baños '
          'Dep Nuevo Rta Vig',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-callao1200-gran-lc-vista-panor-2dorm-amuebl-51385715.html'}
2023-03-27 23:09:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-palermo-51178685.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-palermo-51178685.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Charcas y Borges',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes Alquiler Temporal en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-palermo-51178685.html'}
2023-03-27 23:09:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-de-tres-dorm.-de-gran-categoria-en-alquiler-51242904.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-de-tres-dorm.-de-gran-categoria-en-alquiler-51242904.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Libertad al 1000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '197',
 'm2_total': '197',
 'moneda': 'USD',
 'title': 'Piso de Tres Dorm. de Gran Categoría en Alquiler - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-de-tres-dorm.-de-gran-categoria-en-alquiler-51242904.html'}
2023-03-27 23:09:27 [scrapy.extensions.logstats] INFO: Crawled 1096 pages (at 16 pages/min), scraped 1023 items (at 15 items/min)
2023-03-27 23:09:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-amb-con-toilette-balcon-y-cochera-51368353.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-amb-con-toilette-balcon-y-cochera-51368353.html>
{'ambientes': '2',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Alv.Jonte 3599',
 'dormitorios': '1',
 'expensas': ' 22.000',
 'm2_cub': '56',
 'm2_total': '56',
 'moneda': '$',
 'title': 'Departamento 2 Amb con Toilette, Balcón y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-amb-con-toilette-balcon-y-cochera-51368353.html'}
2023-03-27 23:09:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-en-oceana-puerto-51379149.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-en-oceana-puerto-51379149.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1400',
 'dormitorios': '2',
 'expensas': ' 140.000',
 'm2_cub': '137',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes con Cochera en Oceana Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-en-oceana-puerto-51379149.html'}
2023-03-27 23:09:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-villa-crespo-alquiler-51340254.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-villa-crespo-alquiler-51340254.html>
{'ambientes': '1',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'SERRANO 110',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '32',
 'm2_total': '32',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente en Villa Crespo Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-villa-crespo-alquiler-51340254.html'}
2023-03-27 23:09:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-fraga-777-51352588.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-fraga-777-51352588.html>
{'ambientes': '2',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'FRAGA 777. Entre Av. federico lacroze y Garcia, teodoro',
 'dormitorios': '1',
 'expensas': ' 13.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes. | Fraga 777',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-fraga-777-51352588.html'}
2023-03-27 23:09:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-quesada-al-2300-51315848.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-quesada-al-2300-51315848.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'QUESADA 2300. Entre Vuelta de obligado y Av cabildo',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '110',
 'm2_total': '120',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes. | Quesada Al 2300',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-quesada-al-2300-51315848.html'}
2023-03-27 23:09:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3amb-con-balcon-lateral-luminoso-bajas-expensas-51380577.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3amb-con-balcon-lateral-luminoso-bajas-expensas-51380577.html>
{'ambientes': '3',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Asamblea ',
 'dormitorios': '2',
 'expensas': ' 18.000',
 'm2_cub': '45',
 'm2_total': '50',
 'moneda': '$',
 'title': '3amb con Balcón Lateral - Luminoso - Bajas Expensas - Asamblea '
          'Esquina Faraday',
 'url': 'https://www.zonaprop.com.ar/propiedades/3amb-con-balcon-lateral-luminoso-bajas-expensas-51380577.html'}
2023-03-27 23:09:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-dpto-de-2-amb-con-balcon-corrido-51209630.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-dpto-de-2-amb-con-balcon-corrido-51209630.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'AV. CONGRESO 4900',
 'dormitorios': '1',
 'expensas': ' 16.000',
 'm2_cub': '46',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Excelente Dpto de 2 Amb con Balcón Corrido',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-dpto-de-2-amb-con-balcon-corrido-51209630.html'}
2023-03-27 23:09:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-en-la-mejor-zona-de-belgrano-dos-cocheras-para-51385664.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-en-la-mejor-zona-de-belgrano-dos-cocheras-para-51385664.html>
{'ambientes': '4',
 'barrio': ', Belgrano Chico, Belgrano',
 'direccion': 'virrey arredondo 2260 6to piso',
 'dormitorios': '3',
 'expensas': ' 47.000',
 'm2_cub': '125',
 'm2_total': '146',
 'moneda': 'USD',
 'title': 'Piso en La Mejor Zona de Belgrano Dos Cocheras Para Exigentes 11 - '
          '5',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-en-la-mejor-zona-de-belgrano-dos-cocheras-para-51385664.html'}
2023-03-27 23:09:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palermo-depto.-3-amb.-63-m-sup2--cub-383-m-sup2-51324378.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:09:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palermo-depto.-3-amb.-63-m-sup2--cub-383-m-sup2-51324378.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Malabia 2300, Palermo, Capital Federal, Argentina.',
 'dormitorios': '2',
 'expensas': ' 18.000',
 'm2_cub': '63',
 'm2_total': '383',
 'moneda': '$',
 'title': 'Palermo, Depto. 3 Amb. 63 m² Cub + 383 m² Semicub, Malabia y Guemes',
 'url': 'https://www.zonaprop.com.ar/propiedades/palermo-depto.-3-amb.-63-m-sup2--cub-383-m-sup2-51324378.html'}
2023-03-27 23:09:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exc-2-amb-en-alquiler-torre-premiun-c-amenit-seg-51149114.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:09:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exc-2-amb-en-alquiler-torre-premiun-c-amenit-seg-51149114.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Gallo al 955',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '41',
 'm2_total': '43',
 'moneda': 'USD',
 'title': 'Exc 2 Amb en Alquiler Torre Premiun C Amenit Seg Uridad Temporario '
          'Uss 730',
 'url': 'https://www.zonaprop.com.ar/propiedades/exc-2-amb-en-alquiler-torre-premiun-c-amenit-seg-51149114.html'}
2023-03-27 23:10:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-congreso-avda.-al-4900-51338658.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-congreso-avda.-al-4900-51338658.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'CONGRESO, AVDA. 4900. Entre Diaz colodrero',
 'dormitorios': '1',
 'expensas': ' 13.900',
 'm2_cub': '48',
 'm2_total': '53',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes. | Congreso, Avda. Al 4900',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-congreso-avda.-al-4900-51338658.html'}
2023-03-27 23:10:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-74.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-belgrano-alquiler-temporal-51246434.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-belgrano-alquiler-temporal-51246434.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cuba 2800',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes en Belgrano Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-belgrano-alquiler-temporal-51246434.html'}
2023-03-27 23:10:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-en-complejo-los-naranjos-51381690.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-en-complejo-los-naranjos-51381690.html>
{'ambientes': '3',
 'barrio': ', Villa Santa Rita, Capital Federal',
 'direccion': 'Remedios Escalada de San Martín 2745',
 'dormitorios': '2',
 'expensas': ' 17.000',
 'm2_cub': '53',
 'm2_total': '58',
 'moneda': '$',
 'title': '3 Ambientes en Complejo "Los Naranjos"',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-en-complejo-los-naranjos-51381690.html'}
2023-03-27 23:10:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-flores.-51296514.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-flores.-51296514.html>
{'ambientes': '2',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Av. San Pedrito 700',
 'dormitorios': '1',
 'expensas': ' 5.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes en Flores.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-flores.-51296514.html'}
2023-03-27 23:10:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-c-dependencia-alquiler-51363441.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-c-dependencia-alquiler-51363441.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Talcahuano 900 ',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes C/ Dependencia Alquiler Temporal en '
          'Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-c-dependencia-alquiler-51363441.html'}
2023-03-27 23:10:27 [scrapy.extensions.logstats] INFO: Crawled 1112 pages (at 16 pages/min), scraped 1038 items (at 15 items/min)
2023-03-27 23:10:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/balcon-corrido-al-frente-51284992.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/balcon-corrido-al-frente-51284992.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Beruti y Agüero',
 'dormitorios': '3',
 'expensas': ' 52.000',
 'm2_cub': '82',
 'm2_total': '90',
 'moneda': '$',
 'title': 'Balcón Corrido Al Frente',
 'url': 'https://www.zonaprop.com.ar/propiedades/balcon-corrido-al-frente-51284992.html'}
2023-03-27 23:10:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-palermo-capital-federal-51360440.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-palermo-capital-federal-51360440.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Segui 4600',
 'dormitorios': '2',
 'expensas': ' 35.000',
 'm2_cub': '73',
 'm2_total': '75',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Palermo, Capital Federal, Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-palermo-capital-federal-51360440.html'}
2023-03-27 23:10:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/caballito.-2-amb.-con-pileta-sum-y-vigilancia.-51248862.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/caballito.-2-amb.-con-pileta-sum-y-vigilancia.-51248862.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Juan Bautista Alberdi 500',
 'dormitorios': '1',
 'expensas': 0,
 'm2_total': '35',
 'moneda': '$',
 'title': 'Caballito. 2 Amb. con Pileta, Sum y Vigilancia. Incluye Expensas y '
          'Aysa!',
 'url': 'https://www.zonaprop.com.ar/propiedades/caballito.-2-amb.-con-pileta-sum-y-vigilancia.-51248862.html'}
2023-03-27 23:10:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-en-villa-51302601.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-en-villa-51302601.html>
{'ambientes': '3',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Mendoza 5600',
 'dormitorios': '2',
 'expensas': ' 33.000',
 'm2_cub': '81',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes Alquiler Temporal en Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-en-villa-51302601.html'}
2023-03-27 23:10:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-san-telmo-alquiler-51178786.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-san-telmo-alquiler-51178786.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Bolivar 1700',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente en San Telmo Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-san-telmo-alquiler-51178786.html'}
2023-03-27 23:10:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-con-balcon-aterrazado-dormitorio-con-51371911.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-con-balcon-aterrazado-dormitorio-con-51371911.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'VUELTA DE OBLIGADO 2500',
 'dormitorios': '1',
 'expensas': ' 9.100',
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Semipiso con Balcón Aterrazado + Dormitorio con Segundo Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-con-balcon-aterrazado-dormitorio-con-51371911.html'}
2023-03-27 23:10:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51319352.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51319352.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Echeverria al 2700',
 'expensas': ' 11.000',
 'm2_cub': '27',
 'm2_total': '27',
 'moneda': '$',
 'title': 'Departamento en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51319352.html'}
2023-03-27 23:10:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-departamento-en-esquina-100-luz-51313410.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-departamento-en-esquina-100-luz-51313410.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Vuelta de Obligado al 1200',
 'dormitorios': '2',
 'expensas': ' 33.000',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Alquiler 3 Amb Departamento en Esquina 100% Luz Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-departamento-en-esquina-100-luz-51313410.html'}
2023-03-27 23:10:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-ambientes-con-hermosa-vista-51251740.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:10:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:10:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-ambientes-con-hermosa-vista-51251740.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'DEMARÍA',
 'dormitorios': '3',
 'expensas': ' 50.000',
 'm2_cub': '115',
 'm2_total': '120',
 'moneda': 'USD',
 'title': '4 Ambientes con Hermosa Vista',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-ambientes-con-hermosa-vista-51251740.html'}
2023-03-27 23:11:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-almagro-51363389.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-almagro-51363389.html>
{'ambientes': '3',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Peron 4189',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '53',
 'm2_total': '53',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes Alquiler Temporal Almagro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-almagro-51363389.html'}
2023-03-27 23:11:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/avellaneda-2900-5-ambientes-dependencia-51352779.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/avellaneda-2900-5-ambientes-dependencia-51352779.html>
{'ambientes': '5',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'AVELLANEDA ',
 'dormitorios': '4',
 'expensas': ' 60.000',
 'm2_cub': '155',
 'm2_total': '155',
 'moneda': '$',
 'title': 'Avellaneda 2900 - 5 Ambientes + Dependencia',
 'url': 'https://www.zonaprop.com.ar/propiedades/avellaneda-2900-5-ambientes-dependencia-51352779.html'}
2023-03-27 23:11:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/colegiales-1-amb.-fte-c-balcon-y-cochera-51177538.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/colegiales-1-amb.-fte-c-balcon-y-cochera-51177538.html>
{'ambientes': '1',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'CONESA ',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '30',
 'm2_total': '33',
 'moneda': 'USD',
 'title': 'Colegiales 1 Amb. Fte C/balcon y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/colegiales-1-amb.-fte-c-balcon-y-cochera-51177538.html'}
2023-03-27 23:11:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-75.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-2-ambientes-inmejorable-51231838.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-2-ambientes-inmejorable-51231838.html>
{'ambientes': '2',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'AV. RIVADAVIA 8500',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '1',
 'm2_total': '34',
 'moneda': '$',
 'title': 'Excelente Departamento de 2 Ambientes Inmejorable Ubicación',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-2-ambientes-inmejorable-51231838.html'}
2023-03-27 23:11:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/valle-300-caballito-3amb-u$1.400-x-mes-c-coch-y-51298166.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/valle-300-caballito-3amb-u$1.400-x-mes-c-coch-y-51298166.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Valle 300. Entre Viel y Beauchef',
 'dormitorios': '2',
 'expensas': ' 43.000',
 'm2_cub': '76',
 'm2_total': '158',
 'moneda': 'USD',
 'title': 'Valle 300 Caballito 3amb U$1.400 X Mes C/coch y Jacuzzi',
 'url': 'https://www.zonaprop.com.ar/propiedades/valle-300-caballito-3amb-u$1.400-x-mes-c-coch-y-51298166.html'}
2023-03-27 23:11:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-nunez-2-ambientes-torre-con-51349611.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-nunez-2-ambientes-torre-con-51349611.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Pico al 2400',
 'dormitorios': '1',
 'expensas': ' 27.000',
 'm2_cub': '42',
 'm2_total': '48',
 'moneda': 'USD',
 'title': 'Alquiler Temporario Nunez 2 Ambientes Torre con Amenities Cochera.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-nunez-2-ambientes-torre-con-51349611.html'}
2023-03-27 23:11:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/paraguay-3900-3-amb-fte-con-balcon!-2do-por-esc-51353099.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/paraguay-3900-3-amb-fte-con-balcon!-2do-por-esc-51353099.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'paraguay 3965',
 'dormitorios': '2',
 'expensas': ' 10.000',
 'm2_cub': '60',
 'm2_total': '63',
 'moneda': '$',
 'title': 'Paraguay 3900 - 3 Amb - Fte con Balcon! - 2do por Esc',
 'url': 'https://www.zonaprop.com.ar/propiedades/paraguay-3900-3-amb-fte-con-balcon!-2do-por-esc-51353099.html'}
2023-03-27 23:11:27 [scrapy.extensions.logstats] INFO: Crawled 1129 pages (at 17 pages/min), scraped 1054 items (at 16 items/min)
2023-03-27 23:11:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-sal-telmo-alquiler-51178674.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-sal-telmo-alquiler-51178674.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Bernardo de Irigoyen 1400',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente en Sal Telmo Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-sal-telmo-alquiler-51178674.html'}
2023-03-27 23:11:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-callao1200-gran-lc-vista-panor-2dorm-amuebl-51368612.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-callao1200-gran-lc-vista-panor-2dorm-amuebl-51368612.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'AV CALLAO ',
 'dormitorios': '2',
 'expensas': ' 32.000',
 'm2_cub': '90',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Av Callao1200 Gran Lc Vista Panor 2dorm Amuebl - Equipado 2baños '
          'Dep Nuevo Rta Vig',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-callao1200-gran-lc-vista-panor-2dorm-amuebl-51368612.html'}
2023-03-27 23:11:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exclusivo-departamento-alquiler-temporal-villa-urquiza-51178410.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exclusivo-departamento-alquiler-temporal-villa-urquiza-51178410.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Mendoza 5600',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '120',
 'm2_total': '160',
 'moneda': 'USD',
 'title': 'Exclusivo Departamento Alquiler Temporal Villa Urquiza 4 Ambientes '
          'Premium',
 'url': 'https://www.zonaprop.com.ar/propiedades/exclusivo-departamento-alquiler-temporal-villa-urquiza-51178410.html'}
2023-03-27 23:11:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-2-ambientes-super-luminoso-51299341.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-2-ambientes-super-luminoso-51299341.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Coronel Díaz al 1900 Disponible a Partir del 10 de Marzo 2023',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_cub': '30',
 'm2_total': '32',
 'moneda': 'USD',
 'title': 'Departamento - Palermo 2 Ambientes Super Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-2-ambientes-super-luminoso-51299341.html'}
2023-03-27 23:11:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-4-ambientes-frente-urquiza-51142919.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-4-ambientes-frente-urquiza-51142919.html>
{'ambientes': '4',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Monroe 4700',
 'dormitorios': '3',
 'expensas': ' 20.000',
 'm2_cub': '80',
 'm2_total': '92',
 'moneda': '$',
 'title': 'Alquiler Depto 4 Ambientes Frente, Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-4-ambientes-frente-urquiza-51142919.html'}
2023-03-27 23:11:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-51201026.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-51201026.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Libertad 1600',
 'dormitorios': '3',
 'expensas': ' 29.000',
 'm2_cub': '75',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Alquiler Departamento Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-51201026.html'}
2023-03-27 23:11:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51177925.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51177925.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Libertador al 5000',
 'dormitorios': '3',
 'expensas': ' 110.000',
 'm2_cub': '170',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Departamento - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51177925.html'}
2023-03-27 23:11:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/mansilla-2400-con-o-sin-muebles-reciclado-bajas-51353318.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:11:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:11:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/mansilla-2400-con-o-sin-muebles-reciclado-bajas-51353318.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Mansilla ',
 'dormitorios': '1',
 'expensas': ' 5.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Mansilla 2400 - con o Sin Muebles - Reciclado - Bajas Expensas - B. '
          'Norte - Caba',
 'url': 'https://www.zonaprop.com.ar/propiedades/mansilla-2400-con-o-sin-muebles-reciclado-bajas-51353318.html'}
2023-03-27 23:12:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/avellaneda-al-1700-1-amb-divisible-contrafrente-a-51151345.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/avellaneda-al-1700-1-amb-divisible-contrafrente-a-51151345.html>
{'barrio': ', Caballito, Capital Federal',
 'direccion': 'AVELLANEDA ',
 'expensas': ' 19.000',
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Avellaneda Al 1700 1 Amb Divisible Contrafrente a Estrenar '
          'Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/avellaneda-al-1700-1-amb-divisible-contrafrente-a-51151345.html'}
2023-03-27 23:12:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-excelente-departamento-con-impecable-vista.-51388293.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-excelente-departamento-con-impecable-vista.-51388293.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Juncal al 3200',
 'dormitorios': '2',
 'expensas': ' 60.000',
 'm2_cub': '112',
 'm2_total': '137',
 'moneda': 'USD',
 'title': 'Alquiler Excelente Departamento con Impecable Vista. Piso Alto, con '
          'Cochera y Baulera - Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-excelente-departamento-con-impecable-vista.-51388293.html'}
2023-03-27 23:12:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51303634.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51303634.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Migueletes 1000',
 'dormitorios': '4',
 'expensas': ' 50.000',
 'm2_cub': '106',
 'm2_total': '116',
 'moneda': '$',
 'title': 'Departamento en Alquiler en Belgrano, Capital Federal, Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-belgrano-capital-federal-51303634.html'}
2023-03-27 23:12:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exc-2-amb-ap-prof-fte-a-estrenar-premium-torre-be-51148283.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exc-2-amb-ap-prof-fte-a-estrenar-premium-torre-be-51148283.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Dorrego al 2500',
 'expensas': 0,
 'm2_cub': '53',
 'm2_total': '56',
 'moneda': 'USD',
 'title': 'Exc 2 Amb Ap Prof Fte a Estrenar Premium Torre Be Plaza. Consultar '
          'Opc 1 y 2 Amb',
 'url': 'https://www.zonaprop.com.ar/propiedades/exc-2-amb-ap-prof-fte-a-estrenar-premium-torre-be-51148283.html'}
2023-03-27 23:12:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-76.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-con-balcon-frances-51156164.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-con-balcon-frances-51156164.html>
{'ambientes': '2',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'Aranguren 4500 6°',
 'dormitorios': '1',
 'expensas': ' 11.000',
 'm2_cub': '40',
 'm2_total': '41',
 'moneda': '$',
 'title': 'Departamento de 2 Ambientes con Balcon Frances',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-con-balcon-frances-51156164.html'}
2023-03-27 23:12:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tres-ambientes-alquiler-cochera-51358898.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tres-ambientes-alquiler-cochera-51358898.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Migueletes al 800',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '110',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Tres Ambientes Alquiler Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/tres-ambientes-alquiler-cochera-51358898.html'}
2023-03-27 23:12:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51386958.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51386958.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Alquiler Temporal 4 Amb. Amoblado Sobre Arcos 1900 Y Sucre - '
              'Belgrano. Departamento de 4 Ambientes de 110m2. Excelente '
              'Ubicación, en la Cuadra de la Casa del Ángel.',
 'dormitorios': '3',
 'expensas': ' 11.000',
 'm2_cub': '110',
 'm2_total': '110',
 'moneda': 'USD',
 'title': 'Departamento - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51386958.html'}
2023-03-27 23:12:27 [scrapy.extensions.logstats] INFO: Crawled 1145 pages (at 16 pages/min), scraped 1069 items (at 15 items/min)
2023-03-27 23:12:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dueno-alquila-casa-4-ambientes-51217494.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dueno-alquila-casa-4-ambientes-51217494.html>
{'ambientes': '4',
 'barrio': ', Liniers, Capital Federal',
 'direccion': 'Tonelero ',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Dueño Alquila - Casa 4 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/dueno-alquila-casa-4-ambientes-51217494.html'}
2023-03-27 23:12:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-palermo-chico-capital-51271125.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-palermo-chico-capital-51271125.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'GODOY CRUZ 3000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '140',
 'm2_total': '145',
 'moneda': 'USD',
 'title': 'Departamento 3 Dor. C/dep - Palermo Chico, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-palermo-chico-capital-51271125.html'}
2023-03-27 23:12:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-constantini.-hermoso-departamento-de-2-ambientes-51213014.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-constantini.-hermoso-departamento-de-2-ambientes-51213014.html>
{'ambientes': '2',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Fray Justo Santamaria de oro al 2800 Torre Constantini',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Torre Constantini. Hermoso Departamento de 2 Ambientes con Cochera. '
          'Gran Categoría. Inmejorables Ame',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-constantini.-hermoso-departamento-de-2-ambientes-51213014.html'}
2023-03-27 23:12:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/balvanera-4-ambientes-luminoso-apto-profesionales-51348791.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/balvanera-4-ambientes-luminoso-apto-profesionales-51348791.html>
{'ambientes': '4',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Av. Rivadavia al 2100',
 'dormitorios': '3',
 'expensas': ' 23.000',
 'm2_cub': '87',
 'm2_total': '91',
 'moneda': '$',
 'title': 'Balvanera 4 Ambientes Luminoso Apto Profesionales Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/balvanera-4-ambientes-luminoso-apto-profesionales-51348791.html'}
2023-03-27 23:12:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/en-alquiler!-depto-2-amb-interno-zona-once-barrio-51184989.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/en-alquiler!-depto-2-amb-interno-zona-once-barrio-51184989.html>
{'ambientes': '2',
 'barrio': ', Once, Capital Federal',
 'direccion': 'Pueyrredon al 800',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': '$',
 'title': 'En Alquiler! Depto 2 Amb Interno Zona Once/barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/en-alquiler!-depto-2-amb-interno-zona-once-barrio-51184989.html'}
2023-03-27 23:12:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alvear-icon.-exclusiva-residencia.-vista-y-51312005.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alvear-icon.-exclusiva-residencia.-vista-y-51312005.html>
{'ambientes': '1',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Aime Paine al 1100',
 'dormitorios': '1',
 'expensas': ' 55.000',
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Alvear Icon. Exclusiva Residencia. Vista y Equipamiento '
          'Insuperable. Ideal Altos Ejecutivos y Embaja',
 'url': 'https://www.zonaprop.com.ar/propiedades/alvear-icon.-exclusiva-residencia.-vista-y-51312005.html'}
2023-03-27 23:12:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/chacarita:-2-amb-c-patio-p-h-solo-uso-comercial!-51280366.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/chacarita:-2-amb-c-patio-p-h-solo-uso-comercial!-51280366.html>
{'ambientes': '2',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'AV. Triunvirato 2954',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '48',
 'm2_total': '68',
 'moneda': '$',
 'title': 'Chacarita: 2 Amb C/patio P - H Solo Uso Comercial! Triunvirato 2954',
 'url': 'https://www.zonaprop.com.ar/propiedades/chacarita:-2-amb-c-patio-p-h-solo-uso-comercial!-51280366.html'}
2023-03-27 23:12:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-caballito-2-ambientes-planta-baja-con-51264781.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-caballito-2-ambientes-planta-baja-con-51264781.html>
{'ambientes': '2',
 'barrio': ', Caballito Sur, Caballito',
 'direccion': 'luis maria Drago 131',
 'dormitorios': '1',
 'expensas': ' 10.339',
 'm2_cub': '30',
 'm2_total': '34',
 'moneda': '$',
 'title': 'Alquiler - Caballito - 2 Ambientes Planta Baja con Patio',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-caballito-2-ambientes-planta-baja-con-51264781.html'}
2023-03-27 23:12:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-4-ambientes-51365577.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:12:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:12:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-4-ambientes-51365577.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Departamento en Palermo, 4 Ambientes al Frente c/ Balcón Sobre '
              'Av. Santa Fe 3600',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '109',
 'm2_total': '109',
 'moneda': 'USD',
 'title': 'Departamento - Palermo - 4 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-4-ambientes-51365577.html'}
2023-03-27 23:13:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/oficina-en-palermo-51340483.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/oficina-en-palermo-51340483.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Scalabrini Ortiz al 2300',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Oficina en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/oficina-en-palermo-51340483.html'}
2023-03-27 23:13:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-en-alquiler-en-barrio-51362195.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-en-alquiler-en-barrio-51362195.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'LAPRIDA 1000',
 'dormitorios': '2',
 'expensas': ' 23.000',
 'm2_cub': '65',
 'm2_total': '72',
 'moneda': '$',
 'title': 'Departamento de 3 Ambientes en Alquiler en Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-3-ambientes-en-alquiler-en-barrio-51362195.html'}
2023-03-27 23:13:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-amueblado-3-ambientes-en-barracas-51387781.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-amueblado-3-ambientes-en-barracas-51387781.html>
{'ambientes': '3',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Azara 100',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '65',
 'm2_total': '74',
 'moneda': '$',
 'title': 'Alquiler Amueblado 3 Ambientes en Barracas',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-amueblado-3-ambientes-en-barracas-51387781.html'}
2023-03-27 23:13:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-con-entrada-independiente-sin-expensas-51234566.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-con-entrada-independiente-sin-expensas-51234566.html>
{'ambientes': '3',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Zañartu al 1200',
 'dormitorios': '2',
 'expensas': 0,
 'moneda': '$',
 'title': 'PH con Entrada Independiente Sin Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-con-entrada-independiente-sin-expensas-51234566.html'}
2023-03-27 23:13:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-77.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-180-m-sup2--3-51368044.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-180-m-sup2--3-51368044.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Parera al 100',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '180',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Alquiler - Departamento - Recoleta - 180 m² - 3 Dorm. - 1 Cochera - '
          '1 Dependencia',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-180-m-sup2--3-51368044.html'}
2023-03-27 23:13:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-balvanera-51322604.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-balvanera-51322604.html>
{'ambientes': '4',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'La Rioja al 400',
 'dormitorios': '3',
 'expensas': ' 20.000',
 'm2_cub': '74',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Departamento en Balvanera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-balvanera-51322604.html'}
2023-03-27 23:13:27 [scrapy.extensions.logstats] INFO: Crawled 1161 pages (at 16 pages/min), scraped 1084 items (at 15 items/min)
2023-03-27 23:13:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51308381.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51308381.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Laprida al 1200',
 'expensas': ' 15.000',
 'm2_cub': '23',
 'm2_total': '23',
 'moneda': '$',
 'title': 'Departamento en Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51308381.html'}
2023-03-27 23:13:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exc-2-amb-ap-prof-fte-a-estrenar-premium-torre-be-51246117.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exc-2-amb-ap-prof-fte-a-estrenar-premium-torre-be-51246117.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Dorrego al 2500 Esquina Santa FE Vista A Dorrego',
 'expensas': 0,
 'm2_cub': '53',
 'm2_total': '56',
 'moneda': 'USD',
 'title': 'Exc 2 Amb Ap Prof Fte a Estrenar Premium Torre Be Plaza. Consultar '
          'Opc 1 y 2 Amb',
 'url': 'https://www.zonaprop.com.ar/propiedades/exc-2-amb-ap-prof-fte-a-estrenar-premium-torre-be-51246117.html'}
2023-03-27 23:13:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-alquiler-temporal-puerto-51375987.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-alquiler-temporal-puerto-51375987.html>
{'ambientes': '5',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Victoria Ocampo 305',
 'dormitorios': '4',
 'expensas': ' 1',
 'm2_cub': '193',
 'm2_total': '193',
 'moneda': 'USD',
 'title': 'Departamento 5 Ambientes Alquiler Temporal Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-alquiler-temporal-puerto-51375987.html'}
2023-03-27 23:13:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-belgrano-4-amb-dep-doble-cochera-51135982.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-belgrano-4-amb-dep-doble-cochera-51135982.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey del Pino 1700',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '220',
 'm2_total': '220',
 'moneda': 'USD',
 'title': 'Alquiler Belgrano 4 Amb + Dep + Doble Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-belgrano-4-amb-dep-doble-cochera-51135982.html'}
2023-03-27 23:13:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-a-estrenar-oportunidad-3-amb-c-coch-fija-51321063.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-a-estrenar-oportunidad-3-amb-c-coch-fija-51321063.html>
{'ambientes': '3',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Nahuel Huapi al 4900',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '75',
 'm2_total': '88',
 'moneda': '$',
 'title': 'Alquiler a Estrenar - Oportunidad - 3 Amb C/coch Fija - '
          'Piscina/sum/parrilla',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-a-estrenar-oportunidad-3-amb-c-coch-fija-51321063.html'}
2023-03-27 23:13:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-amb-amplio-balcon-c-parrilla-amenities-51347646.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-amb-amplio-balcon-c-parrilla-amenities-51347646.html>
{'ambientes': '1',
 'barrio': ', Constitución, Capital Federal',
 'direccion': 'CALVO, CARLOS 1550. Entre Cevallos, virrey y Pte. saenz peña',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '33',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Alquiler Amb Amplio Balcon C/parrilla Amenities Constitucion',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-amb-amplio-balcon-c-parrilla-amenities-51347646.html'}
2023-03-27 23:13:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/estupendo-semipiso-con-dependencia-recoleta-.-51295722.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/estupendo-semipiso-con-dependencia-recoleta-.-51295722.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'JOSE E.URIBURU 1300',
 'dormitorios': '2',
 'expensas': ' 28.000',
 'm2_cub': '106',
 'm2_total': '111',
 'moneda': 'USD',
 'title': 'Estupendo Semipiso con Dependencia (Recoleta).',
 'url': 'https://www.zonaprop.com.ar/propiedades/estupendo-semipiso-con-dependencia-recoleta-.-51295722.html'}
2023-03-27 23:13:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-ph-4-ambientes-c-cochera-villa-lugano-51240243.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-ph-4-ambientes-c-cochera-villa-lugano-51240243.html>
{'ambientes': '4',
 'barrio': ', Villa Lugano, Capital Federal',
 'direccion': 'Cosquin 4900, Villa Lugano, Capital Federal, Argentina.',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '129',
 'm2_total': '180',
 'moneda': '$',
 'title': 'Alquiler PH 4 Ambientes C/ Cochera, Villa Lugano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-ph-4-ambientes-c-cochera-villa-lugano-51240243.html'}
2023-03-27 23:13:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-ambientes-en-alquiler-en-caba-51360681.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:13:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:13:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-ambientes-en-alquiler-en-caba-51360681.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av. Cabildo 3000',
 'dormitorios': '3',
 'expensas': ' 44.000',
 'm2_cub': '89',
 'm2_total': '95',
 'moneda': '$',
 'title': '4 Ambientes en Alquiler en Caba',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-ambientes-en-alquiler-en-caba-51360681.html'}
2023-03-27 23:14:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquila-un-hermoso-3-amb.-a-estrenar-c-amenities-y-51366512.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquila-un-hermoso-3-amb.-a-estrenar-c-amenities-y-51366512.html>
{'ambientes': '3',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Jorge Newbery 3900 10°',
 'dormitorios': '2',
 'expensas': ' 26.000',
 'm2_cub': '78',
 'm2_total': '88',
 'moneda': 'USD',
 'title': 'Alquila un Hermoso 3 Amb. a Estrenar C/ Amenities y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquila-un-hermoso-3-amb.-a-estrenar-c-amenities-y-51366512.html'}
2023-03-27 23:14:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes.-mario-bravo-al-300-51261463.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes.-mario-bravo-al-300-51261463.html>
{'ambientes': '5',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'MARIO BRAVO 300',
 'dormitorios': '4',
 'expensas': ' 30.000',
 'm2_cub': '151',
 'm2_total': '199',
 'moneda': 'USD',
 'title': 'Departamento 5 Ambientes. | Mario Bravo Al 300',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes.-mario-bravo-al-300-51261463.html'}
2023-03-27 23:14:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-recoleta-con-balcon-al-51388001.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-recoleta-con-balcon-al-51388001.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Laprida 1088',
 'dormitorios': '2',
 'expensas': ' 16.000',
 'm2_cub': '50',
 'm2_total': '52',
 'moneda': '$',
 'title': 'Excelente 3 Ambientes en Recoleta con Balcón Al Contrafrente',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-3-ambientes-en-recoleta-con-balcon-al-51388001.html'}
2023-03-27 23:14:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recoleta-alquiler-temporario.-luminoso-2-ambientes-51230555.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recoleta-alquiler-temporario.-luminoso-2-ambientes-51230555.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Posadas al 1100',
 'dormitorios': '1',
 'expensas': 0,
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Recoleta - Alquiler Temporario. Luminoso 2 Ambientes Francés',
 'url': 'https://www.zonaprop.com.ar/propiedades/recoleta-alquiler-temporario.-luminoso-2-ambientes-51230555.html'}
2023-03-27 23:14:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-2-ambientes-en-palermo-cerca-avda-51213280.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-2-ambientes-en-palermo-cerca-avda-51213280.html>
{'ambientes': '2',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Jorge Luis Borges 2200',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '37',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Alquiler Amoblado 2 Ambientes en Palermo Cerca Avda Santa Fe',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-2-ambientes-en-palermo-cerca-avda-51213280.html'}
2023-03-27 23:14:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-78.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-amb-semipiso-ph-1er-piso-con-patio-51234363.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-amb-semipiso-ph-1er-piso-con-patio-51234363.html>
{'ambientes': '2',
 'barrio': ', Monte Castro, Capital Federal',
 'direccion': 'Elpidio Gonzalez ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '60',
 'moneda': '$',
 'title': '2 Amb Semipiso PH 1er Piso con Patio',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-amb-semipiso-ph-1er-piso-con-patio-51234363.html'}
2023-03-27 23:14:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-palermo-hollywood-capital-51143231.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-palermo-hollywood-capital-51143231.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'SOLER 5500',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '55',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes - Palermo Hollywood, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-palermo-hollywood-capital-51143231.html'}
2023-03-27 23:14:27 [scrapy.extensions.logstats] INFO: Crawled 1178 pages (at 17 pages/min), scraped 1100 items (at 16 items/min)
2023-03-27 23:14:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/forest-600-departamento-2-ambientes-a-estrenar-51280952.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/forest-600-departamento-2-ambientes-a-estrenar-51280952.html>
{'ambientes': '2',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'Forest al 600',
 'dormitorios': '1',
 'expensas': ' 9.000',
 'm2_cub': '35',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Forest 600, Departamento 2 Ambientes a Estrenar C/balcón Corrido Al '
          'Frente, Chacarita',
 'url': 'https://www.zonaprop.com.ar/propiedades/forest-600-departamento-2-ambientes-a-estrenar-51280952.html'}
2023-03-27 23:14:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-6-ambientes-puerto-madero-alquiler-51179106.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-6-ambientes-puerto-madero-alquiler-51179106.html>
{'ambientes': '6',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Petrona Eyle 355',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '300',
 'm2_total': '300',
 'moneda': 'USD',
 'title': 'Departamento 6 Ambientes Puerto Madero Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-6-ambientes-puerto-madero-alquiler-51179106.html'}
2023-03-27 23:14:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-puerto-madero-51242396.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-puerto-madero-51242396.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor 400',
 'dormitorios': '2',
 'expensas': 0,
 'm2_total': '135',
 'moneda': 'USD',
 'title': 'Departamento Piso en Alquiler en Puerto Madero, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-en-puerto-madero-51242396.html'}
2023-03-27 23:14:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-villa-devoto-51163063.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-villa-devoto-51163063.html>
{'ambientes': '4',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Griveo 3785 3°',
 'dormitorios': '3',
 'expensas': ' 16.000',
 'm2_cub': '73',
 'm2_total': '90',
 'moneda': '$',
 'title': 'Alquiler Departamento 4 Ambientes Villa Devoto',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-villa-devoto-51163063.html'}
2023-03-27 23:14:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-en-alquiler-en-san-cristobal-luminoso-51319089.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-en-alquiler-en-san-cristobal-luminoso-51319089.html>
{'ambientes': '3',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Carlos Calvo al 2100',
 'dormitorios': '2',
 'expensas': ' 13.100',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': '3 Ambientes en Alquiler en San Cristobal | Luminoso | Listo Para '
          'Habitar | Le Bleu',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-en-alquiler-en-san-cristobal-luminoso-51319089.html'}
2023-03-27 23:14:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/terrero-100-p5-monoambiente-c-bcon-fte.-baulera.-51307484.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/terrero-100-p5-monoambiente-c-bcon-fte.-baulera.-51307484.html>
{'ambientes': '1',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Terrero 100',
 'expensas': ' 20.843',
 'm2_cub': '34',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Terrero 100 P5 Monoambiente C/ Bcón Fte. Baulera. Laundry. Oe. Muy '
          'Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/terrero-100-p5-monoambiente-c-bcon-fte.-baulera.-51307484.html'}
2023-03-27 23:14:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3amb-67-m-sup2--nuevo!-a-m-av-garay!-bcon-fte!-lav-51241291.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3amb-67-m-sup2--nuevo!-a-m-av-garay!-bcon-fte!-lav-51241291.html>
{'ambientes': '3',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Sanchez de Loria al 1700',
 'dormitorios': '2',
 'expensas': ' 19.230',
 'm2_cub': '66',
 'm2_total': '66',
 'moneda': '$',
 'title': '3amb · 67 m² · Nuevo! a m Av Garay! Bcón Fte! Lav Ind! Cam! Vig '
          '24hs! Sum! M/lum!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3amb-67-m-sup2--nuevo!-a-m-av-garay!-bcon-fte!-lav-51241291.html'}
2023-03-27 23:14:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51256473.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:14:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51256473.html>
{'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Amplio Monoambiente o 2 amb Lof, con Cochera Alquiler Temporal '
              'Amoblado y Equipado con Detalles de Categoría, Amenities con '
              'Segurdidad 24hs. Sobre Peña y Av. Pueyrredon',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51256473.html'}
2023-03-27 23:14:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-flores-51358608.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:14:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-flores-51358608.html>
{'ambientes': '2',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Granaderos 400 6°',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Departamento - Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-flores-51358608.html'}
2023-03-27 23:15:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-c-dep-bau-2-banos-cocina-lavadero-51212127.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-c-dep-bau-2-banos-cocina-lavadero-51212127.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'ZABALA 2250. Entre Vuelta de obligado y Arcos',
 'dormitorios': '2',
 'expensas': ' 29.000',
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Alquiler 3 Amb C/dep Bau 2 Baños Cocina Lavadero Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-c-dep-bau-2-banos-cocina-lavadero-51212127.html'}
2023-03-27 23:15:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/se-alquila-depto-2-amb-en-av-independencia-al-3200-al-51203015.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/se-alquila-depto-2-amb-en-av-independencia-al-3200-al-51203015.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Independencia 3200',
 'dormitorios': '1',
 'expensas': ' 16.763',
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Se Alquila Depto 2 Amb en Av Independencia Al 3200 Al Frente '
          'C/balcón.',
 'url': 'https://www.zonaprop.com.ar/propiedades/se-alquila-depto-2-amb-en-av-independencia-al-3200-al-51203015.html'}
2023-03-27 23:15:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-castro-barros-caba-250-51338650.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-castro-barros-caba-250-51338650.html>
{'ambientes': '2',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'CASTRO BARROS - (CABA) 250. Entre Hipolito yrigoyen y Belgrano '
              'av. - (caba)',
 'dormitorios': '1',
 'expensas': ' 18.000',
 'm2_cub': '37',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes. | Castro Barros - (Caba) 250',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-castro-barros-caba-250-51338650.html'}
2023-03-27 23:15:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-san-cristobal-51287230.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-san-cristobal-51287230.html>
{'ambientes': '1',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Sarandi al 800',
 'expensas': 0,
 'm2_cub': '25',
 'm2_total': '25',
 'moneda': '$',
 'title': 'Casa - San Cristobal',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-san-cristobal-51287230.html'}
2023-03-27 23:15:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exc-2-amb-a-estren-a-prof-dorm-en-ste-toiltorre-51268083.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exc-2-amb-a-estren-a-prof-dorm-en-ste-toiltorre-51268083.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Dorrego al 2500 y Av. Santa Fe. Be Plaza. A Estrenar',
 'dormitorios': '1',
 'expensas': ' 45.000',
 'm2_cub': '43',
 'm2_total': '46',
 'moneda': 'USD',
 'title': 'Exc 2 Amb a Estren A/prof Dorm en Ste Toiltorre Premium Be Plaza '
          'Dorrego Esq Santa Fe',
 'url': 'https://www.zonaprop.com.ar/propiedades/exc-2-amb-a-estren-a-prof-dorm-en-ste-toiltorre-51268083.html'}
2023-03-27 23:15:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-79.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-en-nunez-capital-federal-buenos-51295830.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-en-nunez-capital-federal-buenos-51295830.html>
{'ambientes': '6',
 'barrio': ', Núñez, Capital Federal',
 'direccion': '3 de Febrero 4700',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '560',
 'm2_total': '560',
 'moneda': 'USD',
 'title': 'Casa en Alquiler en Núñez, Capital Federal, Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-en-nunez-capital-federal-buenos-51295830.html'}
2023-03-27 23:15:27 [scrapy.extensions.logstats] INFO: Crawled 1194 pages (at 16 pages/min), scraped 1115 items (at 15 items/min)
2023-03-27 23:15:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-3-ambientes-palermo-51178353.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-3-ambientes-palermo-51178353.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av Libertador 2000',
 'dormitorios': '2',
 'expensas': ' 50.000',
 'm2_cub': '150',
 'm2_total': '150',
 'moneda': 'USD',
 'title': 'Departamento Alquiler Temporal 3 Ambientes Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-3-ambientes-palermo-51178353.html'}
2023-03-27 23:15:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-temporal-en-el-barrio-de-nunez-4-51178573.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-temporal-en-el-barrio-de-nunez-4-51178573.html>
{'ambientes': '4',
 'barrio': ', Núñez, Capital Federal',
 'direccion': '3 DE FEBRERO 3300',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '212',
 'm2_total': '212',
 'moneda': 'USD',
 'title': 'Casa en Alquiler Temporal en El Barrio de Nuñez 4 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-en-alquiler-temporal-en-el-barrio-de-nunez-4-51178573.html'}
2023-03-27 23:15:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-temporal-en-sal-51179369.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-temporal-en-sal-51179369.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Juan de Dios Filiberto ',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '44',
 'm2_total': '44',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente en Alquiler Temporal en Sal Telmo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-temporal-en-sal-51179369.html'}
2023-03-27 23:15:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-amoblado-con-terraza-en-guido-y-51182684.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-amoblado-con-terraza-en-guido-y-51182684.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Guido y Montevideo',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '153',
 'm2_total': '171',
 'moneda': 'USD',
 'title': 'Departamento Amoblado con Terraza en Guido y Montevideo - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-amoblado-con-terraza-en-guido-y-51182684.html'}
2023-03-27 23:15:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-french-2800-51208435.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-french-2800-51208435.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'French 2872',
 'dormitorios': '1',
 'expensas': ' 17.000',
 'm2_cub': '37',
 'm2_total': '37',
 'moneda': '$',
 'title': 'Alquiler - 2 Ambientes - French 2800',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-french-2800-51208435.html'}
2023-03-27 23:15:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51339872.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51339872.html>
{'ambientes': '5',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Arenales al 3800',
 'dormitorios': '3',
 'expensas': ' 55.000',
 'm2_cub': '125',
 'm2_total': '130',
 'moneda': '$',
 'title': 'Departamento en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51339872.html'}
2023-03-27 23:15:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-amb-caballito-51272485.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-amb-caballito-51272485.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Av gaona ',
 'dormitorios': '1',
 'expensas': ' 13.500',
 'm2_cub': '37',
 'm2_total': '37',
 'moneda': '$',
 'title': 'Departamento 2 Amb Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-amb-caballito-51272485.html'}
2023-03-27 23:15:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51067856.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51067856.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Congreso al 1600',
 'dormitorios': '2',
 'expensas': ' 49.300',
 'm2_cub': '93',
 'm2_total': '93',
 'moneda': 'USD',
 'title': 'Departamento - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51067856.html'}
2023-03-27 23:15:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes.-luminoso-con-balcon.-pileta-y-51277701.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:15:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:15:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes.-luminoso-con-balcon.-pileta-y-51277701.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Cabello 3682',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '45',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Hermoso 2 Ambientes. Luminoso con Balcón. Pileta y Gym.',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes.-luminoso-con-balcon.-pileta-y-51277701.html'}
2023-03-27 23:16:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-2-ambientes-51155827.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-2-ambientes-51155827.html>
{'ambientes': '2',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'SOLIS 721',
 'dormitorios': '1',
 'expensas': ' 13.000',
 'm2_cub': '33',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Departamento en Alquiler - 2 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-2-ambientes-51155827.html'}
2023-03-27 23:16:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-ambientes-semipiso-51269395.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-ambientes-semipiso-51269395.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Mendoza 2500',
 'dormitorios': '3',
 'expensas': ' 30.000',
 'm2_cub': '74',
 'm2_total': '74',
 'moneda': '$',
 'title': '4 Ambientes Semipiso',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-ambientes-semipiso-51269395.html'}
2023-03-27 23:16:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-casa-3-ambientes-patio-terraza-quincho-51190989.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-casa-3-ambientes-patio-terraza-quincho-51190989.html>
{'ambientes': '3',
 'barrio': ', Parque Avellaneda, Capital Federal',
 'direccion': 'Monte 4159, parque avellaneda',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '155',
 'm2_total': '200',
 'moneda': '$',
 'title': 'Alquiler Casa 3 Ambientes Patio Terraza Quincho',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-casa-3-ambientes-patio-terraza-quincho-51190989.html'}
2023-03-27 23:16:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-5-ambientes-sobre-av-callao-51369954.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-5-ambientes-sobre-av-callao-51369954.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Avenida Callao 1400',
 'dormitorios': '4',
 'expensas': ' 100.000',
 'm2_cub': '175',
 'm2_total': '184',
 'moneda': 'USD',
 'title': 'Alquiler Departamento 5 Ambientes Sobre Av Callao',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-5-ambientes-sobre-av-callao-51369954.html'}
2023-03-27 23:16:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-en-retiro-51379271.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-en-retiro-51379271.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Libertador al 300',
 'dormitorios': '2',
 'expensas': ' 70.000',
 'm2_cub': '176',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes con Cochera en Retiro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-cochera-en-retiro-51379271.html'}
2023-03-27 23:16:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-uso-comercial-10-hab-4-banos-c-terraza-nunez-51141608.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-uso-comercial-10-hab-4-banos-c-terraza-nunez-51141608.html>
{'ambientes': '7',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'CABILDO, AVDA. 3041. Entre Ibera y Quesada',
 'dormitorios': '6',
 'expensas': ' 8.340',
 'm2_cub': '300',
 'm2_total': '520',
 'moneda': '$',
 'title': 'PH Uso Comercial 10 Hab 4 Baños C/terraza Nuñez Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-uso-comercial-10-hab-4-banos-c-terraza-nunez-51141608.html'}
2023-03-27 23:16:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-80.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-temporal-en-villa-51246549.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-temporal-en-villa-51246549.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Monroe 5238',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente Alquiler Temporal en Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-alquiler-temporal-en-villa-51246549.html'}
2023-03-27 23:16:27 [scrapy.extensions.logstats] INFO: Crawled 1211 pages (at 17 pages/min), scraped 1131 items (at 16 items/min)
2023-03-27 23:16:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/estudio-1-ambientes-alquiler-temporal-villa-urquiza-51178335.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/estudio-1-ambientes-alquiler-temporal-villa-urquiza-51178335.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Tomas le breton',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '28',
 'm2_total': '32',
 'moneda': 'USD',
 'title': 'Estudio 1 Ambientes Alquiler Temporal Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/estudio-1-ambientes-alquiler-temporal-villa-urquiza-51178335.html'}
2023-03-27 23:16:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-2-ambientes-en-villa-51249772.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-2-ambientes-en-villa-51249772.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Tomas A Le breton y Diaz Colodrero',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Departamento Alquiler Temporal 2 Ambientes en Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-2-ambientes-en-villa-51249772.html'}
2023-03-27 23:16:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/genetica-privilegiada-casona-de-epoca-solo-uso-51268659.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/genetica-privilegiada-casona-de-epoca-solo-uso-51268659.html>
{'ambientes': '4',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'Juan B Justo 7700',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '221',
 'm2_total': '401',
 'moneda': '$',
 'title': 'Genética Privilegiada Casona de Epoca Solo Uso Comrecial',
 'url': 'https://www.zonaprop.com.ar/propiedades/genetica-privilegiada-casona-de-epoca-solo-uso-51268659.html'}
2023-03-27 23:16:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-av-jb-alberdi-al-2000-flores-51208994.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-av-jb-alberdi-al-2000-flores-51208994.html>
{'ambientes': '4',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Av. JB Alberdi al 2000',
 'dormitorios': '3',
 'expensas': ' 47.000',
 'm2_cub': '110',
 'm2_total': '110',
 'moneda': '$',
 'title': 'Alquiler Semipiso Av Jb Alberdi Al 2000 - Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-av-jb-alberdi-al-2000-flores-51208994.html'}
2023-03-27 23:16:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-del-libertador-8320.-departamento-dos-ambientes.-51320346.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-del-libertador-8320.-departamento-dos-ambientes.-51320346.html>
{'ambientes': '2',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Av. del Libertador 8320',
 'dormitorios': '1',
 'expensas': ' 10.832',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Av del Libertador 8320. Departamento Dos Ambientes. Cocina '
          'Independiente.',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-del-libertador-8320.-departamento-dos-ambientes.-51320346.html'}
2023-03-27 23:16:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-caballito-capital-federal-51349036.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-caballito-capital-federal-51349036.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'CACHIMAYO 700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes - Caballito, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-caballito-capital-federal-51349036.html'}
2023-03-27 23:16:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-barrio-norte-capital-51370572.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-barrio-norte-capital-51370572.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Juncal 4600',
 'dormitorios': '2',
 'expensas': ' 35.000',
 'm2_cub': '70',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes - Barrio Norte, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-barrio-norte-capital-51370572.html'}
2023-03-27 23:16:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-ph-3-ambientes-alquiler-temporal-villa-51178367.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-ph-3-ambientes-alquiler-temporal-villa-51178367.html>
{'ambientes': '3',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Concepcion Arenal ',
 'expensas': 0,
 'm2_cub': '64',
 'm2_total': '98',
 'moneda': 'USD',
 'title': 'Departamento PH 3 Ambientes Alquiler Temporal Villa Crespo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-ph-3-ambientes-alquiler-temporal-villa-51178367.html'}
2023-03-27 23:16:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-2-ambientes-completamente-51213972.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:16:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:16:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-2-ambientes-completamente-51213972.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Uriburu al 1400',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '37',
 'm2_total': '47',
 'moneda': 'USD',
 'title': 'Excelente Departamento 2 Ambientes Completamente Equipado',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-2-ambientes-completamente-51213972.html'}
2023-03-27 23:17:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alvear-icon.-exclusiva-residencia.-vista-y-51312037.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alvear-icon.-exclusiva-residencia.-vista-y-51312037.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Aime Paine al 1100',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '84',
 'm2_total': '92',
 'moneda': 'USD',
 'title': 'Alvear Icon. Exclusiva Residencia. Vista y Equipamiento '
          'Insuperable. Ideal Altos Ejecutivos y Embaja',
 'url': 'https://www.zonaprop.com.ar/propiedades/alvear-icon.-exclusiva-residencia.-vista-y-51312037.html'}
2023-03-27 23:17:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-mono-ambiente-completamente-amoblado-51213953.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-mono-ambiente-completamente-amoblado-51213953.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Billinghurst al 1300',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '31',
 'm2_total': '31',
 'moneda': 'USD',
 'title': 'Alquiler Mono Ambiente Completamente Amoblado',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-mono-ambiente-completamente-amoblado-51213953.html'}
2023-03-27 23:17:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-dividido-reciclado-muy-luminoso.-51176149.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-dividido-reciclado-muy-luminoso.-51176149.html>
{'ambientes': '2',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Crisologo Larralde 4000 6°',
 'dormitorios': '1',
 'expensas': ' 7.220',
 'm2_cub': '31',
 'm2_total': '31',
 'moneda': '$',
 'title': '1 Ambiente Amplio Dividido, Reciclado, Muy Luminoso.',
 'url': 'https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-dividido-reciclado-muy-luminoso.-51176149.html'}
2023-03-27 23:17:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/moreno-2500.-departamento-de-2-ambientes-en-alquiler.-51359757.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/moreno-2500.-departamento-de-2-ambientes-en-alquiler.-51359757.html>
{'ambientes': '2',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Moreno al 2500',
 'dormitorios': '1',
 'expensas': ' 6.000',
 'm2_cub': '32',
 'm2_total': '32',
 'moneda': '$',
 'title': 'Moreno 2500. Departamento de 2 Ambientes en Alquiler. Balvanera',
 'url': 'https://www.zonaprop.com.ar/propiedades/moreno-2500.-departamento-de-2-ambientes-en-alquiler.-51359757.html'}
2023-03-27 23:17:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-triplex-amoblado-en-palacio-raggio-51238506.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-triplex-amoblado-en-palacio-raggio-51238506.html>
{'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Moreno 502',
 'expensas': 0,
 'm2_cub': '90',
 'm2_total': '105',
 'moneda': 'USD',
 'title': 'Alquiler Triplex Amoblado en Palacio Raggio',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-triplex-amoblado-en-palacio-raggio-51238506.html'}
2023-03-27 23:17:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-torre-pileta-seguridad-51378557.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-torre-pileta-seguridad-51378557.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey Loreto al 2000 - Torre Loreto Plaza',
 'dormitorios': '1',
 'expensas': ' 45.000',
 'm2_cub': '48',
 'm2_total': '53',
 'moneda': '$',
 'title': 'Alquiler - 2 Ambientes - Torre - Pileta - Seguridad 24hrs - Cancha '
          'de Tenis - Parrilla - Belgrano Bar',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-torre-pileta-seguridad-51378557.html'}
2023-03-27 23:17:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-81.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:27 [scrapy.extensions.logstats] INFO: Crawled 1227 pages (at 16 pages/min), scraped 1146 items (at 15 items/min)
2023-03-27 23:17:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-3-ambientes-con-balcon-lavadero-cochera-y-51321121.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-3-ambientes-con-balcon-lavadero-cochera-y-51321121.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'PEDERNERA ',
 'dormitorios': '2',
 'expensas': ' 35.000',
 'm2_cub': '65',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Hermoso 3 Ambientes con Balcón, Lavadero, Cochera y Baulera '
          'Pedernera 300',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-3-ambientes-con-balcon-lavadero-cochera-y-51321121.html'}
2023-03-27 23:17:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-luminoso-con-patio-51249246.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-luminoso-con-patio-51249246.html>
{'ambientes': '2',
 'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Lavalle ',
 'dormitorios': '1',
 'expensas': ' 10.000',
 'm2_cub': '35',
 'm2_total': '45',
 'moneda': '$',
 'title': '2 Ambientes Luminoso con Patio',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-luminoso-con-patio-51249246.html'}
2023-03-27 23:17:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-belgrano-cazadores-1800-51274794.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-belgrano-cazadores-1800-51274794.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cazadores ',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Alquiler - Monoambiente - Belgrano - Cazadores 1800 - Usd 700 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-belgrano-cazadores-1800-51274794.html'}
2023-03-27 23:17:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/u$s-2.500-3-amb-palermo-cervino-4500-gua-51383526.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/u$s-2.500-3-amb-palermo-cervino-4500-gua-51383526.html>
{'ambientes': '3',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Cerviño al 4500',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '130',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'U$s 2.500 - 3 Amb - Palermo - Cerviño 4500 (Gua)',
 'url': 'https://www.zonaprop.com.ar/propiedades/u$s-2.500-3-amb-palermo-cervino-4500-gua-51383526.html'}
2023-03-27 23:17:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-semipiso-3-amb.-balcon-al-contrafrente-51356686.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-semipiso-3-amb.-balcon-al-contrafrente-51356686.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'valle 600',
 'dormitorios': '2',
 'expensas': ' 16.000',
 'm2_cub': '60',
 'm2_total': '64',
 'moneda': '$',
 'title': 'Excelente Semipiso 3 Amb. Balcon Al Contrafrente Luminoso y Bajas '
          'Expensas!',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-semipiso-3-amb.-balcon-al-contrafrente-51356686.html'}
2023-03-27 23:17:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51315906.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51315906.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Le Parc - Puerto Madero-azucena Villafor al 500- 3 Ambientes',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '126',
 'm2_total': '135',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51315906.html'}
2023-03-27 23:17:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/arenales-1400-mono-ambiente-balcon-kitchentte-51238312.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/arenales-1400-mono-ambiente-balcon-kitchentte-51238312.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Arenales ',
 'expensas': ' 10.000',
 'm2_cub': '25',
 'm2_total': '25',
 'moneda': '$',
 'title': 'Arenales 1400 Mono Ambiente Balcón Kitchentte',
 'url': 'https://www.zonaprop.com.ar/propiedades/arenales-1400-mono-ambiente-balcon-kitchentte-51238312.html'}
2023-03-27 23:17:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-palermo-viejo-51135369.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-palermo-viejo-51135369.html>
{'ambientes': '5',
 'barrio': ', Palermo Viejo, Palermo',
 'direccion': 'Serrano al 700. Palermo Viejo',
 'dormitorios': '4',
 'expensas': 0,
 'moneda': 'USD',
 'title': 'PH - Palermo Viejo',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-palermo-viejo-51135369.html'}
2023-03-27 23:17:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dorm.-belgrano-c-chico-barrancas-51143196.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:17:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:17:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dorm.-belgrano-c-chico-barrancas-51143196.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'DEL LIBERTADOR AV. 5000',
 'dormitorios': '3',
 'expensas': ' 80.000',
 'm2_cub': '150',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Departamento 3 Dorm. - Belgrano C/chico/barrancas, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dorm.-belgrano-c-chico-barrancas-51143196.html'}
2023-03-27 23:18:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palermo-alquiler-temporario-ph-3-ambientes-c-terraza-y-51306087.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palermo-alquiler-temporario-ph-3-ambientes-c-terraza-y-51306087.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'BILLINGHURTS ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Palermo Alquiler Temporario PH 3 Ambientes C/terraza y Parrilla',
 'url': 'https://www.zonaprop.com.ar/propiedades/palermo-alquiler-temporario-ph-3-ambientes-c-terraza-y-51306087.html'}
2023-03-27 23:18:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-monte-castro-capital-51253547.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-monte-castro-capital-51253547.html>
{'ambientes': '1',
 'barrio': ', Monte Castro, Capital Federal',
 'direccion': 'Sanabria 2100',
 'expensas': ' 10.000',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Departamento en Alquiler en Monte Castro, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-monte-castro-capital-51253547.html'}
2023-03-27 23:18:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-paternal-51299673.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-paternal-51299673.html>
{'ambientes': '3',
 'barrio': ', La Paternal, Capital Federal',
 'direccion': 'Fragata Sarmiento al 1600',
 'dormitorios': '2',
 'expensas': ' 12.000',
 'm2_cub': '62',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Departamento en Paternal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-paternal-51299673.html'}
2023-03-27 23:18:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-ph-en-2-plantas-de-3-amb.-con-patio-y-51365016.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-ph-en-2-plantas-de-3-amb.-con-patio-y-51365016.html>
{'ambientes': '3',
 'barrio': ', Versalles, Capital Federal',
 'direccion': 'VICENTE DUPUY 1075',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '110',
 'moneda': '$',
 'title': 'Excelente PH en 2 Plantas de 3 Amb. con Patio y Terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-ph-en-2-plantas-de-3-amb.-con-patio-y-51365016.html'}
2023-03-27 23:18:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-cocina-separada.-51359652.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-cocina-separada.-51359652.html>
{'ambientes': '2',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Libertad 800 5°',
 'dormitorios': '1',
 'expensas': ' 26.200',
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': '$',
 'title': '2 Ambientes Cocina Separada.',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-cocina-separada.-51359652.html'}
2023-03-27 23:18:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dto-4-amb-en-liniers!-51326265.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dto-4-amb-en-liniers!-51326265.html>
{'ambientes': '4',
 'barrio': ', Liniers, Capital Federal',
 'direccion': 'bynon 6921',
 'dormitorios': '3',
 'expensas': ' 19.000',
 'm2_cub': '69',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Dto 4 Amb en Liniers!',
 'url': 'https://www.zonaprop.com.ar/propiedades/dto-4-amb-en-liniers!-51326265.html'}
2023-03-27 23:18:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-de-estilo-c-jardines-en-2-pltas-500-m-sup2-51337475.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-de-estilo-c-jardines-en-2-pltas-500-m-sup2-51337475.html>
{'ambientes': '10',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Bonorino al 200',
 'expensas': 0,
 'm2_cub': '316',
 'm2_total': '500',
 'moneda': '$',
 'title': 'Casa de Estilo C/ Jardines en 2 Pltas - 500 m²',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-de-estilo-c-jardines-en-2-pltas-500-m-sup2-51337475.html'}
2023-03-27 23:18:27 [scrapy.extensions.logstats] INFO: Crawled 1243 pages (at 16 pages/min), scraped 1162 items (at 16 items/min)
2023-03-27 23:18:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-82.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tipo-casa-ph-3-ambientes.-51243181.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tipo-casa-ph-3-ambientes.-51243181.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Gavilan 528',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '75',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Tipo Casa/ph 3 Ambientes.',
 'url': 'https://www.zonaprop.com.ar/propiedades/tipo-casa-ph-3-ambientes.-51243181.html'}
2023-03-27 23:18:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-edificio-parisino-de-51377634.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-edificio-parisino-de-51377634.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Basavilbaso al 1300',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '62',
 'm2_total': '68',
 'moneda': '$',
 'title': 'Hermoso Departamento en Edificio Parisino de Categoria.',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-edificio-parisino-de-51377634.html'}
2023-03-27 23:18:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-balvanera-5-dorm.-51380777.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-balvanera-5-dorm.-51380777.html>
{'ambientes': '7',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Av. Rivadavia 3000',
 'dormitorios': '5',
 'expensas': ' 51.300',
 'm2_cub': '238',
 'm2_total': '238',
 'moneda': '$',
 'title': 'Departamento Alquiler Balvanera 5 Dorm.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-balvanera-5-dorm.-51380777.html'}
2023-03-27 23:18:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/olazabal-y-m.-acha-monoambiente-balcon-al-frente-51323170.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/olazabal-y-m.-acha-monoambiente-balcon-al-frente-51323170.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Olazabal al 4300',
 'expensas': ' 4.000',
 'm2_cub': '30',
 'm2_total': '32',
 'moneda': '$',
 'title': 'Olazabal y m. Acha - Monoambiente - Balcon Al Frente',
 'url': 'https://www.zonaprop.com.ar/propiedades/olazabal-y-m.-acha-monoambiente-balcon-al-frente-51323170.html'}
2023-03-27 23:18:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-paseo-colon-1000-departamento-3-ambientes-con-51299043.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-paseo-colon-1000-departamento-3-ambientes-con-51299043.html>
{'ambientes': '3',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Paseo Colon 1000',
 'dormitorios': '2',
 'expensas': ' 31.400',
 'm2_cub': '54',
 'm2_total': '62',
 'moneda': '$',
 'title': 'Av Paseo Colón 1000 - Departamento 3 Ambientes con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-paseo-colon-1000-departamento-3-ambientes-con-51299043.html'}
2023-03-27 23:18:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-belgrano-51173770.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-belgrano-51173770.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Olleros 1700',
 'dormitorios': '3',
 'expensas': ' 60.000',
 'm2_cub': '135',
 'm2_total': '140',
 'moneda': 'USD',
 'title': 'Departamento 3 Dor. C/dep - Belgrano C/chico/barrancas, Capital '
          'Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-belgrano-51173770.html'}
2023-03-27 23:18:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-departamento-3-amb-con-balcon-caballito-51388297.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-departamento-3-amb-con-balcon-caballito-51388297.html>
{'ambientes': '3',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Beauchef 900',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '79',
 'moneda': 'USD',
 'title': 'Venta Departamento 3 Amb con Balcón Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-departamento-3-amb-con-balcon-caballito-51388297.html'}
2023-03-27 23:18:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51385180.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:18:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:18:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51385180.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cabildo1505',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '47',
 'moneda': '$',
 'title': 'Departamento - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51385180.html'}
2023-03-27 23:19:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-loft-palermo-hollywood-niceto-vega-5600-51256902.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-loft-palermo-hollywood-niceto-vega-5600-51256902.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Niceto vega ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Alquiler - Loft - Palermo Hollywood - Niceto Vega 5600 - Usd 850 '
          'Todo Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-loft-palermo-hollywood-niceto-vega-5600-51256902.html'}
2023-03-27 23:19:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-5-ambientes.-estomba-al-2200-51325023.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-5-ambientes.-estomba-al-2200-51325023.html>
{'ambientes': '5',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'ESTOMBA 2200. Entre Mendoza y Olazabal, av.',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '325',
 'm2_total': '325',
 'moneda': 'USD',
 'title': 'Casa 5 Ambientes. | Estomba Al 2200',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-5-ambientes.-estomba-al-2200-51325023.html'}
2023-03-27 23:19:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-botanico-51307052.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-botanico-51307052.html>
{'ambientes': '1',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Tagle al 2500',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento en Botanico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-botanico-51307052.html'}
2023-03-27 23:19:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-a-estrenar-con-pileta-y-51387431.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-a-estrenar-con-pileta-y-51387431.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'colombres 575',
 'expensas': ' 27.000',
 'm2_cub': '44',
 'm2_total': '44',
 'moneda': '$',
 'title': 'Excelente Departamento a Estrenar con Pileta y Parrila.',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-a-estrenar-con-pileta-y-51387431.html'}
2023-03-27 23:19:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/larrea-1200-recoleta-capital-federal-51368296.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/larrea-1200-recoleta-capital-federal-51368296.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Larrea al 1200',
 'expensas': ' 18.000',
 'm2_cub': '24',
 'm2_total': '24',
 'moneda': '$',
 'title': 'Larrea 1200 - Recoleta - Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/larrea-1200-recoleta-capital-federal-51368296.html'}
2023-03-27 23:19:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-mendoza-pedro-de-av-51374974.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-mendoza-pedro-de-av-51374974.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'MENDOZA, PEDRO DE, AV. 4675. Entre Alvarez thomas y Miller',
 'expensas': ' 11.000',
 'm2_cub': '28',
 'm2_total': '29',
 'moneda': '$',
 'title': 'Departamento Monoambiente. | Mendoza, Pedro De, Av 4675',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-mendoza-pedro-de-av-51374974.html'}
2023-03-27 23:19:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-amplio-divisible-a-estrenar-frente-piso-51301980.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-amplio-divisible-a-estrenar-frente-piso-51301980.html>
{'ambientes': '1',
 'barrio': ', Caballito Norte, Caballito',
 'direccion': 'Nicasio oroño ',
 'expensas': ' 11.000',
 'm2_cub': '43',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Monoambiente Amplio Divisible a Estrenar, Frente, piso 3, 43 Mtrs '
          'Totales,',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-amplio-divisible-a-estrenar-frente-piso-51301980.html'}
2023-03-27 23:19:27 [scrapy.extensions.logstats] INFO: Crawled 1259 pages (at 16 pages/min), scraped 1177 items (at 15 items/min)
2023-03-27 23:19:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tucuman-540-monoambiente-uso-profesional-51212085.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tucuman-540-monoambiente-uso-profesional-51212085.html>
{'ambientes': '1',
 'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Tucumán 540',
 'expensas': 0,
 'm2_cub': '33',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Tucumán 540 Monoambiente Uso Profesional',
 'url': 'https://www.zonaprop.com.ar/propiedades/tucuman-540-monoambiente-uso-profesional-51212085.html'}
2023-03-27 23:19:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-83.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lavalle-al-3900.-balcon-al-frente.-muy-luminoso.-con-51382231.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lavalle-al-3900.-balcon-al-frente.-muy-luminoso.-con-51382231.html>
{'ambientes': '1',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Lavalle 3994',
 'expensas': ' 15.000',
 'm2_cub': '33',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Lavalle Al 3900. Balcon Al Frente. Muy Luminoso. con Placard. Dueño '
          'Directo.',
 'url': 'https://www.zonaprop.com.ar/propiedades/lavalle-al-3900.-balcon-al-frente.-muy-luminoso.-con-51382231.html'}
2023-03-27 23:19:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51318172.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51318172.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av. Santa Fe al 1500',
 'dormitorios': '3',
 'expensas': ' 47.000',
 'm2_total': '183',
 'moneda': '$',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51318172.html'}
2023-03-27 23:19:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-monoambiente-en-villa-urquiza-51278645.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-monoambiente-en-villa-urquiza-51278645.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Monroe 5674',
 'expensas': ' 9.000',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Excelente Monoambiente en Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-monoambiente-en-villa-urquiza-51278645.html'}
2023-03-27 23:19:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/caballito-dpto.-1-amb-ctra.-fte-51352597.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/caballito-dpto.-1-amb-ctra.-fte-51352597.html>
{'ambientes': '1',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Gaona al 1100',
 'expensas': ' 10.000',
 'm2_cub': '27',
 'm2_total': '27',
 'moneda': '$',
 'title': 'Caballito Dpto. 1 Amb Ctra. Fte',
 'url': 'https://www.zonaprop.com.ar/propiedades/caballito-dpto.-1-amb-ctra.-fte-51352597.html'}
2023-03-27 23:19:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-madero-plaza-51153262.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-madero-plaza-51153262.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '106',
 'm2_total': '116',
 'moneda': 'USD',
 'title': 'Hermoso Departamento en Madero Plaza',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-madero-plaza-51153262.html'}
2023-03-27 23:19:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/paraguay-5205.-departamento-dos-ambientes.-33-m-sup2-.-51384083.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:19:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:19:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/paraguay-5205.-departamento-dos-ambientes.-33-m-sup2-.-51384083.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Paraguay 5205',
 'dormitorios': '1',
 'expensas': ' 18.194',
 'm2_cub': '33',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Paraguay 5205. Departamento Dos Ambientes. 33 m². Aire '
          'Acondicionado. Al Frente.',
 'url': 'https://www.zonaprop.com.ar/propiedades/paraguay-5205.-departamento-dos-ambientes.-33-m-sup2-.-51384083.html'}
2023-03-27 23:20:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/gurruchaga-2150-9no-d-uso-profesional-39-m-sup2-51291314.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/gurruchaga-2150-9no-d-uso-profesional-39-m-sup2-51291314.html>
{'ambientes': '1',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Gurruchaga 2148',
 'expensas': ' 24.000',
 'm2_cub': '39',
 'm2_total': '39',
 'moneda': '$',
 'title': 'Gurruchaga 2150 9no D Uso Profesional 39 m² Palermo Soho Seguridad '
          'Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/gurruchaga-2150-9no-d-uso-profesional-39-m-sup2-51291314.html'}
2023-03-27 23:20:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-av-callao-al-1000-51327099.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-av-callao-al-1000-51327099.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'AV CALLAO 1000. Entre Av santa fe y Alvear, marcelo t. de',
 'expensas': 0,
 'm2_total': '30',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente. | Av Callao Al 1000',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-av-callao-al-1000-51327099.html'}
2023-03-27 23:20:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304927.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304927.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Felipe Vallese al 1600',
 'dormitorios': '2',
 'expensas': ' 8.000',
 'm2_cub': '62',
 'm2_total': '68',
 'moneda': '$',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304927.html'}
2023-03-27 23:20:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dueno-directo-sin-expensas-ph-1er-piso-al-frente-51208702.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dueno-directo-sin-expensas-ph-1er-piso-al-frente-51208702.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Río de Janeiro 300',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '78',
 'm2_total': '142',
 'moneda': '$',
 'title': 'Dueño Directo - Sin Expensas - PH 1er Piso Al Frente con Terreza',
 'url': 'https://www.zonaprop.com.ar/propiedades/dueno-directo-sin-expensas-ph-1er-piso-al-frente-51208702.html'}
2023-03-27 23:20:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-de-193-m-3-dorm.-depend-en-belgrano-51256888.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-de-193-m-3-dorm.-depend-en-belgrano-51256888.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Zabala 2400 ( entre Ciudad de la Paz y Cabildo)',
 'dormitorios': '3',
 'expensas': ' 78.000',
 'm2_cub': '193',
 'm2_total': '193',
 'moneda': 'USD',
 'title': 'Piso de 193 m (3 Dorm. + Depend) en Belgrano – Excelente Ubicación! '
          'Oportunidad!',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-de-193-m-3-dorm.-depend-en-belgrano-51256888.html'}
2023-03-27 23:20:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-caballito-alquiler-temporal-51176617.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-caballito-alquiler-temporal-51176617.html>
{'ambientes': '1',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Juan B. Ambrosetti 270',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '25',
 'm2_total': '25',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente Caballito Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-caballito-alquiler-temporal-51176617.html'}
2023-03-27 23:20:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-amb.-caballito-51388396.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-amb.-caballito-51388396.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Avenida Rivadavia 6000',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '60',
 'm2_total': '62',
 'moneda': '$',
 'title': 'Departamento en Alquiler 3 Amb. Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-amb.-caballito-51388396.html'}
2023-03-27 23:20:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-un-ambiente-contra-frente-en-buen-51319096.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-un-ambiente-contra-frente-en-buen-51319096.html>
{'ambientes': '1',
 'barrio': ', La Paternal, Capital Federal',
 'direccion': 'Segui, Alte F J ',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '34',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento de un Ambiente Contra - Frente en Buen Estado.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-un-ambiente-contra-frente-en-buen-51319096.html'}
2023-03-27 23:20:27 [scrapy.extensions.logstats] INFO: Crawled 1275 pages (at 16 pages/min), scraped 1192 items (at 15 items/min)
2023-03-27 23:20:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-de-dos-amb-c-bcon-al-cfrte-46-mt-piso-10-lum-51345697.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-de-dos-amb-c-bcon-al-cfrte-46-mt-piso-10-lum-51345697.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Av Cordoba 2448',
 'dormitorios': '1',
 'expensas': ' 10.000',
 'm2_cub': '43',
 'm2_total': '46',
 'moneda': 'USD',
 'title': 'Piso de Dos Amb C/bcon Al Cfrte, 46 Mt, Piso 10, Lum, Edif '
          'Modernista, Impecable',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-de-dos-amb-c-bcon-al-cfrte-46-mt-piso-10-lum-51345697.html'}
2023-03-27 23:20:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-san-telmo-peru-300-usd-51318961.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-san-telmo-peru-300-usd-51318961.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Peru ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': 'USD',
 'title': 'Alquiler - Monoambiente - San Telmo - Peru 300 - Usd 500 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-san-telmo-peru-300-usd-51318961.html'}
2023-03-27 23:20:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-84.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-av-corrientes-al-2900-51366182.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-av-corrientes-al-2900-51366182.html>
{'ambientes': '3',
 'barrio': ', Once, Capital Federal',
 'direccion': 'AV. CORRIENTES 2900. Entre Boulogne sur mer y Ecuador',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_cub': '85',
 'm2_total': '85',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes. | Av Corrientes Al 2900',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-av-corrientes-al-2900-51366182.html'}
2023-03-27 23:20:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/pichincha-1200-3-ambientes-ph-san-cristobal-51370480.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/pichincha-1200-3-ambientes-ph-san-cristobal-51370480.html>
{'ambientes': '3',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Pichincha al 1200',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '67',
 'm2_total': '67',
 'moneda': '$',
 'title': 'Pichincha 1200 - 3 Ambientes - PH - San Cristobal - Sin Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/pichincha-1200-3-ambientes-ph-san-cristobal-51370480.html'}
2023-03-27 23:20:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-en-alquiler-en-palermo-de-3-amb-c-terraza-51355352.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-en-alquiler-en-palermo-de-3-amb-c-terraza-51355352.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Lafinur 3300',
 'dormitorios': '2',
 'expensas': ' 39.000',
 'm2_cub': '92',
 'm2_total': '142',
 'moneda': 'USD',
 'title': 'Depto en Alquiler en Palermo de 3 Amb C/terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-en-alquiler-en-palermo-de-3-amb-c-terraza-51355352.html'}
2023-03-27 23:20:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-nunez-cabildo-3000-usd-51378239.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-nunez-cabildo-3000-usd-51378239.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Cabildo ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Alquiler - 3 Ambientes - Nuñez - Cabildo 3000 - Usd 850 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-nunez-cabildo-3000-usd-51378239.html'}
2023-03-27 23:20:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/deparamento-monoambien-en-san-telmo-alquiler-temporal-51179391.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:20:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/deparamento-monoambien-en-san-telmo-alquiler-temporal-51179391.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Juan de Dios Filiberto 1000',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Deparamento Monoambien en San Telmo Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/deparamento-monoambien-en-san-telmo-alquiler-temporal-51179391.html'}
2023-03-27 23:20:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/gaona-1600-departamento-de-3-ambientes-en-alquiler-en-51363835.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:20:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/gaona-1600-departamento-de-3-ambientes-en-alquiler-en-51363835.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Gaona al 1600',
 'dormitorios': '2',
 'expensas': ' 18.000',
 'm2_cub': '75',
 'm2_total': '140',
 'moneda': '$',
 'title': 'Gaona 1600 Departamento de 3 Ambientes en Alquiler en Caballito '
          'C/balcón Terraza y Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/gaona-1600-departamento-de-3-ambientes-en-alquiler-en-51363835.html'}
2023-03-27 23:21:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51260055.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51260055.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Guemes 4500',
 'dormitorios': '3',
 'expensas': ' 30.000',
 'm2_cub': '130',
 'm2_total': '130',
 'moneda': '$',
 'title': 'Departamento en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51260055.html'}
2023-03-27 23:21:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/residencia-universitaria-alquiler-de-camas-51185942.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/residencia-universitaria-alquiler-de-camas-51185942.html>
{'ambientes': '1',
 'barrio': ', Congreso, Capital Federal',
 'direccion': 'Avenida Entre Ríos 100',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '10',
 'm2_total': '10',
 'moneda': '$',
 'title': 'Residencia Universitaria - Alquiler de Camas / Habitacion',
 'url': 'https://www.zonaprop.com.ar/propiedades/residencia-universitaria-alquiler-de-camas-51185942.html'}
2023-03-27 23:21:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-con-balcon-aterrazado-y-parrilla-cochera-51384435.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-con-balcon-aterrazado-y-parrilla-cochera-51384435.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Av Pueyrredon al 1700',
 'dormitorios': '2',
 'expensas': ' 55.000',
 'm2_cub': '60',
 'm2_total': '80',
 'moneda': 'USD',
 'title': '3 Ambientes con Balcon Aterrazado y Parrilla - Cochera y Baulera - '
          'Amenities - Seguridad 24has',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-con-balcon-aterrazado-y-parrilla-cochera-51384435.html'}
2023-03-27 23:21:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recoleta-sol-pleno-10-mo-piso-departamento-ver-plano-51290073.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recoleta-sol-pleno-10-mo-piso-departamento-ver-plano-51290073.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'paraguay 2900',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '191',
 'm2_total': '214',
 'moneda': 'USD',
 'title': 'Recoleta Sol Pleno 10 Mo Piso Departamento (Ver Plano en Fotos) 215 '
          'm² Dorm Suite Balcon15 m² 2 Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/recoleta-sol-pleno-10-mo-piso-departamento-ver-plano-51290073.html'}
2023-03-27 23:21:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-belgrano-alquiler-51340167.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-belgrano-alquiler-51340167.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Mendoza 1700',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Departamento Monoambiente en Belgrano Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-belgrano-alquiler-51340167.html'}
2023-03-27 23:21:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-uso-comercial-10-hab-4-banos-c-terraza-nunez-51141585.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-uso-comercial-10-hab-4-banos-c-terraza-nunez-51141585.html>
{'ambientes': '7',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'CABILDO, AVDA. 3041. Entre Ibera y Quesada',
 'dormitorios': '6',
 'expensas': ' 8.340',
 'm2_cub': '300',
 'm2_total': '520',
 'moneda': '$',
 'title': 'PH Uso Comercial 10 Hab 4 Baños C/terraza Nuñez Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-uso-comercial-10-hab-4-banos-c-terraza-nunez-51141585.html'}
2023-03-27 23:21:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-alquiler-temporal-en-las-51178664.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-alquiler-temporal-en-las-51178664.html>
{'ambientes': '5',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Huergo 210',
 'dormitorios': '4',
 'expensas': ' 1',
 'm2_cub': '160',
 'm2_total': '160',
 'moneda': 'USD',
 'title': 'Departamento 5 Ambientes Alquiler Temporal en Las Cañitas',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-5-ambientes-alquiler-temporal-en-las-51178664.html'}
2023-03-27 23:21:27 [scrapy.extensions.logstats] INFO: Crawled 1291 pages (at 16 pages/min), scraped 1207 items (at 15 items/min)
2023-03-27 23:21:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-constitucion-capital-51388195.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-constitucion-capital-51388195.html>
{'ambientes': '1',
 'barrio': ', Constitución, Capital Federal',
 'direccion': 'Estados unidos 800',
 'expensas': ' 42.000',
 'm2_cub': '53',
 'm2_total': '53',
 'moneda': '$',
 'title': 'Departamento en Alquiler en Constitución, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-constitucion-capital-51388195.html'}
2023-03-27 23:21:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-en-torre-super-luminoso!-51351677.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-en-torre-super-luminoso!-51351677.html>
{'ambientes': '3',
 'barrio': '',
 'direccion': '',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '55',
 'm2_total': '59',
 'moneda': 'USD',
 'title': 'Hermoso 2 Ambientes en Torre Super Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-en-torre-super-luminoso!-51351677.html'}
2023-03-27 23:21:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-en-caballito-1-ambiente-51212519.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-en-caballito-1-ambiente-51212519.html>
{'ambientes': '1',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'gUAYAQUIL ',
 'expensas': ' 7.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Alquiler en Caballito 1 Ambiente',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-en-caballito-1-ambiente-51212519.html'}
2023-03-27 23:21:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-85.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51355736.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51355736.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Vidt al al 2000',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51355736.html'}
2023-03-27 23:21:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-ambientes-av-montes-de-oca-1000-51355528.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-ambientes-av-montes-de-oca-1000-51355528.html>
{'ambientes': '4',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Montes de oca ',
 'dormitorios': '3',
 'expensas': ' 30.000',
 'm2_cub': '3',
 'm2_total': '112',
 'moneda': '$',
 'title': '4 Ambientes - Av Montes de Oca 1000',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-ambientes-av-montes-de-oca-1000-51355528.html'}
2023-03-27 23:21:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monserrat-51354745.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monserrat-51354745.html>
{'ambientes': '4',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'Perú 79 7º16',
 'dormitorios': '3',
 'expensas': ' 19.000',
 'm2_cub': '70',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Departamento - Monserrat',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monserrat-51354745.html'}
2023-03-27 23:21:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alucinante-departamento-equipado-para-alquiler-51282701.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alucinante-departamento-equipado-para-alquiler-51282701.html>
{'ambientes': '1',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Arévalo al 1400',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '32',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Alucinante Departamento Equipado Para Alquiler Temporario',
 'url': 'https://www.zonaprop.com.ar/propiedades/alucinante-departamento-equipado-para-alquiler-51282701.html'}
2023-03-27 23:21:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-palermo-nuevo-capital-51386072.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:21:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:21:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-palermo-nuevo-capital-51386072.html>
{'ambientes': '2',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Juncal 4600',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '52',
 'm2_total': '85',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes - Palermo Nuevo, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-palermo-nuevo-capital-51386072.html'}
2023-03-27 23:22:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ideal-bar-oficina-restaurant-51351629.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ideal-bar-oficina-restaurant-51351629.html>
{'ambientes': '5',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'OLLEROS, AV. 3883. Entre Fraga',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '180',
 'm2_total': '220',
 'moneda': 'USD',
 'title': 'Ideal Bar Oficina Restaurant',
 'url': 'https://www.zonaprop.com.ar/propiedades/ideal-bar-oficina-restaurant-51351629.html'}
2023-03-27 23:22:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dpto-3-amb-piso-10-a-60-m-sup2--total-c-balcon-al-51349514.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dpto-3-amb-piso-10-a-60-m-sup2--total-c-balcon-al-51349514.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Federico Lacroze al 2400',
 'dormitorios': '2',
 'expensas': ' 17.000',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Dpto 3 Amb, Piso 10°a, 60 m² Total, C/balcón Al Fte, Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/dpto-3-amb-piso-10-a-60-m-sup2--total-c-balcon-al-51349514.html'}
2023-03-27 23:22:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-flores-capital-federal-51383567.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-flores-capital-federal-51383567.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Ramon Falcon 2800',
 'dormitorios': '2',
 'expensas': ' 17.000',
 'm2_cub': '55',
 'm2_total': '61',
 'moneda': '$',
 'title': 'Departamento en Alquiler en Flores, Capital Federal, Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-flores-capital-federal-51383567.html'}
2023-03-27 23:22:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente.-jose-ortega-y-gasset-51358418.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente.-jose-ortega-y-gasset-51358418.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'JOSE ORTEGA Y GASSET - (CABA) 1575. Entre Migueletes - (caba) y '
              'Del libertador av. - (caba)',
 'expensas': ' 20.000',
 'm2_cub': '27',
 'm2_total': '31',
 'moneda': '$',
 'title': 'Departamento 1 Ambiente. | Jose Ortega y Gasset - (Caba) 1575',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente.-jose-ortega-y-gasset-51358418.html'}
2023-03-27 23:22:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51294149.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51294149.html>
{'ambientes': '1',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Distrito Quartier.',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '47',
 'moneda': 'USD',
 'title': 'Distrito Quartier - Excelente Loft en Alquiler Temporario.',
 'url': 'https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51294149.html'}
2023-03-27 23:22:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-temporal-amoblado-y-equipado-51283664.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-temporal-amoblado-y-equipado-51283664.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Excelente y Amplio 2 Amb. Categoría Temporal Amoblado y '
              'Equipado Full Amenities Seg 24hs, Sobre Av. Del Libertador y '
              'Pampa, Mts. Barrio Chino a 10 Minutos de Palermo',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Excelente 2 Ambientes Temporal Amoblado y Equipado, Full Amenities '
          'Seg 24hs. Sobre Av del Libertador',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-temporal-amoblado-y-equipado-51283664.html'}
2023-03-27 23:22:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/fte.-al-parque-bcon-exc.100-m-sup2--recien-pintado-y-51217058.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/fte.-al-parque-bcon-exc.100-m-sup2--recien-pintado-y-51217058.html>
{'ambientes': '3',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'AVENIDA ASAMBLEA 1064 ',
 'expensas': ' 12.356',
 'm2_cub': '100',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Fte. Al Parque Bcon Exc.100 m² Recien Pintado y Plastif. T/con Red '
          'Protec. Aa F/c',
 'url': 'https://www.zonaprop.com.ar/propiedades/fte.-al-parque-bcon-exc.100-m-sup2--recien-pintado-y-51217058.html'}
2023-03-27 23:22:27 [scrapy.extensions.logstats] INFO: Crawled 1307 pages (at 16 pages/min), scraped 1222 items (at 15 items/min)
2023-03-27 23:22:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-con-cochera-torres-caballito-nuevo-51356089.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-con-cochera-torres-caballito-nuevo-51356089.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Colpayo 700',
 'dormitorios': '2',
 'expensas': ' 56.000',
 'm2_cub': '68',
 'm2_total': '72',
 'moneda': 'USD',
 'title': 'Alquiler 3 Amb con Cochera Torres Caballito Nuevo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-amb-con-cochera-torres-caballito-nuevo-51356089.html'}
2023-03-27 23:22:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-flores-51327210.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-flores-51327210.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Bogota al 3300',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '60',
 'm2_total': '68',
 'moneda': '$',
 'title': 'Departamento en Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-flores-51327210.html'}
2023-03-27 23:22:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-o-largo-plazo!-torre-bellini-51345223.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-o-largo-plazo!-torre-bellini-51345223.html>
{'ambientes': '2',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Esmeralda 920',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Alquiler Temporario o Largo Plazo! Torre Bellini',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-o-largo-plazo!-torre-bellini-51345223.html'}
2023-03-27 23:22:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-en-villa-urquiza-51381627.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:39 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-en-villa-urquiza-51381627.html>
{'ambientes': '4',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Av. Triunvirato al 3800',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_cub': '84',
 'm2_total': '96',
 'moneda': '$',
 'title': 'Excelente Departamento en Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-en-villa-urquiza-51381627.html'}
2023-03-27 23:22:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-86.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-temporario-3-ambientes-recoleta-barrio-51370640.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-temporario-3-ambientes-recoleta-barrio-51370640.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Ecuador al 1200',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '86',
 'moneda': 'USD',
 'title': 'Departamento Temporario 3 Ambientes Recoleta Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-temporario-3-ambientes-recoleta-barrio-51370640.html'}
2023-03-27 23:22:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-de-3-ambientes-con-cochera-51201415.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-de-3-ambientes-con-cochera-51201415.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Migueletes Entre San Benito de Palermo y Ortega y Gasset',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '87',
 'm2_total': '87',
 'moneda': 'USD',
 'title': 'Alquiler Semipiso de 3 Ambientes con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-semipiso-de-3-ambientes-con-cochera-51201415.html'}
2023-03-27 23:22:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-atelier-en-lacroze-chacarita-51319428.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-atelier-en-lacroze-chacarita-51319428.html>
{'ambientes': '2',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'Federico Lacroze 3900',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '115',
 'm2_total': '115',
 'moneda': '$',
 'title': 'Alquiler Depto/atelier en Lacroze Chacarita',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-atelier-en-lacroze-chacarita-51319428.html'}
2023-03-27 23:22:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-en-villa-del-parque.-con-51385747.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:22:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:22:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-en-villa-del-parque.-con-51385747.html>
{'ambientes': '2',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Remedios de Escalada de San Martin 2966',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '38',
 'm2_total': '48',
 'moneda': '$',
 'title': '2 Ambientes en Alquiler en Villa del Parque. con Patio. Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-en-alquiler-en-villa-del-parque.-con-51385747.html'}
2023-03-27 23:23:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-saavedra-3-ambientes-frente-a-la-plaza-51354392.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-saavedra-3-ambientes-frente-a-la-plaza-51354392.html>
{'ambientes': '3',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Vilela 3100',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '60',
 'm2_total': '63',
 'moneda': '$',
 'title': 'Alquiler Saavedra 3 Ambientes Frente a La Plaza',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-saavedra-3-ambientes-frente-a-la-plaza-51354392.html'}
2023-03-27 23:23:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-loft-1-ambiente-con-terraza-palacio-raggio-51286157.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-loft-1-ambiente-con-terraza-palacio-raggio-51286157.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Moreno 502',
 'expensas': 0,
 'm2_cub': '35',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Alquiler Loft 1 Ambiente con Terraza - Palacio Raggio',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-loft-1-ambiente-con-terraza-palacio-raggio-51286157.html'}
2023-03-27 23:23:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-amoblado-y-equipado-en-puerto-51350157.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-amoblado-y-equipado-en-puerto-51350157.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'ROSARIO VERA PEÑALOZA 599',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '63',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Alquiler 2 Ambientes Amoblado y Equipado en Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-amoblado-y-equipado-en-puerto-51350157.html'}
2023-03-27 23:23:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-con-espacio-cochera-balcon-51317370.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-con-espacio-cochera-balcon-51317370.html>
{'ambientes': '1',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'VERA AL ',
 'expensas': ' 11.000',
 'm2_cub': '37',
 'm2_total': '41',
 'moneda': '$',
 'title': '1 Ambiente Amplio con Espacio Cochera Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-con-espacio-cochera-balcon-51317370.html'}
2023-03-27 23:23:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-con-balcon-abasto-51385399.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-con-balcon-abasto-51385399.html>
{'ambientes': '1',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Avenida Corrientes 3100',
 'expensas': ' 17.000',
 'm2_cub': '21',
 'm2_total': '24',
 'moneda': '$',
 'title': 'Alquiler Monoambiente con Balcón Abasto',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-con-balcon-abasto-51385399.html'}
2023-03-27 23:23:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-nunez-ph-tipo-casa-de-5-ambientes-amoblado-51342246.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-nunez-ph-tipo-casa-de-5-ambientes-amoblado-51342246.html>
{'ambientes': '5',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Ruiz Huidobro 2300',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '194',
 'm2_total': '194',
 'moneda': 'USD',
 'title': 'Alquiler Nuñez PH Tipo Casa de 5 Ambientes Amoblado Terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-nunez-ph-tipo-casa-de-5-ambientes-amoblado-51342246.html'}
2023-03-27 23:23:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-balcon-en-yatay-al-0-51202928.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-balcon-en-yatay-al-0-51202928.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'YATAY 0',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes con Balcon en Yatay Al 0, Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-con-balcon-en-yatay-al-0-51202928.html'}
2023-03-27 23:23:27 [scrapy.extensions.logstats] INFO: Crawled 1323 pages (at 16 pages/min), scraped 1237 items (at 15 items/min)
2023-03-27 23:23:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-belgrano-51150470.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-belgrano-51150470.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'HERNANDEZ JOSE 2000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '180',
 'm2_total': '190',
 'moneda': 'USD',
 'title': 'Departamento 3 Dor. C/dep - Belgrano C/chico/barrancas, Capital '
          'Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-belgrano-51150470.html'}
2023-03-27 23:23:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-con-cochera-en-retiro-51379179.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-con-cochera-en-retiro-51379179.html>
{'ambientes': '4',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Libertador al 300',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '176',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Departamento 4 Ambientes con Cochera en Retiro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-con-cochera-en-retiro-51379179.html'}
2023-03-27 23:23:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-alquiler-temporal-en-palermo-51375810.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-alquiler-temporal-en-palermo-51375810.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Soler 5738',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '36',
 'm2_total': '36',
 'moneda': 'USD',
 'title': 'Departamento 1 Ambiente Alquiler Temporal en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente-alquiler-temporal-en-palermo-51375810.html'}
2023-03-27 23:23:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/rivadavia-5800-2-ambientes-c-balcon-caballito-51339827.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/rivadavia-5800-2-ambientes-c-balcon-caballito-51339827.html>
{'ambientes': '2',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Av. Rivadavia al 5800',
 'dormitorios': '1',
 'expensas': ' 8.900',
 'm2_cub': '36',
 'm2_total': '44',
 'moneda': '$',
 'title': 'Rivadavia 5800 - 2 Ambientes C/ Balcón - Caballito - Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/rivadavia-5800-2-ambientes-c-balcon-caballito-51339827.html'}
2023-03-27 23:23:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-en-caballito-alquiler-51178557.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-en-caballito-alquiler-51178557.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'El Maestro 5',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '100',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Departamento 4 Ambientes en Caballito Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-en-caballito-alquiler-51178557.html'}
2023-03-27 23:23:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-87.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/pichincha-1200-3-ambientes-ph-san-cristobal-51370483.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/pichincha-1200-3-ambientes-ph-san-cristobal-51370483.html>
{'ambientes': '3',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Pichincha al 1200',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '67',
 'm2_total': '67',
 'moneda': '$',
 'title': 'Pichincha 1200 - 3 Ambientes - PH - San Cristobal - Sin Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/pichincha-1200-3-ambientes-ph-san-cristobal-51370483.html'}
2023-03-27 23:23:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-parque-chacabuco-51234051.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-parque-chacabuco-51234051.html>
{'ambientes': '4',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Víctor Martínez al 1400',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '100',
 'm2_total': '170',
 'moneda': '$',
 'title': 'PH - Parque Chacabuco',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-parque-chacabuco-51234051.html'}
2023-03-27 23:23:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-palermo-viejo-51260970.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:23:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:23:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-palermo-viejo-51260970.html>
{'ambientes': '5',
 'barrio': ', Palermo Viejo, Palermo',
 'direccion': 'Serrano al 700. Palermo Viejo',
 'dormitorios': '4',
 'expensas': 0,
 'moneda': 'USD',
 'title': 'PH - Palermo Viejo',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-palermo-viejo-51260970.html'}
2023-03-27 23:24:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-le-parc-2-51315593.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-le-parc-2-51315593.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor al 400',
 'dormitorios': '2',
 'expensas': 0,
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Alquiler - Departamento - Puerto Madero - Le Parc - 2 Dorm. - '
          'Cochera - Alto',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-puerto-madero-le-parc-2-51315593.html'}
2023-03-27 23:24:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51224916.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51224916.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Jose Maria Moreno al 400',
 'dormitorios': '2',
 'expensas': 0,
 'm2_total': '116',
 'moneda': '$',
 'title': 'Departamento en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51224916.html'}
2023-03-27 23:24:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-alquiler!-zona-51260272.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-alquiler!-zona-51260272.html>
{'ambientes': '2',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Sarmiento 1337',
 'dormitorios': '1',
 'expensas': ' 14.660',
 'm2_cub': '22',
 'm2_total': '22',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes en Alquiler! Zona Centro/tribunales',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-alquiler!-zona-51260272.html'}
2023-03-27 23:24:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51357919.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51357919.html>
{'ambientes': '1',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Catamarca al 700',
 'dormitorios': '1',
 'expensas': ' 4.000',
 'm2_cub': '28',
 'm2_total': '28',
 'moneda': '$',
 'title': 'Departamento en Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-51357919.html'}
2023-03-27 23:24:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/totalmente-a-estrenar-ideal-estudiantes-uba-51169708.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/totalmente-a-estrenar-ideal-estudiantes-uba-51169708.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Junin 875',
 'dormitorios': '2',
 'expensas': ' 45.000',
 'm2_cub': '105',
 'm2_total': '105',
 'moneda': '$',
 'title': 'Totalmente a Estrenar, Ideal Estudiantes Uba (Medicina, Econ. '
          'Farmacia, Odont.)',
 'url': 'https://www.zonaprop.com.ar/propiedades/totalmente-a-estrenar-ideal-estudiantes-uba-51169708.html'}
2023-03-27 23:24:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-microcentro-51294015.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-microcentro-51294015.html>
{'ambientes': '2',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Rivadabia al 800',
 'dormitorios': '1',
 'expensas': ' 24.000',
 'm2_cub': '43',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Departamento en Microcentro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-microcentro-51294015.html'}
2023-03-27 23:24:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-apto-profesional-en-alquiler-51383609.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:22 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-apto-profesional-en-alquiler-51383609.html>
{'ambientes': '1',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Avenida Martin Garcia 700',
 'expensas': ' 10.000',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Monoambiente Apto Profesional en Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-apto-profesional-en-alquiler-51383609.html'}
2023-03-27 23:24:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/oficina-en-palermo-51356784.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/oficina-en-palermo-51356784.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Scalabrini Ortiz al 2300',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '55',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Oficina en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/oficina-en-palermo-51356784.html'}
2023-03-27 23:24:27 [scrapy.extensions.logstats] INFO: Crawled 1340 pages (at 17 pages/min), scraped 1253 items (at 16 items/min)
2023-03-27 23:24:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-belgrano-olazabal-1900-51259205.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-belgrano-olazabal-1900-51259205.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Olazabal ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Alquiler - 2 Ambientes - Belgrano - Olazabal 1900 - Usd 500 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-belgrano-olazabal-1900-51259205.html'}
2023-03-27 23:24:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-en-b.-santa-rita-51353144.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-en-b.-santa-rita-51353144.html>
{'ambientes': '3',
 'barrio': ', Villa Santa Rita, Capital Federal',
 'direccion': 'Terrada al 1600',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '1',
 'moneda': '$',
 'title': 'PH en B. Santa Rita',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-en-b.-santa-rita-51353144.html'}
2023-03-27 23:24:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-congreso-balvanera-con-cochera.-51379200.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-congreso-balvanera-con-cochera.-51379200.html>
{'ambientes': '3',
 'barrio': ', Congreso, Capital Federal',
 'direccion': 'Riobamba al 400',
 'dormitorios': '1',
 'expensas': ' 45.000',
 'm2_cub': '94',
 'm2_total': '97',
 'moneda': 'USD',
 'title': 'Departamento en Congreso/balvanera con Cochera.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-congreso-balvanera-con-cochera.-51379200.html'}
2023-03-27 23:24:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semi-piso-de-4-amb-y-dep-con-coc.-com-y-patio-con-51316175.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semi-piso-de-4-amb-y-dep-con-coc.-com-y-patio-con-51316175.html>
{'ambientes': '4',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Montes De Oca 1100 1º',
 'dormitorios': '3',
 'expensas': ' 40.000',
 'm2_cub': '172',
 'm2_total': '172',
 'moneda': '$',
 'title': 'Semi Piso de 4 Amb y Dep con Coc. Com y Patio con Parrilla',
 'url': 'https://www.zonaprop.com.ar/propiedades/semi-piso-de-4-amb-y-dep-con-coc.-com-y-patio-con-51316175.html'}
2023-03-27 23:24:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-3-ambientes-cochera-madero-51323232.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-3-ambientes-cochera-madero-51323232.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 1500',
 'dormitorios': '2',
 'expensas': ' 55.800',
 'm2_cub': '80',
 'm2_total': '87',
 'moneda': 'USD',
 'title': 'Alquiler Departamento 3 Ambientes Cochera Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-3-ambientes-cochera-madero-51323232.html'}
2023-03-27 23:24:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-88.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-equipado-bulnes-2700-listo-para-51178688.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-equipado-bulnes-2700-listo-para-51178688.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Bulnes al 2700 y Av Ibertador',
 'dormitorios': '3',
 'expensas': ' 27.000',
 'm2_cub': '80',
 'm2_total': '81',
 'moneda': 'USD',
 'title': 'Alquiler Amoblado Equipado Bulnes 2700 - Listo Para Entrar Muy '
          'Elegante Temporario',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-equipado-bulnes-2700-listo-para-51178688.html'}
2023-03-27 23:24:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/barrio-norte-depto.-2-amb.-50-m-sup2--azcuenaga-y-m.-51383716.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/barrio-norte-depto.-2-amb.-50-m-sup2--azcuenaga-y-m.-51383716.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Azcuenaga 900, Barrio Norte, Capital Federal, Argentina.',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Barrio Norte, Depto. 2 Amb. 50 m², Azcuenaga y m. T. Alvear',
 'url': 'https://www.zonaprop.com.ar/propiedades/barrio-norte-depto.-2-amb.-50-m-sup2--azcuenaga-y-m.-51383716.html'}
2023-03-27 23:24:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-51249339.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:24:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:24:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-51249339.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Vuelta de Obligado 1900',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '73',
 'm2_total': '97',
 'moneda': '$',
 'title': 'Departamento',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-51249339.html'}
2023-03-27 23:25:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51357445.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51357445.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Salguero al 3000',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '252',
 'm2_total': '252',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51357445.html'}
2023-03-27 23:25:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-a-estrenar-palermo-hollywood-51239071.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-a-estrenar-palermo-hollywood-51239071.html>
{'ambientes': '1',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Humboldt 2400',
 'expensas': 0,
 'm2_cub': '38',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento a Estrenar Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-a-estrenar-palermo-hollywood-51239071.html'}
2023-03-27 23:25:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-cochera.-apto-51367032.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-cochera.-apto-51367032.html>
{'ambientes': '2',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'Fernandez al 200 3°',
 'dormitorios': '1',
 'expensas': ' 13.300',
 'm2_cub': '38',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes con Cochera. Apto Profesional. Floresta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-cochera.-apto-51367032.html'}
2023-03-27 23:25:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/divino-monoambiente-en-ayacucho-y-av-alvear-51312937.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/divino-monoambiente-en-ayacucho-y-av-alvear-51312937.html>
{'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Ayacucho 2000',
 'expensas': 0,
 'm2_cub': '22',
 'm2_total': '22',
 'moneda': 'USD',
 'title': 'Divino Monoambiente en Ayacucho y Av Alvear',
 'url': 'https://www.zonaprop.com.ar/propiedades/divino-monoambiente-en-ayacucho-y-av-alvear-51312937.html'}
2023-03-27 23:25:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-1-amb-amplio-balcon-c-parrilla-amenities-san-51236393.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-1-amb-amplio-balcon-c-parrilla-amenities-san-51236393.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'CALVO, CARLOS 1550. Entre Cevallos, virrey y Pte. saenz peña',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '33',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Alquiler 1 Amb Amplio Balcon C/parrilla Amenities San Telmo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-1-amb-amplio-balcon-c-parrilla-amenities-san-51236393.html'}
2023-03-27 23:25:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-puerto-madero-51349565.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-puerto-madero-51349565.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Departamento en Alquiler 4 amb C/cochera ART Maria, Puerto '
              'Madero. Piso Alto. Con Muebles',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '128',
 'm2_total': '139',
 'moneda': 'USD',
 'title': 'Departamento - Alquiler Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-puerto-madero-51349565.html'}
2023-03-27 23:25:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-palermo-3-ambientes-51365098.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-palermo-3-ambientes-51365098.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Avenida Coronel Diaz 2717',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '75',
 'm2_total': '75',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporal Palermo 3 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-palermo-3-ambientes-51365098.html'}
2023-03-27 23:25:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temportal-51213683.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temportal-51213683.html>
{'ambientes': '2',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Avenida Nazca 74',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes Alquiler Temportal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temportal-51213683.html'}
2023-03-27 23:25:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-villa-del-parque-51347380.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-villa-del-parque-51347380.html>
{'ambientes': '2',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'MELINCUE 2562. Entre Gral artigas',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '39',
 'm2_total': '39',
 'moneda': '$',
 'title': 'Alquiler 2 Ambientes, Villa del Parque',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-villa-del-parque-51347380.html'}
2023-03-27 23:25:27 [scrapy.extensions.logstats] INFO: Crawled 1358 pages (at 18 pages/min), scraped 1270 items (at 17 items/min)
2023-03-27 23:25:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-2-ambientes-en-caballito-51382408.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-2-ambientes-en-caballito-51382408.html>
{'ambientes': '2',
 'barrio': ', Caballito Norte, Caballito',
 'direccion': 'colombres y don bosco',
 'dormitorios': '1',
 'expensas': ' 21.000',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Excelente Departamento 2 Ambientes, en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-2-ambientes-en-caballito-51382408.html'}
2023-03-27 23:25:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/u$s-3.250-mas-exp.-4-amb-cochera-palermo-godoy-51261310.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/u$s-3.250-mas-exp.-4-amb-cochera-palermo-godoy-51261310.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Godoy Cruz al 3000',
 'dormitorios': '3',
 'expensas': ' 101.000',
 'm2_cub': '145',
 'm2_total': '145',
 'moneda': 'USD',
 'title': 'U$s 3.250 Más Exp. - 4 Amb - Cochera - Palermo - Godoy Cruz 3000 '
          '(Ans)',
 'url': 'https://www.zonaprop.com.ar/propiedades/u$s-3.250-mas-exp.-4-amb-cochera-palermo-godoy-51261310.html'}
2023-03-27 23:25:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/cervino-al-3600-piso-7-fte.-palermo.-balcon-terraza-51290834.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/cervino-al-3600-piso-7-fte.-palermo.-balcon-terraza-51290834.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Cerviño al 3600, 7 A. Temporario',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '76',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Cerviño Al 3600, Piso 7, Fte. Palermo. Balcon Terraza, Amoblado. '
          'Temporario',
 'url': 'https://www.zonaprop.com.ar/propiedades/cervino-al-3600-piso-7-fte.-palermo.-balcon-terraza-51290834.html'}
2023-03-27 23:25:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-temporal-san-51178595.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-temporal-san-51178595.html>
{'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Pasco 1188',
 'expensas': ' 1',
 'm2_cub': '36',
 'm2_total': '36',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente en Alquiler Temporal San Cristobal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-temporal-san-51178595.html'}
2023-03-27 23:25:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-89.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-para-destino-comercial:-instituto-residencia-51326134.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-para-destino-comercial:-instituto-residencia-51326134.html>
{'ambientes': '10',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Billinghurst 400',
 'expensas': 0,
 'm2_cub': '215',
 'm2_total': '275',
 'moneda': '$',
 'title': 'Casa Para Destino Comercial: Instituto, Residencia Universitaria, '
          'Clínica, Etc.',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-para-destino-comercial:-instituto-residencia-51326134.html'}
2023-03-27 23:25:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lindisimo-departamento-al-frente-con-balcon-51322717.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lindisimo-departamento-al-frente-con-balcon-51322717.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Zapata ',
 'expensas': ' 18.000',
 'm2_cub': '34',
 'm2_total': '39',
 'moneda': '$',
 'title': 'Lindísimo Departamento Al Frente con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/lindisimo-departamento-al-frente-con-balcon-51322717.html'}
2023-03-27 23:25:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-loft-en-alquiler-temporario.-palermo-51291910.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-loft-en-alquiler-temporario.-palermo-51291910.html>
{'ambientes': '1',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Dorrego 2080 8',
 'dormitorios': '1',
 'expensas': 0,
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Excelente Loft en Alquiler Temporario. Palermo Hollywood.',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-loft-en-alquiler-temporario.-palermo-51291910.html'}
2023-03-27 23:25:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/solo-uso-comercial-no-apto-vivienda-51071653.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/solo-uso-comercial-no-apto-vivienda-51071653.html>
{'ambientes': '5',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Ciudad DE LA PAZ 3300',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '125',
 'm2_total': '185',
 'moneda': '$',
 'title': 'Solo Uso Comercial - No Apto Vivienda',
 'url': 'https://www.zonaprop.com.ar/propiedades/solo-uso-comercial-no-apto-vivienda-51071653.html'}
2023-03-27 23:25:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-1-ambiente-nunez-51178568.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:25:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:25:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-1-ambiente-nunez-51178568.html>
{'ambientes': '1',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Av Libertador 7820',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporal 1 Ambiente Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-1-ambiente-nunez-51178568.html'}
2023-03-27 23:26:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/venta-faena-los-molinos-puerto-madero-51352673.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/venta-faena-los-molinos-puerto-madero-51352673.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1100',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Venta Faena Los Molinos - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/venta-faena-los-molinos-puerto-madero-51352673.html'}
2023-03-27 23:26:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-espinosa-al-100-51351971.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-espinosa-al-100-51351971.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'ESPINOSA 100. Entre Yerbal y Av rivadavia',
 'dormitorios': '1',
 'expensas': ' 13.500',
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes. | Espinosa Al 100',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-espinosa-al-100-51351971.html'}
2023-03-27 23:26:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/b.-norte:-1-amb.-balcon-al-frente-del-alto-palermo-51248811.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/b.-norte:-1-amb.-balcon-al-frente-del-alto-palermo-51248811.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Av. Coronel Diaz 1965',
 'expensas': ' 13.000',
 'm2_cub': '25',
 'm2_total': '27',
 'moneda': '$',
 'title': 'B. Norte: 1 Amb. Balcón Al Frente del "Alto Palermo" Coronel Diaz '
          '1900',
 'url': 'https://www.zonaprop.com.ar/propiedades/b.-norte:-1-amb.-balcon-al-frente-del-alto-palermo-51248811.html'}
2023-03-27 23:26:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-2-ambientes-villa-51262164.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:15 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-2-ambientes-villa-51262164.html>
{'ambientes': '2',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Velasco ',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '53',
 'm2_total': '53',
 'moneda': 'USD',
 'title': 'Departamento Alquiler Temporal 2 Ambientes Villa Crespo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-2-ambientes-villa-51262164.html'}
2023-03-27 23:26:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-recoleta-capital-federal-51384110.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:20 [scrapy.core.scraper] ERROR: Error processing {'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'QUINTANA MANUEL PRES 500',
 'dormitorios': '2',
 'expensas': ' 5.880.220',
 'm2_cub': '74',
 'm2_total': '82',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes - Recoleta, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-recoleta-capital-federal-51384110.html'}
Traceback (most recent call last):
  File "/home/faraday/.venvs/facultad/lib/python3.8/site-packages/twisted/internet/defer.py", line 892, in _runCallbacks
    current.result = callback(  # type: ignore[misc]
  File "/home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy/utils/defer.py", line 304, in f
    return deferred_from_coro(coro_f(*coro_args, **coro_kwargs))
  File "/home/faraday/Facultad/scanHouse/scanHouse/scanHouse/pipelines.py", line 48, in process_item
    float(item.get("expensas", 0)),
ValueError: could not convert string to float: ' 5.880.220'
2023-03-27 23:26:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-tipo-casa-3-amb-y-patio-al-frente-av-51386200.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-tipo-casa-3-amb-y-patio-al-frente-av-51386200.html>
{'ambientes': '3',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'Av. Mosconi 2554 1º A',
 'dormitorios': '2',
 'expensas': ' 6.500',
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Departamento Tipo Casa 3 Amb y Patio Al Frente - Av Mosconi Al 2500',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-tipo-casa-3-amb-y-patio-al-frente-av-51386200.html'}
2023-03-27 23:26:27 [scrapy.extensions.logstats] INFO: Crawled 1374 pages (at 16 pages/min), scraped 1284 items (at 14 items/min)
2023-03-27 23:26:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplio-semipiso-4-dorm.-dependencia-cochera-51173789.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplio-semipiso-4-dorm.-dependencia-cochera-51173789.html>
{'ambientes': '5',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'O´HIGGINS 1730',
 'dormitorios': '4',
 'expensas': ' 75.000',
 'm2_cub': '210',
 'm2_total': '240',
 'moneda': '$',
 'title': 'Amplio Semipiso 4 Dorm. - Dependencia - Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplio-semipiso-4-dorm.-dependencia-cochera-51173789.html'}
2023-03-27 23:26:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/en-alquiler-3-amb-amplio-piso-alto-con-balcon-super-51211389.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/en-alquiler-3-amb-amplio-piso-alto-con-balcon-super-51211389.html>
{'ambientes': '3',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Av Rivadavia 2880',
 'dormitorios': '2',
 'expensas': ' 19.500',
 'm2_cub': '58',
 'm2_total': '60',
 'moneda': '$',
 'title': 'En Alquiler 3 Amb Amplio Piso Alto con Balcon Super Luminoso Vista '
          'Abierta',
 'url': 'https://www.zonaprop.com.ar/propiedades/en-alquiler-3-amb-amplio-piso-alto-con-balcon-super-51211389.html'}
2023-03-27 23:26:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporal-de-3-ambientes!-torre-de-categoria!-51357319.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporal-de-3-ambientes!-torre-de-categoria!-51357319.html>
{'ambientes': '3',
 'barrio': ', Palermo Viejo, Palermo',
 'direccion': 'Gorriti y Mario Bravo',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '63',
 'm2_total': '68',
 'moneda': 'USD',
 'title': 'Alquiler Temporal de 3 Ambientes! Torre de Categoria!',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporal-de-3-ambientes!-torre-de-categoria!-51357319.html'}
2023-03-27 23:26:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquilo-depto-de-2-amb-51209090.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquilo-depto-de-2-amb-51209090.html>
{'ambientes': '2',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'bacacay ',
 'dormitorios': '1',
 'expensas': ' 9.000',
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Alquilo Depto de 2 Amb',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquilo-depto-de-2-amb-51209090.html'}
2023-03-27 23:26:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51249113.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51249113.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Figueroa Alcorta 3000',
 'dormitorios': '4',
 'expensas': ' 120.000',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Departamento en Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-chico-51249113.html'}
2023-03-27 23:26:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-90.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto.-3-amb.-estrenar.-con-balcon.-boedo-51387804.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto.-3-amb.-estrenar.-con-balcon.-boedo-51387804.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Avenida Independencia 3900',
 'dormitorios': '1',
 'expensas': ' 3.500',
 'm2_cub': '45',
 'm2_total': '47',
 'moneda': '$',
 'title': 'Alquiler Depto. 3 Amb. Estrenar. con Balcón. Boedo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto.-3-amb.-estrenar.-con-balcon.-boedo-51387804.html'}
2023-03-27 23:26:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-flores-3-ambientes-con-cochera-51326471.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-flores-3-ambientes-con-cochera-51326471.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Avellaneda 4072',
 'dormitorios': '2',
 'expensas': ' 24.000',
 'm2_cub': '70',
 'm2_total': '76',
 'moneda': '$',
 'title': 'Departamento en Flores - 3 Ambientes con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-flores-3-ambientes-con-cochera-51326471.html'}
2023-03-27 23:26:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-chateau-puerto-madero-51360086.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:26:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:26:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-chateau-puerto-madero-51360086.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Chateau Puerto Madero- 2 Ambientes -julieta Lanteri al 1300',
 'dormitorios': '1',
 'expensas': ' 72.800',
 'm2_cub': '84',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento en Chateau Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-chateau-puerto-madero-51360086.html'}
2023-03-27 23:27:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-villa-urquiza-amenities-doho-51164379.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-villa-urquiza-amenities-doho-51164379.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Echeverría 4200',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '52',
 'moneda': 'USD',
 'title': 'Alquiler 2 Ambientes Villa Urquiza Amenities Doho',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-villa-urquiza-amenities-doho-51164379.html'}
2023-03-27 23:27:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/disponibilidad-inmediata-51198038.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/disponibilidad-inmediata-51198038.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': "Camila O'gorman al 375 Piso 19 Unidad 04 Torre Oeste B - Coch "
              '1-079',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '110',
 'm2_total': '116',
 'moneda': 'USD',
 'title': 'Disponibilidad Inmediata',
 'url': 'https://www.zonaprop.com.ar/propiedades/disponibilidad-inmediata-51198038.html'}
2023-03-27 23:27:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-agronomia-51208687.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-agronomia-51208687.html>
{'ambientes': '3',
 'barrio': ', Agronomía, Capital Federal',
 'direccion': 'Gral. Rivas al 2400',
 'dormitorios': '2',
 'expensas': ' 24.500',
 'm2_cub': '57',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Departamento - Agronomia',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-agronomia-51208687.html'}
2023-03-27 23:27:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-estudio-en-alquiler-51270144.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-estudio-en-alquiler-51270144.html>
{'ambientes': '1',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Maure al 1700',
 'expensas': 0,
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': 'USD',
 'title': 'Departamento Estudio en Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-estudio-en-alquiler-51270144.html'}
2023-03-27 23:27:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-6-ambientes-con-patio-y-garage.-alquiler-51328197.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-6-ambientes-con-patio-y-garage.-alquiler-51328197.html>
{'ambientes': '6',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Mendoza 4400 PB',
 'dormitorios': '5',
 'expensas': 0,
 'm2_cub': '200',
 'm2_total': '225',
 'moneda': 'USD',
 'title': 'Casa 6 Ambientes, con Patio y Garage. Alquiler Comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-6-ambientes-con-patio-y-garage.-alquiler-51328197.html'}
2023-03-27 23:27:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-casa-villa-gral.-mitre-51156005.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-casa-villa-gral.-mitre-51156005.html>
{'ambientes': '5',
 'barrio': ', Villa General Mitre, Capital Federal',
 'direccion': 'Juan A Garcia al 2400',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '190',
 'm2_total': '226',
 'moneda': 'USD',
 'title': 'Excelente Casa - Villa Gral. Mitre',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-casa-villa-gral.-mitre-51156005.html'}
2023-03-27 23:27:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palermo-soho-2-ambientes-contrafrente!-51336824.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palermo-soho-2-ambientes-contrafrente!-51336824.html>
{'ambientes': '2',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Guatemala 5800',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '40',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Palermo Soho 2 Ambientes Contrafrente!',
 'url': 'https://www.zonaprop.com.ar/propiedades/palermo-soho-2-ambientes-contrafrente!-51336824.html'}
2023-03-27 23:27:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-palermo-51379353.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-palermo-51379353.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Gurruchaga 2200',
 'dormitorios': '2',
 'expensas': ' 42',
 'm2_cub': '75',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Departamento en Alquiler de 2 Dorm. en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-palermo-51379353.html'}
2023-03-27 23:27:27 [scrapy.extensions.logstats] INFO: Crawled 1391 pages (at 17 pages/min), scraped 1300 items (at 16 items/min)
2023-03-27 23:27:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/callao-1200-entre-juncal-y-arenales-51279739.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/callao-1200-entre-juncal-y-arenales-51279739.html>
{'ambientes': '5',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Callao al 1200',
 'dormitorios': '2',
 'expensas': ' 24.000',
 'm2_cub': '200',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Callao 1200 Entre Juncal y Arenales',
 'url': 'https://www.zonaprop.com.ar/propiedades/callao-1200-entre-juncal-y-arenales-51279739.html'}
2023-03-27 23:27:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-dos-ambientes-en-belgrano-51387352.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-dos-ambientes-en-belgrano-51387352.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Palpa al 2400',
 'dormitorios': '1',
 'expensas': 0,
 'moneda': 'USD',
 'title': 'Departamento Dos Ambientes en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-dos-ambientes-en-belgrano-51387352.html'}
2023-03-27 23:27:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-palermo-51325611.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-palermo-51325611.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Malabia al 1700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '30',
 'm2_total': '33',
 'moneda': '$',
 'title': 'PH - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-palermo-51325611.html'}
2023-03-27 23:27:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-amoblado-alquiler-palermo-nuevo-con-51185344.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-amoblado-alquiler-palermo-nuevo-con-51185344.html>
{'ambientes': '2',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Beruti al 4500',
 'dormitorios': '1',
 'expensas': ' 24.000',
 'm2_cub': '47',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Departamento Amoblado Alquiler Palermo Nuevo con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-amoblado-alquiler-palermo-nuevo-con-51185344.html'}
2023-03-27 23:27:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-ambientes-51265027.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-ambientes-51265027.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Arenales y Cerrito, Alquiler 3 Ambientes',
 'dormitorios': '2',
 'expensas': 0,
 'moneda': 'USD',
 'title': 'Departamento en Alquiler 3 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-3-ambientes-51265027.html'}
2023-03-27 23:27:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-91.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-amb-al-contra-frente-c-balcon-1-2-cuadra-metrobus-51163355.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-amb-al-contra-frente-c-balcon-1-2-cuadra-metrobus-51163355.html>
{'ambientes': '3',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'SEGUROLA 915',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '60',
 'm2_total': '65',
 'moneda': '$',
 'title': '3 Amb Al Contra Frente C/balcon (1/2 Cuadra Metrobus) - Lavadero',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-amb-al-contra-frente-c-balcon-1-2-cuadra-metrobus-51163355.html'}
2023-03-27 23:27:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-excelente-monoambiente-c-balcon-chacarita-51388188.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:27:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:27:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-excelente-monoambiente-c-balcon-chacarita-51388188.html>
{'ambientes': '1',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'Avenida Corrientes 6300',
 'expensas': ' 15.305',
 'm2_cub': '31',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Alquiler Excelente Monoambiente C/balcón - Chacarita',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-excelente-monoambiente-c-balcon-chacarita-51388188.html'}
2023-03-27 23:28:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304908.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:28:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304908.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Felipe Vallese al 1600',
 'dormitorios': '2',
 'expensas': ' 8.000',
 'm2_cub': '62',
 'm2_total': '68',
 'moneda': '$',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304908.html'}
2023-03-27 23:28:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-de-3-ambientes-con-patio-cubierto-sin-expensas-51247918.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:28:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-de-3-ambientes-con-patio-cubierto-sin-expensas-51247918.html>
{'ambientes': '3',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'AVENIDA INDEPENDENCIA 1500',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '56',
 'm2_total': '68',
 'moneda': '$',
 'title': 'PH de 3 Ambientes con Patio Cubierto Sin Expensas (Reservado)',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-de-3-ambientes-con-patio-cubierto-sin-expensas-51247918.html'}
2023-03-27 23:28:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-torre-todo-luz-al-frente-51181422.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:28:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-torre-todo-luz-al-frente-51181422.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Bulnes & Avenida Cerviño',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '55',
 'm2_total': '58',
 'moneda': '$',
 'title': 'Departamento en Torre Todo Luz Al Frente',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-torre-todo-luz-al-frente-51181422.html'}
2023-03-27 23:28:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-51356008.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:28:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-51356008.html>
{'ambientes': '1',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'ALBERTI',
 'dormitorios': '1',
 'expensas': ' 13.000',
 'm2_cub': '27',
 'moneda': '$',
 'title': 'Amplio Monoambiente',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-51356008.html'}
2023-03-27 23:28:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51325451.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:28:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51325451.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Malabia al 1700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '30',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Departamento en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51325451.html'}
2023-03-27 23:28:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51381918.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:28:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51381918.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Alicia Moreau de Justo al 1800',
 'dormitorios': '2',
 'expensas': ' 52.000',
 'm2_cub': '59',
 'm2_total': '62',
 'moneda': '$',
 'title': 'Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51381918.html'}
2023-03-27 23:28:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-sin-balcon-en-villa-51262637.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:28:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-sin-balcon-en-villa-51262637.html>
{'ambientes': '2',
 'barrio': ', Villa Lugano, Capital Federal',
 'direccion': 'Crisostomo Alvarez 4600',
 'dormitorios': '1',
 'expensas': ' 9.000',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Alquiler Departamento 2 Ambientes Sin Balcón en Villa Lugano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-sin-balcon-en-villa-51262637.html'}
2023-03-27 23:28:27 [scrapy.extensions.logstats] INFO: Crawled 1406 pages (at 15 pages/min), scraped 1314 items (at 14 items/min)
2023-03-27 23:28:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/triplex-3-4-amb-cochera-patio-bano-y-toilette-51241931.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:28:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/triplex-3-4-amb-cochera-patio-bano-y-toilette-51241931.html>
{'ambientes': '4',
 'barrio': ', Versalles, Capital Federal',
 'direccion': 'IRIGOYEN 1684',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '120',
 'moneda': '$',
 'title': 'Triplex 3 / 4 Amb Cochera Patio Baño y Toilette',
 'url': 'https://www.zonaprop.com.ar/propiedades/triplex-3-4-amb-cochera-patio-bano-y-toilette-51241931.html'}
2023-03-27 23:28:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-palermo-51322161.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:28:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-palermo-51322161.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Güemes 4800',
 'dormitorios': '2',
 'expensas': ' 7.100',
 'm2_cub': '85',
 'm2_total': '85',
 'moneda': '$',
 'title': 'Departamento en Alquiler de 2 Dorm. en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-palermo-51322161.html'}
2023-03-27 23:28:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-juan-agustin-garcia-al-51221593.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:28:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-juan-agustin-garcia-al-51221593.html>
{'ambientes': '2',
 'barrio': ', Versalles, Capital Federal',
 'direccion': 'JUAN AGUSTIN GARCIA 5900. Entre Av j b justo y San blas',
 'dormitorios': '1',
 'expensas': ' 6.000',
 'm2_cub': '39',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes. | Juan Agustin Garcia Al 5900',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-juan-agustin-garcia-al-51221593.html'}
2023-03-27 23:28:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplisimo-mono-44-m-sup2--excelente-ubicacion-uso-51319045.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplisimo-mono-44-m-sup2--excelente-ubicacion-uso-51319045.html>
{'ambientes': '1',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'miller 2300',
 'expensas': ' 15.000',
 'm2_cub': '40',
 'm2_total': '44',
 'moneda': '$',
 'title': 'Amplisimo Mono 44 m², Excelente Ubicacion, Uso Profesional',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplisimo-mono-44-m-sup2--excelente-ubicacion-uso-51319045.html'}
2023-03-27 23:28:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-a-estrenar-3-amb-2-banos-y-2-patios-en-pb-uso-51373659.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-a-estrenar-3-amb-2-banos-y-2-patios-en-pb-uso-51373659.html>
{'ambientes': '3',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'Ulrico Schmidel ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '55',
 'm2_total': '75',
 'moneda': '$',
 'title': 'PH a Estrenar 3 Amb, 2 Baños y 2 Patios en Pb - Uso Comercial!',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-a-estrenar-3-amb-2-banos-y-2-patios-en-pb-uso-51373659.html'}
2023-03-27 23:28:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51380926.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51380926.html>
{'ambientes': '3',
 'barrio': ', Almagro Sur, Almagro',
 'direccion': 'General Urquiza al 1000',
 'dormitorios': '2',
 'expensas': ' 23.700',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': '3amb · 60 m² · Nvo! S/ambl! Bcón Fte! 2 Aa! Pile! Sum! Parr! Gym! '
          'Full Amenities!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51380926.html'}
2023-03-27 23:28:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-muy-amplio-con-balcon-y-51380129.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-muy-amplio-con-balcon-y-51380129.html>
{'ambientes': '1',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Lima al 1100',
 'expensas': ' 22.000',
 'm2_cub': '38',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Alquiler Monoambiente Muy Amplio con Balcon y Amenities, Lima Al '
          '1100',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-muy-amplio-con-balcon-y-51380129.html'}
2023-03-27 23:28:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-92.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:28:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excepc-s-piso-4-amb-depc-fte-2-coch-fijas-sin-muebles.-51329253.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excepc-s-piso-4-amb-depc-fte-2-coch-fijas-sin-muebles.-51329253.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Ohiggins al 1900. Excepc S/piso 4 Amb +depc+2 Coch Fijas '
              'Amoblado',
 'dormitorios': '3',
 'expensas': ' 80.000',
 'm2_cub': '150',
 'm2_total': '160',
 'moneda': 'USD',
 'title': 'Excepc S/piso 4 Amb Depc Fte 2 Coch Fijas Sin Muebles. Vigil Pisc '
          'Parr Sum Vig 24h',
 'url': 'https://www.zonaprop.com.ar/propiedades/excepc-s-piso-4-amb-depc-fte-2-coch-fijas-sin-muebles.-51329253.html'}
2023-03-27 23:29:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-130-m-sup2--2-51367508.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-130-m-sup2--2-51367508.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Parera al 100',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '130',
 'm2_total': '130',
 'moneda': 'USD',
 'title': 'Alquiler - Departamento - Recoleta - 130 m² - 2 Dorm. - 1 Cochera - '
          '1 Dep',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-130-m-sup2--2-51367508.html'}
2023-03-27 23:29:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-balcon-aterrazado-51373063.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-balcon-aterrazado-51373063.html>
{'ambientes': '1',
 'barrio': ', Cid Campeador, Caballito',
 'direccion': 'Avenida Acoyte 193',
 'expensas': ' 9.500',
 'm2_cub': '48',
 'm2_total': '51',
 'moneda': '$',
 'title': 'Amplio Monoambiente, balcón Aterrazado',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplio-monoambiente-balcon-aterrazado-51373063.html'}
2023-03-27 23:29:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-del-libertador-8320.-departamento-dos-ambientes.-51320288.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-del-libertador-8320.-departamento-dos-ambientes.-51320288.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av. del Libertador 8320',
 'dormitorios': '1',
 'expensas': ' 1.032',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Av del Libertador 8320. Departamento Dos Ambientes. Cocina '
          'Independiente.',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-del-libertador-8320.-departamento-dos-ambientes.-51320288.html'}
2023-03-27 23:29:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/moderno-contrafrente-silencioso.-2-banos-51299993.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/moderno-contrafrente-silencioso.-2-banos-51299993.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Laprida 1700 1°',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Moderno, Contrafrente, Silencioso. 2 Baños',
 'url': 'https://www.zonaprop.com.ar/propiedades/moderno-contrafrente-silencioso.-2-banos-51299993.html'}
2023-03-27 23:29:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-ubicacion-chile-300-51386604.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:18 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-ubicacion-chile-300-51386604.html>
{'ambientes': '3',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Chile 300',
 'expensas': ' 18.000',
 'm2_cub': '52',
 'm2_total': '52',
 'moneda': '$',
 'title': 'Excelente Ubicación - Chile 300',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-ubicacion-chile-300-51386604.html'}
2023-03-27 23:29:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-monoambiente-amoblado-edificio-con-amenities-51339687.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-monoambiente-amoblado-edificio-con-amenities-51339687.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'FITZ ROY ',
 'expensas': ' 1',
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Excelente Monoambiente Amoblado Edificio con Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-monoambiente-amoblado-edificio-con-amenities-51339687.html'}
2023-03-27 23:29:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-amoblado-ituzaingo-al-600-51386858.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-amoblado-ituzaingo-al-600-51386858.html>
{'ambientes': '2',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Ituzaingo ',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': '2 Ambientes Amoblado - Ituzaingo Al 600',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-amoblado-ituzaingo-al-600-51386858.html'}
2023-03-27 23:29:27 [scrapy.extensions.logstats] INFO: Crawled 1422 pages (at 16 pages/min), scraped 1329 items (at 15 items/min)
2023-03-27 23:29:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/seguridad-amenities-y-2-cocheras-51328084.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/seguridad-amenities-y-2-cocheras-51328084.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Maure 1700',
 'dormitorios': '4',
 'expensas': ' 150.000',
 'm2_cub': '250',
 'm2_total': '250',
 'moneda': 'USD',
 'title': 'Seguridad, Amenities y 2 Cocheras',
 'url': 'https://www.zonaprop.com.ar/propiedades/seguridad-amenities-y-2-cocheras-51328084.html'}
2023-03-27 23:29:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-amoblado-para-alquiler-51235065.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-amoblado-para-alquiler-51235065.html>
{'ambientes': '2',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Avenida del Libertador al 200',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Excelente Departamento Amoblado Para Alquiler Temporario',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-amoblado-para-alquiler-51235065.html'}
2023-03-27 23:29:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-vivienda-apto-prof-en-recoleta-las-heras-a-m-de-51236232.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-vivienda-apto-prof-en-recoleta-las-heras-a-m-de-51236232.html>
{'ambientes': '10',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Las Heras al 1600',
 'dormitorios': '5',
 'expensas': ' 25.000',
 'm2_cub': '600',
 'm2_total': '600',
 'moneda': 'USD',
 'title': 'Piso Vivienda Apto Prof en Recoleta Las Heras a m de La Plaza',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-vivienda-apto-prof-en-recoleta-las-heras-a-m-de-51236232.html'}
2023-03-27 23:29:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-caballito-3-ambientes-libre-51360628.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-caballito-3-ambientes-libre-51360628.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Senillosa 1000',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '52',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Alquiler Temporario - Caballito - 3 Ambientes - Libre Ya',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-caballito-3-ambientes-libre-51360628.html'}
2023-03-27 23:29:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-93.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amoblado-excelente-5-ambientes-con-dependencia-51348378.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amoblado-excelente-5-ambientes-con-dependencia-51348378.html>
{'ambientes': '5',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Maipu 1266',
 'dormitorios': '4',
 'expensas': ' 184.000',
 'm2_cub': '250',
 'm2_total': '250',
 'moneda': 'USD',
 'title': 'Amoblado - Excelente 5 Ambientes con Dependencia',
 'url': 'https://www.zonaprop.com.ar/propiedades/amoblado-excelente-5-ambientes-con-dependencia-51348378.html'}
2023-03-27 23:29:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-las-canitas-la-imprenta-51246666.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-las-canitas-la-imprenta-51246666.html>
{'ambientes': '3',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Migueletes al 800, Las Cañitas',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '100',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Las Cañitas - La Imprenta, Full Amenities, '
          'Seguridad y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-las-canitas-la-imprenta-51246666.html'}
2023-03-27 23:29:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/av-libertador-672-dpto-2-ambientes-reciclado-a-nuevo-51358359.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/av-libertador-672-dpto-2-ambientes-reciclado-a-nuevo-51358359.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'LIBERTADOR 672',
 'expensas': ' 40.000',
 'm2_cub': '51',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Av Libertador 672 Dpto 2 Ambientes Reciclado a Nuevo, Balcon '
          'Corrido!',
 'url': 'https://www.zonaprop.com.ar/propiedades/av-libertador-672-dpto-2-ambientes-reciclado-a-nuevo-51358359.html'}
2023-03-27 23:29:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51365417.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:29:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:29:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51365417.html>
{'ambientes': '7',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av. Alvear al 1.800, 6 Ambientes, 4 Dormitorios, Dependencia '
              'Doble y Cochera.',
 'dormitorios': '4',
 'expensas': ' 100.000',
 'm2_cub': '180',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51365417.html'}
2023-03-27 23:30:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-apto-profesional-contrafrente-balcon-51360330.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:30:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-apto-profesional-contrafrente-balcon-51360330.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Río de Janeiro 47',
 'dormitorios': '2',
 'expensas': ' 34.000',
 'm2_cub': '67',
 'm2_total': '70',
 'moneda': '$',
 'title': '3 Ambientes - Apto Profesional - Contrafrente - Balcon - '
          'Dependencia - Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-apto-profesional-contrafrente-balcon-51360330.html'}
2023-03-27 23:30:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/virasoro-1000-departamento-de-2-ambientes-en-alquiler-51372095.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:30:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/virasoro-1000-departamento-de-2-ambientes-en-alquiler-51372095.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Virasoro al 1000',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Virasoro 1000 Departamento de 2 Ambientes en Alquiler en Caballito '
          'C/balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/virasoro-1000-departamento-de-2-ambientes-en-alquiler-51372095.html'}
2023-03-27 23:30:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-2-ambientes-en-51179094.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:07 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:30:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-2-ambientes-en-51179094.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Felix Lora 100',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporal 2 Ambientes en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-2-ambientes-en-51179094.html'}
2023-03-27 23:30:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-dpto-3-amb-almagro-a-estrenar-51284144.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:30:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-dpto-3-amb-almagro-a-estrenar-51284144.html>
{'ambientes': '3',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Gascón 900',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_cub': '70',
 'm2_total': '72',
 'moneda': '$',
 'title': 'Alquiler Dpto 3 Amb Almagro a Estrenar',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-dpto-3-amb-almagro-a-estrenar-51284144.html'}
2023-03-27 23:30:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-con-cochera-mataderos.-51296337.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:30:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-con-cochera-mataderos.-51296337.html>
{'ambientes': '4',
 'barrio': ', Mataderos, Capital Federal',
 'direccion': 'Av. Lisandro de la Torre 1563',
 'dormitorios': '3',
 'expensas': ' 25.000',
 'm2_cub': '100',
 'm2_total': '100',
 'moneda': '$',
 'title': 'Depto 4 Ambientes con Cochera - Mataderos.',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-con-cochera-mataderos.-51296337.html'}
2023-03-27 23:30:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-c-2patios-en-p.-baja-51274419.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-c-2patios-en-p.-baja-51274419.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'BLANCO ENCALADA 5100. Entre Bauness',
 'dormitorios': '1',
 'expensas': ' 11.000',
 'm2_cub': '39',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Alquiler Departamento 2 Ambientes C/2patios en P. Baja Villa',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-c-2patios-en-p.-baja-51274419.html'}
2023-03-27 23:30:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-contra-frente-1er-piso-con-51317941.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-contra-frente-1er-piso-con-51317941.html>
{'ambientes': '4',
 'barrio': ', Liniers, Capital Federal',
 'direccion': 'MARTINIANO LEGUIZAMON 339',
 'dormitorios': '3',
 'expensas': ' 19.000',
 'm2_cub': '77',
 'm2_total': '79',
 'moneda': '$',
 'title': 'Departamento 4 Ambientes Contra Frente 1er Piso con Balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-contra-frente-1er-piso-con-51317941.html'}
2023-03-27 23:30:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-en-51179438.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-en-51179438.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'CUCHA CUCHA 1200',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '100',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporal 3 Ambientes en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-en-51179438.html'}
2023-03-27 23:30:27 [scrapy.extensions.logstats] INFO: Crawled 1439 pages (at 17 pages/min), scraped 1345 items (at 16 items/min)
2023-03-27 23:30:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-94.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:30:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-grande-belgrano-cazadores-51282127.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-grande-belgrano-cazadores-51282127.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cazadores ',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Alquiler - Monoambiente Grande - Belgrano - Cazadores 1800 - Usd '
          '800todo Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-grande-belgrano-cazadores-51282127.html'}
2023-03-27 23:30:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-recoleta-cerrito-1500-usd-51259803.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:30:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-recoleta-cerrito-1500-usd-51259803.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Cerrito ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Alquiler - 3 Ambientes - Recoleta - Cerrito 1500 - Usd 900',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-recoleta-cerrito-1500-usd-51259803.html'}
2023-03-27 23:30:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51270154.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:30:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51270154.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Oro al 2300',
 'expensas': 0,
 'm2_cub': '23',
 'm2_total': '28',
 'moneda': '$',
 'title': 'Departamento en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51270154.html'}
2023-03-27 23:30:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/mario-bravo-y-sarmiento:-impecable-duplex-terraza-51361932.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:30:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/mario-bravo-y-sarmiento:-impecable-duplex-terraza-51361932.html>
{'ambientes': '5',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Mario Bravo 300',
 'dormitorios': '4',
 'expensas': ' 30.000',
 'm2_cub': '151',
 'm2_total': '199',
 'moneda': 'USD',
 'title': 'Mario Bravo y Sarmiento: Impecable Duplex Terraza Propia con '
          'Parrilla y Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/mario-bravo-y-sarmiento:-impecable-duplex-terraza-51361932.html'}
2023-03-27 23:30:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-3-ambientes-dependencia-51308145.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:30:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-3-ambientes-dependencia-51308145.html>
{'ambientes': '4',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Av. Sta Fe 900',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Excelente Departamento 3 Ambientes + Dependencia (Amoblado y '
          'Equipado)',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-3-ambientes-dependencia-51308145.html'}
2023-03-27 23:30:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-3-amb.-al-frente-c-2-balcones-exc.-estado-51384747.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-3-amb.-al-frente-c-2-balcones-exc.-estado-51384747.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'FLORIDA 939. Entre Alvear, marcelo t. de y Paraguay',
 'dormitorios': '2',
 'expensas': ' 29.000',
 'm2_cub': '69',
 'm2_total': '75',
 'moneda': '$',
 'title': 'Hermoso 3 Amb. Al Frente C/ 2 Balcones - Exc. Estado',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-3-amb.-al-frente-c-2-balcones-exc.-estado-51384747.html'}
2023-03-27 23:30:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/panama-933-1-ambiente-amplio-cocina-separada-lavadero-51244975.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/panama-933-1-ambiente-amplio-cocina-separada-lavadero-51244975.html>
{'ambientes': '1',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'PANAMA 933',
 'expensas': ' 8.000',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Panama 933 1 Ambiente Amplio Cocina Separada Lavadero Muy Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/panama-933-1-ambiente-amplio-cocina-separada-lavadero-51244975.html'}
2023-03-27 23:30:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-temporario-palermo-51379403.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:30:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-temporario-palermo-51379403.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Quartier Dorrego',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Quartier Dorrego - Alquiler Temporario - Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-temporario-palermo-51379403.html'}
2023-03-27 23:31:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-nunez-full-amenities-51277200.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-nunez-full-amenities-51277200.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Deheza 1671',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '54',
 'm2_total': '54',
 'moneda': 'USD',
 'title': 'Departamento Alquiler Nuñez Full Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-nunez-full-amenities-51277200.html'}
2023-03-27 23:31:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso.-divino-departamento.-vista-al-rio-y-abierta-51253539.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso.-divino-departamento.-vista-al-rio-y-abierta-51253539.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1500 Alquiler Temporario',
 'dormitorios': '2',
 'expensas': ' 77.000',
 'm2_cub': '105',
 'm2_total': '115',
 'moneda': 'USD',
 'title': 'Semipiso. Divino Departamento. Vista Al Rìo y Abierta a Plaza! '
          'Amoblado. 2 Dorm. 1 Cochera 1 B',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso.-divino-departamento.-vista-al-rio-y-abierta-51253539.html'}
2023-03-27 23:31:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torres-de-ramsay-1945-alquiler-amoblado-3-dorm.-mas-51212286.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torres-de-ramsay-1945-alquiler-amoblado-3-dorm.-mas-51212286.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Ramsay 1945',
 'dormitorios': '3',
 'expensas': ' 110.000',
 'm2_cub': '158',
 'm2_total': '158',
 'moneda': 'USD',
 'title': 'Torres de Ramsay 1945 - Alquiler Amoblado 3 Dorm. Más Depend. '
          'Estilo Club, Todos Los Amenities.',
 'url': 'https://www.zonaprop.com.ar/propiedades/torres-de-ramsay-1945-alquiler-amoblado-3-dorm.-mas-51212286.html'}
2023-03-27 23:31:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-retiro-maipu-700-usd-600-51250068.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-retiro-maipu-700-usd-600-51250068.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Maipu ',
 'expensas': ' 18.000',
 'm2_cub': '72',
 'm2_total': '72',
 'moneda': 'USD',
 'title': 'Alquiler - 3 Ambientes - Retiro - Maipu 700 - Usd 600 + Gastos',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-3-ambientes-retiro-maipu-700-usd-600-51250068.html'}
2023-03-27 23:31:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-95.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:31:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51364603.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51364603.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Av. Boedo 1900. Entre Av. chiclana y Metán',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '42',
 'm2_total': '46',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51364603.html'}
2023-03-27 23:31:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recien-reciclado!-51330471.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:31:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recien-reciclado!-51330471.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Juncal al 1200',
 'dormitorios': '3',
 'expensas': ' 77.000',
 'm2_cub': '77',
 'm2_total': '84',
 'moneda': 'USD',
 'title': 'Recién Reciclado!',
 'url': 'https://www.zonaprop.com.ar/propiedades/recien-reciclado!-51330471.html'}
2023-03-27 23:31:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-con-patio-y-parilla.-51296295.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:31:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-con-patio-y-parilla.-51296295.html>
{'ambientes': '1',
 'barrio': ', Constitución, Capital Federal',
 'direccion': 'Bernardo de Irigoyen 1300',
 'expensas': ' 20.000',
 'm2_cub': '32',
 'm2_total': '71',
 'moneda': '$',
 'title': 'Monoambiente con Patio y Parilla.',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-con-patio-y-parilla.-51296295.html'}
2023-03-27 23:31:27 [scrapy.extensions.logstats] INFO: Crawled 1456 pages (at 17 pages/min), scraped 1360 items (at 15 items/min)
2023-03-27 23:31:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-divino-monoambiente-amoblado-y-equipado-51362294.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-divino-monoambiente-amoblado-y-equipado-51362294.html>
{'ambientes': '1',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Pasaje Virasoro al 2300',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': 'USD',
 'title': 'Alquiler Divino Monoambiente Amoblado y Equipado',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-divino-monoambiente-amoblado-y-equipado-51362294.html'}
2023-03-27 23:31:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquler-departamento-4-ambientes-palermo-51273756.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquler-departamento-4-ambientes-palermo-51273756.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Av. Figueroa Alcorta al 3500',
 'dormitorios': '3',
 'expensas': ' 40.000',
 'm2_total': '106',
 'moneda': 'USD',
 'title': 'Alquler, Departamento 4 Ambientes, Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquler-departamento-4-ambientes-palermo-51273756.html'}
2023-03-27 23:31:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-al-frente-con-balcon-super-moderno-51376792.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-al-frente-con-balcon-super-moderno-51376792.html>
{'ambientes': '1',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'FRAGATA SARMIENTO 1854',
 'expensas': ' 10.000',
 'm2_cub': '37',
 'moneda': '$',
 'title': 'Monoambiente Al Frente con Balcon Super Moderno Fragata Sarmirnto '
          '1854',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-al-frente-con-balcon-super-moderno-51376792.html'}
2023-03-27 23:31:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/san-telmo-360-moderno-monoambiente-apto-profesional-51383864.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/san-telmo-360-moderno-monoambiente-apto-profesional-51383864.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Defensa al 1300',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': '$',
 'title': 'San Telmo 360 - Moderno Monoambiente Apto Profesional - Amenities - '
          'Seguridad 24has',
 'url': 'https://www.zonaprop.com.ar/propiedades/san-telmo-360-moderno-monoambiente-apto-profesional-51383864.html'}
2023-03-27 23:31:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51152439.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51152439.html>
{'ambientes': '1',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Distrito Quartier.',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '48',
 'm2_total': '48',
 'moneda': 'USD',
 'title': 'Distrito Quartier - Excelente Loft en Alquiler Temporario.',
 'url': 'https://www.zonaprop.com.ar/propiedades/distrito-quartier-excelente-loft-en-alquiler-51152439.html'}
2023-03-27 23:31:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-96.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:31:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-dpto-2-ambientes-balcon-cochera-apto-51369338.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-dpto-2-ambientes-balcon-cochera-apto-51369338.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Valle 100',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '52',
 'm2_total': '52',
 'moneda': '$',
 'title': 'Alquiler - Dpto 2 Ambientes - Balcón - Cochera - Apto Profesional',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-dpto-2-ambientes-balcon-cochera-apto-51369338.html'}
2023-03-27 23:31:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-oceana-51358180.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:31:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:31:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-oceana-51358180.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Oceana 3 Ambientes 158m² A Estrenar Con Cochera - Puerto Madero',
 'dormitorios': '2',
 'expensas': ' 140.000',
 'm2_cub': '131',
 'm2_total': '158',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero - Oceana',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-oceana-51358180.html'}
2023-03-27 23:32:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-amb-uso-profesional-en-caballito-51343201.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-amb-uso-profesional-en-caballito-51343201.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Avellaneda 424',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '45',
 'm2_total': '49',
 'moneda': '$',
 'title': 'Alquiler 2 Amb Uso Profesional en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-amb-uso-profesional-en-caballito-51343201.html'}
2023-03-27 23:32:05 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-a-estrenar-frente-a-plaza-4-ambientes-patio-51373756.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:05 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-a-estrenar-frente-a-plaza-4-ambientes-patio-51373756.html>
{'ambientes': '4',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Neuquen al 2800',
 'dormitorios': '4',
 'expensas': ' 50.000',
 'm2_cub': '120',
 'm2_total': '170',
 'moneda': 'USD',
 'title': 'Piso a Estrenar Frente a Plaza 4 Ambientes Patio Propio Sum y '
          'Terraza Parrilla Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-a-estrenar-frente-a-plaza-4-ambientes-patio-51373756.html'}
2023-03-27 23:32:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-1-amb-c-balcon-en-recoleta-51171534.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-1-amb-c-balcon-en-recoleta-51171534.html>
{'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Callao 1541',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '32',
 'm2_total': '38',
 'moneda': 'USD',
 'title': 'Alquiler Temporario 1 Amb C/ Balcón en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-1-amb-c-balcon-en-recoleta-51171534.html'}
2023-03-27 23:32:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-palermo-capital-federal-51344060.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-palermo-capital-federal-51344060.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'SCALABRINI ORTIZ RAUL 2600',
 'dormitorios': '2',
 'expensas': ' 27.600',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes - Palermo, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-palermo-capital-federal-51344060.html'}
2023-03-27 23:32:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-lateral-luminoso-cocina-y-bano-equipados-51242549.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-lateral-luminoso-cocina-y-bano-equipados-51242549.html>
{'ambientes': '2',
 'barrio': ', Villa General Mitre, Capital Federal',
 'direccion': 'AV GAONA 3042',
 'dormitorios': '1',
 'expensas': ' 8.000',
 'm2_cub': '42',
 'moneda': '$',
 'title': '2 Ambientes Lateral Luminoso Cocina y Baño Equipados Lavadero Gaona '
          '3042',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-lateral-luminoso-cocina-y-bano-equipados-51242549.html'}
2023-03-27 23:32:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-ubicado-en-belgrano-51311986.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-ubicado-en-belgrano-51311986.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Federico Lacroze 2200',
 'dormitorios': '4',
 'expensas': 0,
 'm2_cub': '240',
 'm2_total': '240',
 'moneda': 'USD',
 'title': 'Departamento Piso en Alquiler Ubicado en Belgrano, Capital Federal, '
          'Buenos Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-piso-en-alquiler-ubicado-en-belgrano-51311986.html'}
2023-03-27 23:32:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51225152.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51225152.html>
{'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Ecuador al 1500',
 'expensas': 0,
 'm2_total': '1',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51225152.html'}
2023-03-27 23:32:27 [scrapy.extensions.logstats] INFO: Crawled 1471 pages (at 15 pages/min), scraped 1374 items (at 14 items/min)
2023-03-27 23:32:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporal-en-microcentro-51184928.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporal-en-microcentro-51184928.html>
{'ambientes': '2',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Esmeralda al 700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Alquiler Temporal en Microcentro',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporal-en-microcentro-51184928.html'}
2023-03-27 23:32:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-piso-3-dorm.-en-suite-2-cocheras-full-51354632.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-piso-3-dorm.-en-suite-2-cocheras-full-51354632.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Artilleros al 1850 -y Pampa - Artilleros Plaza',
 'dormitorios': '3',
 'expensas': ' 100.000',
 'm2_cub': '202',
 'm2_total': '235',
 'moneda': 'USD',
 'title': 'Alquiler - Piso 3 Dorm. en Suite - 2 Cocheras - Full Amenities - '
          'Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-piso-3-dorm.-en-suite-2-cocheras-full-51354632.html'}
2023-03-27 23:32:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-97.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-amb.-muy-buen-estado-en-villa-del-51346941.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-amb.-muy-buen-estado-en-villa-del-51346941.html>
{'ambientes': '2',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Campana al 2900',
 'dormitorios': '1',
 'expensas': ' 10.000',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Departamento 2 Amb. Muy Buen Estado en Villa del Parque',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-amb.-muy-buen-estado-en-villa-del-51346941.html'}
2023-03-27 23:32:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/piso-completo-i-av-libertador-y-godoy-cruz-51074019.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:45 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/piso-completo-i-av-libertador-y-godoy-cruz-51074019.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Avenida del Libertador 3624 Piso 5',
 'dormitorios': '4',
 'expensas': ' 234.000',
 'm2_cub': '337',
 'm2_total': '372',
 'moneda': 'USD',
 'title': 'Piso Completo I Av Libertador y Godoy Cruz',
 'url': 'https://www.zonaprop.com.ar/propiedades/piso-completo-i-av-libertador-y-godoy-cruz-51074019.html'}
2023-03-27 23:32:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-floresta.-2-ambientes-lateral-51255995.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-floresta.-2-ambientes-lateral-51255995.html>
{'ambientes': '2',
 'barrio': ', Floresta, Capital Federal',
 'direccion': 'Joaquin V Gonzalez al 600',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '39',
 'm2_total': '39',
 'moneda': '$',
 'title': 'Departamento en Alquiler Floresta. 2 Ambientes Lateral Muy Luminoso '
          'Lavadero Independiente',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-floresta.-2-ambientes-lateral-51255995.html'}
2023-03-27 23:32:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-2-ambientes.-nuevo-51368547.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-2-ambientes.-nuevo-51368547.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Loria 1700',
 'dormitorios': '1',
 'expensas': ' 16.000',
 'm2_cub': '36',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Excelente Departamento de 2 Ambientes. Nuevo, Luminoso. 42 m²',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-2-ambientes.-nuevo-51368547.html'}
2023-03-27 23:32:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-almagro-51272769.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:32:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:32:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-almagro-51272769.html>
{'ambientes': '3',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Billingurst al 500',
 'dormitorios': '2',
 'expensas': ' 24.000',
 'm2_cub': '66',
 'm2_total': '74',
 'moneda': '$',
 'title': 'Departamento en Almagro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-almagro-51272769.html'}
2023-03-27 23:33:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-av-directorio-3959-51358267.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-av-directorio-3959-51358267.html>
{'ambientes': '2',
 'barrio': ', Parque Avellaneda, Capital Federal',
 'direccion': 'AV. DIRECTORIO 3959. Entre Lacarra, avda. y Laguna',
 'dormitorios': '1',
 'expensas': ' 22.600',
 'm2_cub': '43',
 'm2_total': '46',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes. | Av Directorio 3959',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes.-av-directorio-3959-51358267.html'}
2023-03-27 23:33:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-dor.-c-dep-palermo-chico-capital-51293298.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-dor.-c-dep-palermo-chico-capital-51293298.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'JUAN MARIA GUTIERREZ 3900',
 'dormitorios': '2',
 'expensas': ' 34.500',
 'm2_cub': '95',
 'm2_total': '105',
 'moneda': '$',
 'title': 'Departamento 2 Dor. C/dep - Palermo Chico, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-dor.-c-dep-palermo-chico-capital-51293298.html'}
2023-03-27 23:33:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-en-belgrano-alquiler-temporal-51242526.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-en-belgrano-alquiler-temporal-51242526.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Avenida Cabildo 2700',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': 'USD',
 'title': 'Monoambiente en Belgrano Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-en-belgrano-alquiler-temporal-51242526.html'}
2023-03-27 23:33:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/forest-600-departamento-2-ambientes-a-estrenar-51358688.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/forest-600-departamento-2-ambientes-a-estrenar-51358688.html>
{'ambientes': '2',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'Forest al 600',
 'dormitorios': '1',
 'expensas': ' 9.000',
 'm2_cub': '33',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Forest 600, Departamento 2 Ambientes a Estrenar C/balcón Terraza, '
          'Chacarita',
 'url': 'https://www.zonaprop.com.ar/propiedades/forest-600-departamento-2-ambientes-a-estrenar-51358688.html'}
2023-03-27 23:33:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-alq-temporal-en-palermo-51180562.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-alq-temporal-en-palermo-51180562.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Scalabrini Ortiz 2200',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '89',
 'm2_total': '99',
 'moneda': 'USD',
 'title': 'Depto 4 Ambientes Alq Temporal en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-4-ambientes-alq-temporal-en-palermo-51180562.html'}
2023-03-27 23:33:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-por-escalera.-bajas-expensas.-51266644.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-por-escalera.-bajas-expensas.-51266644.html>
{'ambientes': '2',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Bonorino 288',
 'dormitorios': '1',
 'expensas': ' 3.000',
 'm2_cub': '40',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Alquiler 2 Ambientes, por Escalera. Bajas Expensas. Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-por-escalera.-bajas-expensas.-51266644.html'}
2023-03-27 23:33:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-en-belgrano-1-ambiente-51179398.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-en-belgrano-1-ambiente-51179398.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'AV Cabildo 2500',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento Alquiler Temporal en Belgrano 1 Ambiente',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-en-belgrano-1-ambiente-51179398.html'}
2023-03-27 23:33:27 [scrapy.extensions.logstats] INFO: Crawled 1486 pages (at 15 pages/min), scraped 1388 items (at 14 items/min)
2023-03-27 23:33:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-98.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-amb-recoleta-pacheco-de-melo-1900-51243008.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-amb-recoleta-pacheco-de-melo-1900-51243008.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Pacheco de Melo ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Alquiler - 2 Amb - Recoleta - Pacheco de Melo 1900 - Usd 900 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-amb-recoleta-pacheco-de-melo-1900-51243008.html'}
2023-03-27 23:33:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51338609.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51338609.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Dorrego al 2500',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '78',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51338609.html'}
2023-03-27 23:33:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-constitucion-51272182.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-constitucion-51272182.html>
{'ambientes': '2',
 'barrio': ', Constitución, Capital Federal',
 'direccion': 'Estados Unidos al 1500',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '43',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Departamento en Constitución',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-constitucion-51272182.html'}
2023-03-27 23:33:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-dpto-1-amb-con-balcon-corrido-51190229.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-dpto-1-amb-con-balcon-corrido-51190229.html>
{'ambientes': '1',
 'barrio': ', Parque Chas, Capital Federal',
 'direccion': 'CHORROARIN 400',
 'expensas': ' 8.900',
 'm2_cub': '42',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Excelente Dpto 1 Amb con Balcón Corrido',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-dpto-1-amb-con-balcon-corrido-51190229.html'}
2023-03-27 23:33:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51264455.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51264455.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Avenida DEL Libertador al 5500',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '105',
 'm2_total': '110',
 'moneda': 'USD',
 'title': 'Departamento en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51264455.html'}
2023-03-27 23:33:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-amoblado-y-51329926.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-amoblado-y-51329926.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1400',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '75',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Espectacular 2 Ambientes en Alquiler Amoblado y Equipado con '
          'Cochera en Oceana. Puerto Madero.',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-en-alquiler-amoblado-y-51329926.html'}
2023-03-27 23:33:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/residencia-universitaria-alquiler-de-camas-51185829.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:52 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/residencia-universitaria-alquiler-de-camas-51185829.html>
{'ambientes': '1',
 'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Avenida Entre Ríos 100',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '10',
 'm2_total': '10',
 'moneda': '$',
 'title': 'Residencia Universitaria - Alquiler de Camas / Habitacion',
 'url': 'https://www.zonaprop.com.ar/propiedades/residencia-universitaria-alquiler-de-camas-51185829.html'}
2023-03-27 23:33:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51373146.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:33:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:33:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51373146.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Avenida Cordoba al 3300',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '42',
 'm2_total': '46',
 'moneda': 'USD',
 'title': 'Departamento en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-51373146.html'}
2023-03-27 23:34:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51311120.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51311120.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Salguero al 2800',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '89',
 'm2_total': '112',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51311120.html'}
2023-03-27 23:34:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/valle-500-contrafrente-con-balcon-luminoso-51183308.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/valle-500-contrafrente-con-balcon-luminoso-51183308.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Valle ',
 'dormitorios': '1',
 'expensas': ' 14.500',
 'm2_cub': '50',
 'm2_total': '54',
 'moneda': '$',
 'title': 'Valle 500 - Contrafrente con Balcón - Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/valle-500-contrafrente-con-balcon-luminoso-51183308.html'}
2023-03-27 23:34:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/en-alquiler-hermoso-2-ambientes-en-duplex-sinclair-y-51315974.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/en-alquiler-hermoso-2-ambientes-en-duplex-sinclair-y-51315974.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Sinclair y Demaria',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '73',
 'moneda': 'USD',
 'title': 'En Alquiler Hermoso 2 Ambientes en Dúplex Sinclair y Demaria, '
          'Opción Temporario',
 'url': 'https://www.zonaprop.com.ar/propiedades/en-alquiler-hermoso-2-ambientes-en-duplex-sinclair-y-51315974.html'}
2023-03-27 23:34:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/posadas-al-1300-duplex-3-tipo-loft-terraza-51155169.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/posadas-al-1300-duplex-3-tipo-loft-terraza-51155169.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Posadas al 1300,3 Duplex',
 'dormitorios': '1',
 'expensas': ' 12.400',
 'm2_cub': '51',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Posadas Al 1300, Duplex, 3 - Tipo Loft, Terraza, Excel. Vista Fte '
          'Jardines Nunciatura',
 'url': 'https://www.zonaprop.com.ar/propiedades/posadas-al-1300-duplex-3-tipo-loft-terraza-51155169.html'}
2023-03-27 23:34:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-azcuenaga-al-900-51220909.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-azcuenaga-al-900-51220909.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'AZCUENAGA 900. Entre Paraguay y Charcas',
 'expensas': ' 20.000',
 'm2_cub': '34',
 'm2_total': '34',
 'moneda': '$',
 'title': 'Departamento Monoambiente. | Azcuenaga Al 900',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente.-azcuenaga-al-900-51220909.html'}
2023-03-27 23:34:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-99.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:34:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-dpto-3-amb-con-balcon-corrido-51280383.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-dpto-3-amb-con-balcon-corrido-51280383.html>
{'ambientes': '3',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'AV. TRIUNVIRATO 5400',
 'dormitorios': '2',
 'expensas': ' 32.000',
 'm2_cub': '62',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Excelente Dpto 3 Amb con Balcón Corrido',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-dpto-3-amb-con-balcon-corrido-51280383.html'}
2023-03-27 23:34:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/divino-3-ambientes-a-estrenar-en-terrazas-de-volcan-51363637.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:34:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/divino-3-ambientes-a-estrenar-en-terrazas-de-volcan-51363637.html>
{'ambientes': '3',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Zelarrayan',
 'dormitorios': '2',
 'expensas': ' 38.000',
 'm2_cub': '98',
 'm2_total': '110',
 'moneda': '$',
 'title': 'Divino 3 Ambientes a Estrenar en Terrazas de Volcan',
 'url': 'https://www.zonaprop.com.ar/propiedades/divino-3-ambientes-a-estrenar-en-terrazas-de-volcan-51363637.html'}
2023-03-27 23:34:27 [scrapy.extensions.logstats] INFO: Crawled 1503 pages (at 17 pages/min), scraped 1403 items (at 15 items/min)
2023-03-27 23:34:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-alto-palermo-park.-hermoso-4-ambientes-con-51172504.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:34:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-alto-palermo-park.-hermoso-4-ambientes-con-51172504.html>
{'ambientes': '5',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Juncal 3200',
 'dormitorios': '4',
 'expensas': ' 50.000',
 'm2_cub': '155',
 'm2_total': '155',
 'moneda': 'USD',
 'title': 'Torre Alto Palermo Park. Hermoso 4 Ambientes con Dependencia. '
          'Cochera. Baulera.',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-alto-palermo-park.-hermoso-4-ambientes-con-51172504.html'}
2023-03-27 23:34:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-hollywood-honduras-51378317.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:34:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-hollywood-honduras-51378317.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Honduras ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Alquiler - 2 Ambientes - Palermo Hollywood - Honduras 5500 - Usd '
          '900 Todo Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-palermo-hollywood-honduras-51378317.html'}
2023-03-27 23:34:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-duplex-primer-piso-por-escalera-51234648.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-duplex-primer-piso-por-escalera-51234648.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Felipe Vallese al 1100',
 'dormitorios': '1',
 'expensas': ' 3.000',
 'moneda': '$',
 'title': 'Departamento en Duplex Primer Piso por Escalera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-duplex-primer-piso-por-escalera-51234648.html'}
2023-03-27 23:34:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-venta-torre-de-las-americas-2-51316824.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-venta-torre-de-las-americas-2-51316824.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Avenida Coronel Diaz al 2100',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '230',
 'm2_total': '230',
 'moneda': 'USD',
 'title': 'Departamento en Venta - Torre de Las Americas - 2 Cocheras',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-venta-torre-de-las-americas-2-51316824.html'}
2023-03-27 23:34:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-para-alquiler-temporario-en-51222529.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-para-alquiler-temporario-en-51222529.html>
{'ambientes': '3',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Oro al 2100',
 'dormitorios': '2',
 'expensas': 0,
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes Para Alquiler Temporario en Pleno Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-para-alquiler-temporario-en-51222529.html'}
2023-03-27 23:34:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-departamento-monoambiente-en-51370482.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-departamento-monoambiente-en-51370482.html>
{'ambientes': '1',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'Migueletes al 1200',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '23',
 'm2_total': '23',
 'moneda': 'USD',
 'title': 'Alquiler Temporario Departamento Monoambiente en Cañitas',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-departamento-monoambiente-en-51370482.html'}
2023-03-27 23:34:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/-mira-esto-3-amb-alquiler-balcon-terraza-y-51380717.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/-mira-esto-3-amb-alquiler-balcon-terraza-y-51380717.html>
{'ambientes': '3',
 'barrio': ', Mataderos, Capital Federal',
 'direccion': 'MONTIEL 3097',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': '$',
 'title': '# Mira Esto # 3 Amb Alquiler # Balcon, Terraza y Lavadero',
 'url': 'https://www.zonaprop.com.ar/propiedades/-mira-esto-3-amb-alquiler-balcon-terraza-y-51380717.html'}
2023-03-27 23:34:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-4-ambientes-con-espacio-cochera-y-51271729.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-4-ambientes-con-espacio-cochera-y-51271729.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Anchorena 1600 7°',
 'dormitorios': '3',
 'expensas': ' 71.500',
 'm2_cub': '70',
 'm2_total': '83',
 'moneda': 'USD',
 'title': 'Departamento de 4 Ambientes con Espacio Cochera y Baulera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-4-ambientes-con-espacio-cochera-y-51271729.html'}
2023-03-27 23:34:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-100.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:34:57 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:35:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palermo-dep.-3-amb.-p.-baja-a-la-calle-en-alquiler-sin-51148052.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palermo-dep.-3-amb.-p.-baja-a-la-calle-en-alquiler-sin-51148052.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Thames 1330',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '39',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Palermo Dep. 3 Amb. P. Baja a La Calle en Alquiler Sin Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/palermo-dep.-3-amb.-p.-baja-a-la-calle-en-alquiler-sin-51148052.html'}
2023-03-27 23:35:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/pza.-san-martin-excelente-categoria-250-m-sup2--con-o-51297817.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:35:05 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/pza.-san-martin-excelente-categoria-250-m-sup2--con-o-51297817.html>
{'ambientes': '6',
 'barrio': ', Puerto Retiro, Retiro',
 'direccion': 'Maipu 1266',
 'dormitorios': '4',
 'expensas': ' 190.000',
 'm2_cub': '250',
 'm2_total': '250',
 'moneda': 'USD',
 'title': 'Pza. San Martin Excelente Categoría 250 m² con o Sin Muebles',
 'url': 'https://www.zonaprop.com.ar/propiedades/pza.-san-martin-excelente-categoria-250-m-sup2--con-o-51297817.html'}
2023-03-27 23:35:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-villa-urquiza-51386665.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:35:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-villa-urquiza-51386665.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Arismendi al 2500',
 'dormitorios': '1',
 'expensas': ' 16.600',
 'moneda': '$',
 'title': 'Departamento en Villa Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-villa-urquiza-51386665.html'}
2023-03-27 23:35:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-2-ambientes-fte-con-balcon-51279981.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-2-ambientes-fte-con-balcon-51279981.html>
{'ambientes': '2',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Salvador M Del Carril al 3500',
 'dormitorios': '1',
 'expensas': ' 10.000',
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Departamento en Alquiler 2 Ambientes Fte con Balcon Terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-2-ambientes-fte-con-balcon-51279981.html'}
2023-03-27 23:35:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-muy-luminoso-con-gran-balcon-51373131.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-muy-luminoso-con-gran-balcon-51373131.html>
{'ambientes': '4',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Nazca al 700',
 'dormitorios': '3',
 'expensas': ' 31.000',
 'm2_cub': '68',
 'm2_total': '77',
 'moneda': '$',
 'title': '3 Ambientes Muy Luminoso con Gran Balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-muy-luminoso-con-gran-balcon-51373131.html'}
2023-03-27 23:35:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/arenales-y-ayacucho-2-ambientes-amoblado-51357775.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/arenales-y-ayacucho-2-ambientes-amoblado-51357775.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'ARENALES 2000',
 'dormitorios': '1',
 'expensas': ' 19.000',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Arenales y Ayacucho - 2 Ambientes - Ámoblado - Reciclado - Dep. '
          'Serv - Lavad - Impecable',
 'url': 'https://www.zonaprop.com.ar/propiedades/arenales-y-ayacucho-2-ambientes-amoblado-51357775.html'}
2023-03-27 23:35:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-dpto-tipo-duplex-en-dos-51349180.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-dpto-tipo-duplex-en-dos-51349180.html>
{'ambientes': '4',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'AVENIDA CRAMER 1715',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '78',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Alquiler Temporario - Dpto - Tipo Duplex - en Dos Pisos Unidos '
          'Belgrano R.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-dpto-tipo-duplex-en-dos-51349180.html'}
2023-03-27 23:35:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-el-centro-de-la-ciudad-51180003.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:27 [scrapy.extensions.logstats] INFO: Crawled 1520 pages (at 17 pages/min), scraped 1418 items (at 15 items/min)
2023-03-27 23:35:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-el-centro-de-la-ciudad-51180003.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Cerrito 1532',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '69',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes en El Centro de La Ciudad',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-el-centro-de-la-ciudad-51180003.html'}
2023-03-27 23:35:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-villa-urquiza-capital-51374454.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-villa-urquiza-capital-51374454.html>
{'ambientes': '4',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'RIVERA PEDRO IGNACIO DR. 5600',
 'dormitorios': '3',
 'expensas': ' 21.000',
 'm2_cub': '152',
 'm2_total': '298',
 'moneda': 'USD',
 'title': 'Departamento 3 Dor. C/dep - Villa Urquiza, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-villa-urquiza-capital-51374454.html'}
2023-03-27 23:35:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-101.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:35:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-3-ambientes-con-balcon-51383990.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-3-ambientes-con-balcon-51383990.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Mendez de Andes 1793',
 'dormitorios': '3',
 'expensas': ' 22.000',
 'm2_cub': '60',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Depto 3 Ambientes con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-3-ambientes-con-balcon-51383990.html'}
2023-03-27 23:35:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/recoleta-exclusivo-piso-4-amb-dep.-sup.-107-m-sup2-51300367.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:41 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:35:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/recoleta-exclusivo-piso-4-amb-dep.-sup.-107-m-sup2-51300367.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Arenales',
 'dormitorios': '2',
 'expensas': ' 90.000',
 'm2_cub': '107',
 'm2_total': '107',
 'moneda': 'USD',
 'title': 'Recoleta Exclusivo Piso 4 Amb Dep. Sup. 107 m² Venta o Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/recoleta-exclusivo-piso-4-amb-dep.-sup.-107-m-sup2-51300367.html'}
2023-03-27 23:35:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/jorge-newbery-2400-palermo-departamento-51347178.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:44 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:35:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/jorge-newbery-2400-palermo-departamento-51347178.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Jorge Newbery 2415',
 'expensas': ' 20.000',
 'm2_cub': '24',
 'm2_total': '27',
 'moneda': 'USD',
 'title': 'Jorge Newbery 2400 - Palermo - Departamento Monoambiente Alquiler '
          'Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/jorge-newbery-2400-palermo-departamento-51347178.html'}
2023-03-27 23:35:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304910.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:49 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:35:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304910.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Felipe Vallese al 1600',
 'dormitorios': '2',
 'expensas': ' 7.000',
 'm2_cub': '62',
 'm2_total': '68',
 'moneda': '$',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51304910.html'}
2023-03-27 23:35:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-con-amenities-y-vigilancia-24-hs-en-51294634.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:35:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-con-amenities-y-vigilancia-24-hs-en-51294634.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Libertad 1100',
 'dormitorios': '2',
 'expensas': ' 57.000',
 'm2_cub': '70',
 'm2_total': '76',
 'moneda': 'USD',
 'title': '3 Ambientes con Amenities y Vigilancia 24 Hs en Edificio de '
          'Categoría!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-con-amenities-y-vigilancia-24-hs-en-51294634.html'}
2023-03-27 23:35:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-barrio-norte-capital-51387603.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:35:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-barrio-norte-capital-51387603.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Montevideo 800',
 'dormitorios': '2',
 'expensas': ' 48.000',
 'm2_cub': '74',
 'm2_total': '74',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes - Barrio Norte, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-barrio-norte-capital-51387603.html'}
2023-03-27 23:35:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-villa-devoto-51288949.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:35:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-villa-devoto-51288949.html>
{'ambientes': '3',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Jose Pedro Varela al 4200',
 'dormitorios': '2',
 'expensas': ' 16.000',
 'm2_cub': '66',
 'm2_total': '66',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes. Villa Devoto',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-villa-devoto-51288949.html'}
2023-03-27 23:36:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-en-almagro-dos-ambientes-edificio-de-51267172.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-en-almagro-dos-ambientes-edificio-de-51267172.html>
{'ambientes': '2',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Mario Bravo al 200',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '56',
 'm2_total': '56',
 'moneda': 'USD',
 'title': 'Alquiler en Almagro Dos Ambientes Edificio de Categoria',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-en-almagro-dos-ambientes-edificio-de-51267172.html'}
2023-03-27 23:36:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-51320576.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-51320576.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Posadas al 1100',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '43',
 'm2_total': '43',
 'moneda': 'USD',
 'title': 'Departamento - 2 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-51320576.html'}
2023-03-27 23:36:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-102.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:36:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-en-belgrano-51386943.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-en-belgrano-51386943.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Freire al 2000',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Alquiler Departamento 2 Ambientes en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-en-belgrano-51386943.html'}
2023-03-27 23:36:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-de-monoambiente-contrafrente-av-corrientes-y-51258620.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:17 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:36:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-de-monoambiente-contrafrente-av-corrientes-y-51258620.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'av. corrientes 1642',
 'expensas': ' 9.000',
 'm2_cub': '25',
 'm2_total': '25',
 'moneda': '$',
 'title': 'Alquiler de Monoambiente Contrafrente Av Corrientes y Montevideo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-de-monoambiente-contrafrente-av-corrientes-y-51258620.html'}
2023-03-27 23:36:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/estrene-departamento-amenities-1suite-y-toilette-51250093.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:21 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:36:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/estrene-departamento-amenities-1suite-y-toilette-51250093.html>
{'ambientes': '2',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Av Santa Fe al 5300 esq Dorrego',
 'dormitorios': '1',
 'expensas': ' 22.000',
 'm2_cub': '60',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Estrene Departamento Amenities - 1suite y Toilette Bistro Bar en '
          'Terraza Seg24has',
 'url': 'https://www.zonaprop.com.ar/propiedades/estrene-departamento-amenities-1suite-y-toilette-51250093.html'}
2023-03-27 23:36:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51365527.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:36:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51365527.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Scalabrini Ortiz al 1700',
 'expensas': ' 15.000',
 'm2_cub': '55',
 'm2_total': '57',
 'moneda': 'USD',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51365527.html'}
2023-03-27 23:36:27 [scrapy.extensions.logstats] INFO: Crawled 1536 pages (at 16 pages/min), scraped 1433 items (at 15 items/min)
2023-03-27 23:36:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51256479.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:36:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51256479.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Pueyrredon al 800',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento - Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-barrio-norte-51256479.html'}
2023-03-27 23:36:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-alquiler-51321947.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:36:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-alquiler-51321947.html>
{'ambientes': '2',
 'barrio': ', La Paternal, Capital Federal',
 'direccion': 'Linneo 1900',
 'dormitorios': '1',
 'expensas': ' 4.700',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes en Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-alquiler-51321947.html'}
2023-03-27 23:36:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/palermo-2-ambientes-luminoso-cocina-completa-51364511.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:36:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/palermo-2-ambientes-luminoso-cocina-completa-51364511.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Fray Justo Santamaria de Oro al 2700',
 'dormitorios': '1',
 'expensas': ' 19.800',
 'm2_cub': '34',
 'm2_total': '34',
 'moneda': '$',
 'title': 'Palermo 2 Ambientes Luminoso Cocina Completa',
 'url': 'https://www.zonaprop.com.ar/propiedades/palermo-2-ambientes-luminoso-cocina-completa-51364511.html'}
2023-03-27 23:36:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/4-amb-1-piso-por-escalera-frente-con-balcon-impecable-51315785.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/4-amb-1-piso-por-escalera-frente-con-balcon-impecable-51315785.html>
{'ambientes': '4',
 'barrio': ', Parque Patricios, Capital Federal',
 'direccion': 'AV ALMAFUERTE 768',
 'dormitorios': '3',
 'expensas': ' 6.000',
 'm2_cub': '62',
 'm2_total': '64',
 'moneda': '$',
 'title': '4 Amb 1º Piso por Escalera Frente con Balcon Impecable a Nuevo '
          'Bajas Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/4-amb-1-piso-por-escalera-frente-con-balcon-impecable-51315785.html'}
2023-03-27 23:36:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-belgrano-cazadores-1800-51289998.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-belgrano-cazadores-1800-51289998.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cazadores ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Alquiler - Monoambiente - Belgrano - Cazadores 1800 - Usd 750 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-belgrano-cazadores-1800-51289998.html'}
2023-03-27 23:36:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51156025.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51156025.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Guemes 4000',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '46',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51156025.html'}
2023-03-27 23:36:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/jonte-y-allende-p-uso-comercial-51108247.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/jonte-y-allende-p-uso-comercial-51108247.html>
{'ambientes': '4',
 'barrio': ', Monte Castro, Capital Federal',
 'direccion': 'Allende ',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '200',
 'm2_total': '240',
 'moneda': '$',
 'title': 'Jonte y Allende, P/uso Comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/jonte-y-allende-p-uso-comercial-51108247.html'}
2023-03-27 23:36:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/libertador-300-torre-sanchez-elia-piso-14.-200-51368575.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/libertador-300-torre-sanchez-elia-piso-14.-200-51368575.html>
{'ambientes': '5',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av. del Libertador 300',
 'dormitorios': '3',
 'expensas': ' 80.000',
 'm2_cub': '200',
 'm2_total': '200',
 'moneda': 'USD',
 'title': 'Libertador 300 Torre Sánchez Elia Piso 14. 200 m². 3 Suites 2 '
          'Cocheras Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/libertador-300-torre-sanchez-elia-piso-14.-200-51368575.html'}
2023-03-27 23:36:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-103.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:36:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-catalinas-sur-la-boca-51385667.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:36:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-catalinas-sur-la-boca-51385667.html>
{'ambientes': '3',
 'barrio': ', La Boca, Capital Federal',
 'direccion': 'Manuel Galvez al 100',
 'dormitorios': '2',
 'expensas': ' 11.000',
 'm2_cub': '57',
 'm2_total': '57',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes en Catalinas Sur La Boca Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-catalinas-sur-la-boca-51385667.html'}
2023-03-27 23:37:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/carlos-pellegrini-esq-arroyo-2-amb-exc.-ubicacion-51293320.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/carlos-pellegrini-esq-arroyo-2-amb-exc.-ubicacion-51293320.html>
{'ambientes': '2',
 'barrio': ', Puerto Retiro, Retiro',
 'direccion': 'Carlos Pellegrini 1327',
 'dormitorios': '1',
 'expensas': ' 10.006',
 'm2_cub': '37',
 'm2_total': '38',
 'moneda': 'USD',
 'title': 'Carlos Pellegrini Esq Arroyo 2 Amb Exc. Ubicación Frente a Embajada '
          'Francesa',
 'url': 'https://www.zonaprop.com.ar/propiedades/carlos-pellegrini-esq-arroyo-2-amb-exc.-ubicacion-51293320.html'}
2023-03-27 23:37:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/cochabamba-al-400-9-monoambiente-muy-luminoso-51383754.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/cochabamba-al-400-9-monoambiente-muy-luminoso-51383754.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Cochabamba 400',
 'expensas': ' 8.200',
 'm2_cub': '28',
 'm2_total': '28',
 'moneda': '$',
 'title': 'Cochabamba Al 400 9° - Monoambiente Muy Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/cochabamba-al-400-9-monoambiente-muy-luminoso-51383754.html'}
2023-03-27 23:37:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-con-pileta-parrilla-cochera-amblado-51345755.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-con-pileta-parrilla-cochera-amblado-51345755.html>
{'ambientes': '3',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Bartolomé Mitre ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '58',
 'm2_total': '60',
 'moneda': 'USD',
 'title': '3 Ambientes con Pileta/parrilla/cochera Amblado Temporario',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-con-pileta-parrilla-cochera-amblado-51345755.html'}
2023-03-27 23:37:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-belgrano-alquiler-temporal-51274392.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:14 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-belgrano-alquiler-temporal-51274392.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cabildo 2500',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes en Belgrano Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-belgrano-alquiler-temporal-51274392.html'}
2023-03-27 23:37:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-con-terraza-propia.-a-51250972.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-con-terraza-propia.-a-51250972.html>
{'ambientes': '2',
 'barrio': ', Parque Patricios, Capital Federal',
 'direccion': 'Garay 2600',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '49',
 'm2_total': '81',
 'moneda': '$',
 'title': 'Espectacular 2 Ambientes con Terraza Propia. a Estrenar!',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-2-ambientes-con-terraza-propia.-a-51250972.html'}
2023-03-27 23:37:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excel-2-dorm-escr-amoblado-51328403.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excel-2-dorm-escr-amoblado-51328403.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Marcelo T. De Alvear 700 6°',
 'dormitorios': '2',
 'expensas': ' 35.700',
 'm2_cub': '92',
 'm2_total': '92',
 'moneda': '$',
 'title': 'Excel 2 Dorm + Escr Amoblado',
 'url': 'https://www.zonaprop.com.ar/propiedades/excel-2-dorm-escr-amoblado-51328403.html'}
2023-03-27 23:37:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dto-3-amb-lat-con-cochera-51376628.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dto-3-amb-lat-con-cochera-51376628.html>
{'ambientes': '3',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'Leoprdi 100',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '56',
 'moneda': '$',
 'title': 'Dto 3 Amb Lat con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/dto-3-amb-lat-con-cochera-51376628.html'}
2023-03-27 23:37:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-con-balcon-patio-c-parrilla-51383430.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-con-balcon-patio-c-parrilla-51383430.html>
{'ambientes': '2',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Campana 4700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '44',
 'm2_total': '67',
 'moneda': '$',
 'title': 'Alquiler 2 Ambientes con Balcón + Patio C Parrilla',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-con-balcon-patio-c-parrilla-51383430.html'}
2023-03-27 23:37:27 [scrapy.extensions.logstats] INFO: Crawled 1554 pages (at 18 pages/min), scraped 1450 items (at 17 items/min)
2023-03-27 23:37:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-de-4-ambientes-en-alquiler!-con-balcon-51348590.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-de-4-ambientes-en-alquiler!-con-balcon-51348590.html>
{'ambientes': '4',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Beruti 2942',
 'dormitorios': '2',
 'expensas': ' 22.990',
 'm2_cub': '90',
 'm2_total': '96',
 'moneda': '$',
 'title': 'Depto de 4 Ambientes en Alquiler! con Balcón, Escritorio y Dep. de '
          'Servicio.',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-de-4-ambientes-en-alquiler!-con-balcon-51348590.html'}
2023-03-27 23:37:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-104.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-3-ambientes-belgrano-51173994.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:38 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-3-ambientes-belgrano-51173994.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Manuel Ugarte 3800',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Departamento Alquiler Temporal 3 Ambientes Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-3-ambientes-belgrano-51173994.html'}
2023-03-27 23:37:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/montevideo-alvear-2-dorm.-terraza-ambueblado-51385891.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:42 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/montevideo-alvear-2-dorm.-terraza-ambueblado-51385891.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Montevideo al 1700',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '85',
 'moneda': 'USD',
 'title': 'Montevideo - Alvear 2 Dorm., Terraza Ambueblado Impecable',
 'url': 'https://www.zonaprop.com.ar/propiedades/montevideo-alvear-2-dorm.-terraza-ambueblado-51385891.html'}
2023-03-27 23:37:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-en-51247523.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:46 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-en-51247523.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1100',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporal 3 Ambientes en Puerto Madero Usd '
          '2500',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-en-51247523.html'}
2023-03-27 23:37:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-con-balcon-e-importantes-51254757.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:50 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-con-balcon-e-importantes-51254757.html>
{'ambientes': '1',
 'barrio': ', La Paternal, Capital Federal',
 'direccion': 'san Martin al 3200',
 'expensas': ' 15.000',
 'm2_cub': '34',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Alquiler Monoambiente con Balcon E Importantes Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-con-balcon-e-importantes-51254757.html'}
2023-03-27 23:37:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-2-amb-frente-c-balcon.-excelente-estado!-51248926.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:53 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-2-amb-frente-c-balcon.-excelente-estado!-51248926.html>
{'ambientes': '2',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Av Asamblea 1300',
 'dormitorios': '1',
 'expensas': ' 11.900',
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Excelente 2 Amb Frente C/ Balcon. Excelente Estado! Super Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-2-amb-frente-c-balcon.-excelente-estado!-51248926.html'}
2023-03-27 23:37:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-de-2-ambientes-frente-sin-expensas-51342593.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:37:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:37:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-de-2-ambientes-frente-sin-expensas-51342593.html>
{'ambientes': '2',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'Simbron 3700 PB',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '43',
 'moneda': '$',
 'title': 'PH de 2 Ambientes Frente Sin Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-de-2-ambientes-frente-sin-expensas-51342593.html'}
2023-03-27 23:38:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-2-ambientes-puerto-51179093.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:38:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-2-ambientes-puerto-51179093.html>
{'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso ',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Departamento Alquiler Temporal 2 Ambientes Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-temporal-2-ambientes-puerto-51179093.html'}
2023-03-27 23:38:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-almagro-colombres-500-usd-51369337.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-almagro-colombres-500-usd-51369337.html>
{'ambientes': '22',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Colombres ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '44',
 'm2_total': '44',
 'moneda': 'USD',
 'title': 'Alquiler - 2 Ambientes - Almagro - Colombres 500 - Usd 600 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-almagro-colombres-500-usd-51369337.html'}
2023-03-27 23:38:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alq-4amb-m-guerrico-5400-torre-9-loiacono-51179002.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alq-4amb-m-guerrico-5400-torre-9-loiacono-51179002.html>
{'ambientes': '4',
 'barrio': ', Villa Lugano, Capital Federal',
 'direccion': 'Martin Guerrico 5400',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Alq 4amb - m Guerrico 5400 - Torre 9 - Loiacono Propiedades',
 'url': 'https://www.zonaprop.com.ar/propiedades/alq-4amb-m-guerrico-5400-torre-9-loiacono-51179002.html'}
2023-03-27 23:38:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51352400.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51352400.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '3 DE Febrero al 1200',
 'expensas': ' 95.000',
 'm2_cub': '140',
 'm2_total': '140',
 'moneda': 'USD',
 'title': 'Departamento - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51352400.html'}
2023-03-27 23:38:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-a-estrenar-al-frente-con-balcon-51382801.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-a-estrenar-al-frente-con-balcon-51382801.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Colombres 585',
 'dormitorios': '1',
 'expensas': ' 19.800',
 'm2_cub': '40',
 'm2_total': '44',
 'moneda': '$',
 'title': '2 Ambientes a Estrenar Al Frente con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-a-estrenar-al-frente-con-balcon-51382801.html'}
2023-03-27 23:38:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-105.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:38:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento5-ambientes-en-venta-o-alquiler-belgrano-51268016.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento5-ambientes-en-venta-o-alquiler-belgrano-51268016.html>
{'ambientes': '5',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Av. de los Incas 3300, Belgrano R',
 'dormitorios': '4',
 'expensas': ' 187.000',
 'm2_cub': '340',
 'm2_total': '360',
 'moneda': 'USD',
 'title': 'Departamento5 Ambientes en Venta o Alquiler - Belgrano R - 4 Dorm., '
          '2 Cocheras - Seguridad 24h',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento5-ambientes-en-venta-o-alquiler-belgrano-51268016.html'}
2023-03-27 23:38:27 [scrapy.extensions.logstats] INFO: Crawled 1569 pages (at 15 pages/min), scraped 1463 items (at 13 items/min)
2023-03-27 23:38:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/charcas-y-anchorena-3-amb-4to-piso-al-frente-65-51247684.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/charcas-y-anchorena-3-amb-4to-piso-al-frente-65-51247684.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'charcas 2793',
 'dormitorios': '2',
 'expensas': ' 23.000',
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Charcas y Anchorena 3 Amb 4to Piso Al Frente 65 m²',
 'url': 'https://www.zonaprop.com.ar/propiedades/charcas-y-anchorena-3-amb-4to-piso-al-frente-65-51247684.html'}
2023-03-27 23:38:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amoblado-pileta-vigilancia-sum-laundry-51280256.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amoblado-pileta-vigilancia-sum-laundry-51280256.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Gurruchaga 2200',
 'dormitorios': '1',
 'expensas': ' 28.000',
 'm2_cub': '48',
 'm2_total': '48',
 'moneda': '$',
 'title': 'Amoblado Pileta Vigilancia Sum Laundry',
 'url': 'https://www.zonaprop.com.ar/propiedades/amoblado-pileta-vigilancia-sum-laundry-51280256.html'}
2023-03-27 23:38:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/se-alquila-solo-con-garantia-propietaria-de-capital-o-51343181.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/se-alquila-solo-con-garantia-propietaria-de-capital-o-51343181.html>
{'ambientes': '1',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'VARELA 700',
 'expensas': ' 8.200',
 'm2_cub': '21',
 'm2_total': '21',
 'moneda': '$',
 'title': 'Se Alquila Solo con Garantia Propietaria de Capital o Finaer '
          'Aprobado!',
 'url': 'https://www.zonaprop.com.ar/propiedades/se-alquila-solo-con-garantia-propietaria-de-capital-o-51343181.html'}
2023-03-27 23:38:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-con-patio-51360478.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-con-patio-51360478.html>
{'ambientes': '1',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'CORRIENTES ',
 'expensas': ' 17.000',
 'm2_cub': '35',
 'm2_total': '48',
 'moneda': '$',
 'title': '1 Ambiente Amplio con Patio',
 'url': 'https://www.zonaprop.com.ar/propiedades/1-ambiente-amplio-con-patio-51360478.html'}
2023-03-27 23:38:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/uruguay-100-p10-2-amb.-cfte.-c-balcon.-o.-e.-muy-51294933.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/uruguay-100-p10-2-amb.-cfte.-c-balcon.-o.-e.-muy-51294933.html>
{'ambientes': '2',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Uruguay 100',
 'dormitorios': '1',
 'expensas': ' 11.000',
 'm2_cub': '35',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Uruguay 100 P10° 2 Amb. Cfte. C/ Balcón. O. E. Muy Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/uruguay-100-p10-2-amb.-cfte.-c-balcon.-o.-e.-muy-51294933.html'}
2023-03-27 23:38:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/pichincha-1200-3-ambientes-ph-san-cristobal-51370474.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/pichincha-1200-3-ambientes-ph-san-cristobal-51370474.html>
{'ambientes': '3',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Pichincha al 1200',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '67',
 'm2_total': '67',
 'moneda': '$',
 'title': 'Pichincha 1200 - 3 Ambientes - PH - San Cristobal - Sin Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/pichincha-1200-3-ambientes-ph-san-cristobal-51370474.html'}
2023-03-27 23:38:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-villa-pueyrredon-51291990.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-villa-pueyrredon-51291990.html>
{'ambientes': '4',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'Griveo 3785 3°',
 'dormitorios': '3',
 'expensas': ' 16.000',
 'm2_cub': '73',
 'm2_total': '90',
 'moneda': '$',
 'title': 'Alquiler Departamento 4 Ambientes Villa Pueyrredon',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-4-ambientes-villa-pueyrredon-51291990.html'}
2023-03-27 23:38:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/edificio-quo-quesada-2-amb-con-cochera-51319645.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/edificio-quo-quesada-2-amb-con-cochera-51319645.html>
{'ambientes': '2',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Quesada 2400',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '47',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Edificio Quo Quesada 2 Amb con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/edificio-quo-quesada-2-amb-con-cochera-51319645.html'}
2023-03-27 23:38:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-51305312.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:38:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-51305312.html>
{'ambientes': '1',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Palpa 2400',
 'expensas': 0,
 'm2_cub': '31',
 'm2_total': '31',
 'moneda': 'USD',
 'title': 'Alquiler Temporario',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-51305312.html'}
2023-03-27 23:39:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-villa-devoto-capital-51310190.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-villa-devoto-capital-51310190.html>
{'ambientes': '3',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Hermoso depto en el corazon de Devoto Sanabria 2000',
 'dormitorios': '2',
 'expensas': ' 10.000',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Departamento en Alquiler en Villa Devoto, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-villa-devoto-capital-51310190.html'}
2023-03-27 23:39:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-106.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:39:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/faena-los-molinos-impecable-alquiler-temporario-o-51203060.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/faena-los-molinos-impecable-alquiler-temporario-o-51203060.html>
{'ambientes': '2',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso 1178',
 'dormitorios': '1',
 'expensas': ' 95.000',
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Faena Los Molinos Impecable - Alquiler Temporario o Alquiler X 3 '
          'Años - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/faena-los-molinos-impecable-alquiler-temporario-o-51203060.html'}
2023-03-27 23:39:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-en-planta-baja-con-patio-51387970.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-en-planta-baja-con-patio-51387970.html>
{'ambientes': '2',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Llavallol al 5400',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '48',
 'm2_total': '53',
 'moneda': '$',
 'title': 'PH en Planta Baja con Patio',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-en-planta-baja-con-patio-51387970.html'}
2023-03-27 23:39:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-en-villa-ortuzar-51199072.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-en-villa-ortuzar-51199072.html>
{'ambientes': '2',
 'barrio': ', Villa Ortuzar, Capital Federal',
 'direccion': 'Avenida Alvarez Thomas 1300',
 'dormitorios': '1',
 'expensas': ' 11.300',
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Alquiler Departamento 2 Ambientes en Villa Ortúzar',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-en-villa-ortuzar-51199072.html'}
2023-03-27 23:39:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-venta-en-retiro-en-plaza-51202886.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-venta-en-retiro-en-plaza-51202886.html>
{'barrio': ', Retiro, Capital Federal',
 'direccion': 'M. T. de Alvear al 600',
 'dormitorios': '3',
 'expensas': ' 60.000',
 'm2_cub': '340',
 'm2_total': '340',
 'moneda': '$',
 'title': 'Departamento en Alquiler / Venta en Retiro en Plaza San Martín de '
          '340 m² - 3 Dorm.',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-venta-en-retiro-en-plaza-51202886.html'}
2023-03-27 23:39:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-belgrano-cazadores-1800-51289965.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-belgrano-cazadores-1800-51289965.html>
{'ambientes': '1',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cazadores ',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Alquiler - Monoambiente - Belgrano - Cazadores 1800 - Usd 750 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-belgrano-cazadores-1800-51289965.html'}
2023-03-27 23:39:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-107.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:39:27 [scrapy.extensions.logstats] INFO: Crawled 1586 pages (at 17 pages/min), scraped 1478 items (at 15 items/min)
2023-03-27 23:39:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-villa-luro-51155664.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-villa-luro-51155664.html>
{'ambientes': '4',
 'barrio': ', Villa Luro, Capital Federal',
 'direccion': 'Av. Rivadavia al 9800 15',
 'dormitorios': '3',
 'expensas': ' 17.000',
 'm2_cub': '66',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Departamento - Villa Luro',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-villa-luro-51155664.html'}
2023-03-27 23:39:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/r-e-s-e-r-v-a-d-o-alquiler-semipiso-4-ambientes-con-51214896.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/r-e-s-e-r-v-a-d-o-alquiler-semipiso-4-ambientes-con-51214896.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arcos 1805, 16 A',
 'dormitorios': '3',
 'expensas': ' 75.671',
 'm2_cub': '130',
 'm2_total': '130',
 'moneda': '$',
 'title': 'R E S E R V a D o Alquiler Semipiso 4 Ambientes con Dep y Cochera '
          'Fija en Barrancas de Belg',
 'url': 'https://www.zonaprop.com.ar/propiedades/r-e-s-e-r-v-a-d-o-alquiler-semipiso-4-ambientes-con-51214896.html'}
2023-03-27 23:39:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-lavalle-al-2600-51231130.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-lavalle-al-2600-51231130.html>
{'ambientes': '3',
 'barrio': ', Once, Capital Federal',
 'direccion': 'LAVALLE 2600. Entre Paso y Av.pueyrredon',
 'dormitorios': '2',
 'expensas': ' 10.000',
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes. | Lavalle Al 2600',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-lavalle-al-2600-51231130.html'}
2023-03-27 23:39:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/uruguay-100-p10-2-amb.-cfte.-c-balcon.-o.-e.-muy-51295747.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/uruguay-100-p10-2-amb.-cfte.-c-balcon.-o.-e.-muy-51295747.html>
{'ambientes': '2',
 'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Uruguay 100',
 'dormitorios': '1',
 'expensas': ' 11.000',
 'm2_cub': '35',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Uruguay 100 P10° 2 Amb. Cfte. C/ Balcón. O. E. Muy Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/uruguay-100-p10-2-amb.-cfte.-c-balcon.-o.-e.-muy-51295747.html'}
2023-03-27 23:39:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-en-palermo-4-51161060.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-en-palermo-4-51161060.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av Santa Fe ',
 'dormitorios': '3',
 'expensas': ' 1',
 'm2_cub': '110',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporal en Palermo 4 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-en-palermo-4-51161060.html'}
2023-03-27 23:39:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-108.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:39:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-ph-2-amb-belgrano-moldes-2200-usd-51282322.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-ph-2-amb-belgrano-moldes-2200-usd-51282322.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Moldes ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': 'USD',
 'title': 'Alquiler - PH 2 Amb - Belgrano - Moldes 2200 - Usd 550todo Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-ph-2-amb-belgrano-moldes-2200-usd-51282322.html'}
2023-03-27 23:39:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-ph-en-alquiler-en-san-telmo-capital-51304648.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:39:56 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:39:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-ph-en-alquiler-en-san-telmo-capital-51304648.html>
{'ambientes': '4',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'AVENIDA GARAY 700',
 'dormitorios': '3',
 'expensas': ' 998',
 'm2_cub': '120',
 'm2_total': '180',
 'moneda': '$',
 'title': 'Departamento PH en Alquiler en San Telmo, Capital Federal, Buenos '
          'Aires',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-ph-en-alquiler-en-san-telmo-capital-51304648.html'}
2023-03-27 23:40:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51385949.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:00 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:40:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51385949.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Libertador al 5800',
 'dormitorios': '2',
 'expensas': ' 9.000',
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Departamento - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51385949.html'}
2023-03-27 23:40:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51348668.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:40:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51348668.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Av. Boedo 1900. Entre Av. chiclana y Metán',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '39',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51348668.html'}
2023-03-27 23:40:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3ambientes-cocina-bano-completo-apto-51327108.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:40:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3ambientes-cocina-bano-completo-apto-51327108.html>
{'ambientes': '3',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Rivadavia al 2100',
 'dormitorios': '2',
 'expensas': ' 14.000',
 'm2_cub': '59',
 'm2_total': '62',
 'moneda': '$',
 'title': 'Departamento 3ambientes, Cocina, Baño Completo Apto Profesional '
          'Amoblado en Rivadavia Al 2100',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3ambientes-cocina-bano-completo-apto-51327108.html'}
2023-03-27 23:40:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-en-belgrano-51201930.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:40:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-en-belgrano-51201930.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Roosevelt 1780',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes Alquiler Temporal en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-en-belgrano-51201930.html'}
2023-03-27 23:40:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51365102.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51365102.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Marcelo T. Alvear al 2000',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Departamento en Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51365102.html'}
2023-03-27 23:40:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51295188.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51295188.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cespedes 2500 PB A',
 'dormitorios': '2',
 'expensas': ' 21.560',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Departamento - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-51295188.html'}
2023-03-27 23:40:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-av-olazabal-5076-51199015.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-av-olazabal-5076-51199015.html>
{'ambientes': '3',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'AV OLAZABAL 5076. Entre Avalos y Baunes',
 'dormitorios': '2',
 'expensas': ' 20.000',
 'm2_cub': '49',
 'm2_total': '56',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes. | Av Olazabal 5076',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes.-av-olazabal-5076-51199015.html'}
2023-03-27 23:40:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-palermo-51179087.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-palermo-51179087.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Nicargua 4200',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes Alquiler Temporal Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-alquiler-temporal-palermo-51179087.html'}
2023-03-27 23:40:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-109.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:26 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:40:27 [scrapy.extensions.logstats] INFO: Crawled 1603 pages (at 17 pages/min), scraped 1493 items (at 15 items/min)
2023-03-27 23:40:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-dor.-c-dep-palermo-capital-federal-51143208.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-dor.-c-dep-palermo-capital-federal-51143208.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'AV DEL LIBERTADOR 2200',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '150',
 'm2_total': '160',
 'moneda': 'USD',
 'title': 'Departamento 2 Dor. C/dep - Palermo, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-dor.-c-dep-palermo-capital-federal-51143208.html'}
2023-03-27 23:40:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-quartier-san-telmo-51264618.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:34 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:40:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-quartier-san-telmo-51264618.html>
{'ambientes': '2',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Garay al 700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '48',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes en Quartier San Telmo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-quartier-san-telmo-51264618.html'}
2023-03-27 23:40:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/oficina-en-palermo-51356802.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:40:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/oficina-en-palermo-51356802.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Scalabrini Ortiz al 2300',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '55',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Oficina en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/oficina-en-palermo-51356802.html'}
2023-03-27 23:40:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excepc-y-amplio-3-amb-fte-c-bcon-m-av-santa-fe-51361910.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excepc-y-amplio-3-amb-fte-c-bcon-m-av-santa-fe-51361910.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Excepc y Amplio 3 AMB al Frente con Balcón s/ Riobamba y Av. '
              'Santa Fe',
 'dormitorios': '2',
 'expensas': ' 67.700',
 'm2_cub': '75',
 'm2_total': '78',
 'moneda': '$',
 'title': 'Excepc y Amplio 3 Amb Fte C/bcon m Av Santa Fe',
 'url': 'https://www.zonaprop.com.ar/propiedades/excepc-y-amplio-3-amb-fte-c-bcon-m-av-santa-fe-51361910.html'}
2023-03-27 23:40:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-temporario-en-recoleta-51303690.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-temporario-en-recoleta-51303690.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Sanchez DE Bustamante al 2300',
 'dormitorios': '2',
 'expensas': 0,
 'm2_total': '110',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes Temporario en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-temporario-en-recoleta-51303690.html'}
2023-03-27 23:40:50 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-belgrano-cabildo-200-usd-51256867.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:50 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-belgrano-cabildo-200-usd-51256867.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Cabildo ',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': 'USD',
 'title': 'Alquiler - 4 Ambientes - Belgrano - Cabildo 200 - Usd 1.000 Todo '
          'Incluido',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-4-ambientes-belgrano-cabildo-200-usd-51256867.html'}
2023-03-27 23:40:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto.-2-ambientes-av-dorrego-2200-palermo-cap.-51374447.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto.-2-ambientes-av-dorrego-2200-palermo-cap.-51374447.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Av. Dorrego ',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_cub': '33',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Depto. 2 Ambientes – Av Dorrego 2200, Palermo, Cap. Fed. Argentina.',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto.-2-ambientes-av-dorrego-2200-palermo-cap.-51374447.html'}
2023-03-27 23:40:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-en-belgrano-amplio-5-amb.-51360222.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:40:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-en-belgrano-amplio-5-amb.-51360222.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': '3 de Febrero 1900',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '138',
 'm2_total': '163',
 'moneda': 'USD',
 'title': 'Alquiler en Belgrano Amplio 5 Amb.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-en-belgrano-amplio-5-amb.-51360222.html'}
2023-03-27 23:41:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-constitucion-51272165.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-constitucion-51272165.html>
{'ambientes': '1',
 'barrio': ', Constitución, Capital Federal',
 'direccion': 'Estados Unidos al 1500',
 'expensas': 0,
 'm2_cub': '38',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Departamento en Constitución',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-constitucion-51272165.html'}
2023-03-27 23:41:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-en-nunez-en-alquiler-51326158.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-en-nunez-en-alquiler-51326158.html>
{'ambientes': '2',
 'barrio': ', Coghlan, Capital Federal',
 'direccion': 'Ciudad de la paz 3000',
 'dormitorios': '1',
 'expensas': ' 35.000',
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Departamento de 2 Ambientes en Nuñez en Alquiler Permanente',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-2-ambientes-en-nunez-en-alquiler-51326158.html'}
2023-03-27 23:41:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-4-amb-depend-frente-balcon-categoria-51378828.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-4-amb-depend-frente-balcon-categoria-51378828.html>
{'ambientes': '4',
 'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Callao al 400',
 'dormitorios': '3',
 'expensas': ' 21.000',
 'm2_cub': '115',
 'm2_total': '118',
 'moneda': '$',
 'title': 'Semipiso 4 Amb Depend Frente Balcón Categoría',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-4-amb-depend-frente-balcon-categoria-51378828.html'}
2023-03-27 23:41:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dpto.-3-amb.-con-cochera-51258394.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dpto.-3-amb.-con-cochera-51258394.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Aguilar 2233',
 'dormitorios': '2',
 'expensas': ' 42.500',
 'm2_cub': '62',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Dpto. 3 Amb. con Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/dpto.-3-amb.-con-cochera-51258394.html'}
2023-03-27 23:41:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-110.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:41:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-con-cochera-51383525.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-con-cochera-51383525.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Figueroa Alcorta y San Martin de Tours',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '120',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Alquiler Departamento de 3 Ambientes con Cochera - Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-de-3-ambientes-con-cochera-51383525.html'}
2023-03-27 23:41:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-tipo-ph-en-alquiler-3-amb-70-m-sup2--bcon-51361327.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:41:20 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-tipo-ph-en-alquiler-3-amb-70-m-sup2--bcon-51361327.html>
{'ambientes': '3',
 'barrio': ', Almagro Sur, Almagro',
 'direccion': 'Agrelo ',
 'dormitorios': '2',
 'expensas': ' 6.200',
 'm2_cub': '62',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Departamento Tipo PH en Alquiler 3 Amb 70 m² Bcon 2°piso Escalera '
          'Agrelo Al 3400',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-tipo-ph-en-alquiler-3-amb-70-m-sup2--bcon-51361327.html'}
2023-03-27 23:41:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-51251022.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-51251022.html>
{'ambientes': '3',
 'barrio': ', Tribunales, Capital Federal',
 'direccion': 'Tucuman 1455',
 'dormitorios': '2',
 'expensas': ' 27.000',
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': '$',
 'title': '3 Ambientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-51251022.html'}
2023-03-27 23:41:27 [scrapy.extensions.logstats] INFO: Crawled 1619 pages (at 16 pages/min), scraped 1508 items (at 15 items/min)
2023-03-27 23:41:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-recoleta-51177823.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-recoleta-51177823.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Av Pueyrredon y Pacheco de Melo',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '90',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporal 3 Ambientes Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-recoleta-51177823.html'}
2023-03-27 23:41:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporal-de-depto-de-2-ambientes-en-palermo-51378007.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporal-de-depto-de-2-ambientes-en-palermo-51378007.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Paraguay ',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Alquiler Temporal de Depto de 2 Ambientes en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporal-de-depto-de-2-ambientes-en-palermo-51378007.html'}
2023-03-27 23:41:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51376287.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51376287.html>
{'ambientes': '1',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'Soler al 3200',
 'dormitorios': '1',
 'expensas': ' 9.000',
 'm2_cub': '24',
 'm2_total': '24',
 'moneda': '$',
 'title': 'Departamento en Barrio Norte',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-barrio-norte-51376287.html'}
2023-03-27 23:41:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-111.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:37 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:41:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-caballito-51383425.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-caballito-51383425.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Felipe Vallese al 1600',
 'dormitorios': '2',
 'expensas': ' 8.000',
 'm2_cub': '62',
 'm2_total': '68',
 'moneda': '$',
 'title': 'Departamento - Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-caballito-51383425.html'}
2023-03-27 23:41:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temp.-y-anual-migueletes-y-o.-gasset-2-51289109.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:41:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temp.-y-anual-migueletes-y-o.-gasset-2-51289109.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Migueletes AL 500',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '90',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'Alquiler Temp. y Anual - Migueletes y O. Gasset - 2 Dor - Impecable',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temp.-y-anual-migueletes-y-o.-gasset-2-51289109.html'}
2023-03-27 23:41:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-belgrano-51374554.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:47 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:41:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-belgrano-51374554.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Amenabar 2800',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '97',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Alquiler Temporario Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-belgrano-51374554.html'}
2023-03-27 23:41:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/tres-ambientes-contrafrente-balcon-apto-profesional-51385280.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:41:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/tres-ambientes-contrafrente-balcon-apto-profesional-51385280.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'SUCRE 1300, Belgrano, Capital Federal, Argentina.',
 'dormitorios': '2',
 'expensas': ' 27.000',
 'm2_cub': '64',
 'm2_total': '74',
 'moneda': '$',
 'title': 'Tres Ambientes Contrafrente Balcon, Apto Profesional, Muy Luminoso, '
          'Belgrano.',
 'url': 'https://www.zonaprop.com.ar/propiedades/tres-ambientes-contrafrente-balcon-apto-profesional-51385280.html'}
2023-03-27 23:41:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-san-telmo-51182084.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:41:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-san-telmo-51182084.html>
{'ambientes': '2',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'Piedras al 800',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Departamento - San Telmo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-san-telmo-51182084.html'}
2023-03-27 23:41:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51364791.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:41:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:41:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51364791.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Fray J. S. M. Oro al 2400',
 'expensas': ' 11.000',
 'm2_cub': '18',
 'm2_total': '34',
 'moneda': '$',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51364791.html'}
2023-03-27 23:42:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento.-palermo-nuevo-2-dorm.-51288871.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:42:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento.-palermo-nuevo-2-dorm.-51288871.html>
{'ambientes': '3',
 'barrio': ', Botánico, Palermo',
 'direccion': 'Cerviño al 4700',
 'dormitorios': '2',
 'expensas': ' 8.610',
 'm2_cub': '91',
 'm2_total': '91',
 'moneda': 'USD',
 'title': 'Alquiler - Departamento. Palermo Nuevo - 2 Dorm. - Cochera - Alto '
          'Vista Río',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento.-palermo-nuevo-2-dorm.-51288871.html'}
2023-03-27 23:42:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-alquiler-uso-comercial-charlone-42-chacarita-51203488.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:42:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-alquiler-uso-comercial-charlone-42-chacarita-51203488.html>
{'ambientes': '4',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'CHARLONE ',
 'expensas': 0,
 'm2_cub': '170',
 'm2_total': '220',
 'moneda': '$',
 'title': 'Casa Alquiler Uso Comercial - Charlone 42 - Chacarita',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-alquiler-uso-comercial-charlone-42-chacarita-51203488.html'}
2023-03-27 23:42:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-muy-amplio-con-balcon-y-51381681.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-muy-amplio-con-balcon-y-51381681.html>
{'ambientes': '1',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'Lima al 1100',
 'expensas': ' 22.000',
 'm2_cub': '38',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Alquiler Monoambiente Muy Amplio con Balcon y Amenities, Lima Al '
          '1100',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-muy-amplio-con-balcon-y-51381681.html'}
2023-03-27 23:42:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51259040.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51259040.html>
{'ambientes': '6',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'AV Libertador al 2800',
 'dormitorios': '4',
 'expensas': 0,
 'm2_total': '305',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-51259040.html'}
2023-03-27 23:42:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-apto-profesional-unicamente.-ideal-51303733.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-apto-profesional-unicamente.-ideal-51303733.html>
{'ambientes': '1',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'viamonte ',
 'expensas': 0,
 'm2_cub': '20',
 'moneda': '$',
 'title': 'Monoambiente Apto Profesional Unicamente. Ideal Oficina/estudio',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-apto-profesional-unicamente.-ideal-51303733.html'}
2023-03-27 23:42:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282678.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282678.html>
{'ambientes': '3',
 'barrio': ', Almagro Norte, Almagro',
 'direccion': 'General Urquiza al 1000',
 'dormitorios': '2',
 'expensas': ' 23.700',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': '3amb · 60 m² · Nvo! S/ambl! Bcón Fte! 2 Aa! Pile! Sum! Parr! Gym! '
          'Full Amenities!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282678.html'}
2023-03-27 23:42:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-112.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:23 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:42:27 [scrapy.extensions.logstats] INFO: Crawled 1636 pages (at 17 pages/min), scraped 1523 items (at 15 items/min)
2023-03-27 23:42:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/baigorria-3900-departamento-3-ambientes-con-patio-51325471.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:27 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/baigorria-3900-departamento-3-ambientes-con-patio-51325471.html>
{'ambientes': '3',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'baigorria 3900',
 'dormitorios': '2',
 'expensas': ' 13.000',
 'm2_cub': '50',
 'm2_total': '56',
 'moneda': '$',
 'title': 'Baigorria 3900 - Departamento 3 Ambientes con Patio, Fondo y Jardin '
          'Comun',
 'url': 'https://www.zonaprop.com.ar/propiedades/baigorria-3900-departamento-3-ambientes-con-patio-51325471.html'}
2023-03-27 23:42:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-palermo-capital-federal-51244670.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:31 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:42:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-palermo-capital-federal-51244670.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'MANSILLA LUCIO N. GRAL. 3300',
 'dormitorios': '2',
 'expensas': ' 49.728',
 'm2_cub': '67',
 'm2_total': '74',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes - Palermo, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-palermo-capital-federal-51244670.html'}
2023-03-27 23:42:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-balvanera-51213896.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:35 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:42:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-balvanera-51213896.html>
{'ambientes': '3',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Adolfo Alsina 2200',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '52',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Departamento en Alquiler de 2 Dorm. en Balvanera',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-2-dorm.-en-balvanera-51213896.html'}
2023-03-27 23:42:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-chico-51234997.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:42:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-chico-51234997.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'LA Pampa al 1300',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '82',
 'm2_total': '88',
 'moneda': 'USD',
 'title': 'Departamento - Belgrano Chico',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-chico-51234997.html'}
2023-03-27 23:42:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-con-local-de-2-ambientes.-lugano.-51296481.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:42:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-con-local-de-2-ambientes.-lugano.-51296481.html>
{'ambientes': '2',
 'barrio': ', Villa Lugano, Capital Federal',
 'direccion': 'Cañada de Gomez 5300',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '160',
 'm2_total': '160',
 'moneda': '$',
 'title': 'Casa con Local de 2 Ambientes. Lugano.',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-con-local-de-2-ambientes.-lugano.-51296481.html'}
2023-03-27 23:42:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/larrea-y-juncal-3amb-bcon-ater-2dorm-mas-estar-2bns-51385117.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:42:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/larrea-y-juncal-3amb-bcon-ater-2dorm-mas-estar-2bns-51385117.html>
{'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Larrea y Juncal',
 'dormitorios': '2',
 'expensas': ' 38.000',
 'm2_cub': '85',
 'm2_total': '95',
 'moneda': '$',
 'title': 'Larrea y Juncal 3amb Bcon Ater 2dorm Mas Estar 2bñs 1toi Coch. '
          'Pilet Solar a Nvo',
 'url': 'https://www.zonaprop.com.ar/propiedades/larrea-y-juncal-3amb-bcon-ater-2dorm-mas-estar-2bns-51385117.html'}
2023-03-27 23:42:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exclusivo-tres-ambientes-a-estrenar-con-terraza-propia-51374553.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exclusivo-tres-ambientes-a-estrenar-con-terraza-propia-51374553.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Rosario al 700',
 'dormitorios': '2',
 'expensas': ' 50.000',
 'm2_cub': '80',
 'm2_total': '130',
 'moneda': '$',
 'title': 'Exclusivo Tres Ambientes a Estrenar con Terraza Propia - Sum y '
          'Amenities.',
 'url': 'https://www.zonaprop.com.ar/propiedades/exclusivo-tres-ambientes-a-estrenar-con-terraza-propia-51374553.html'}
2023-03-27 23:42:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-en-recoleta-51274113.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-en-recoleta-51274113.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Recoleta',
 'dormitorios': '2',
 'expensas': ' 26.000',
 'm2_cub': '90',
 'm2_total': '95',
 'moneda': 'USD',
 'title': 'Alquiler Amoblado en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-amoblado-en-recoleta-51274113.html'}
2023-03-27 23:42:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-monserrat-51388950.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:42:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-monserrat-51388950.html>
{'ambientes': '2',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'Moreno al 500',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '72',
 'm2_total': '84',
 'moneda': 'USD',
 'title': 'Alquiler 2 Ambientes en Monserrat',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-en-monserrat-51388950.html'}
2023-03-27 23:43:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alq-escalada-al-2700-dto-2amb-loiacono-propiedades-51177884.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alq-escalada-al-2700-dto-2amb-loiacono-propiedades-51177884.html>
{'ambientes': '2',
 'barrio': ', Villa Lugano, Capital Federal',
 'direccion': 'Escalada 2700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Alq Escalada Al 2700, Dto 2amb - Loiacono Propiedades',
 'url': 'https://www.zonaprop.com.ar/propiedades/alq-escalada-al-2700-dto-2amb-loiacono-propiedades-51177884.html'}
2023-03-27 23:43:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-dos-ambientes-en-alquiler-en-centro-de-51348481.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-dos-ambientes-en-alquiler-en-centro-de-51348481.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Peña al 2200',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '62',
 'm2_total': '65',
 'moneda': '$',
 'title': 'Departamento Dos Ambientes en Alquiler en Centro de Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-dos-ambientes-en-alquiler-en-centro-de-51348481.html'}
2023-03-27 23:43:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-113.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:08 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:43:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-unidad-con-cochera-cubierta-en-optima-51242142.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-unidad-con-cochera-cubierta-en-optima-51242142.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'La Pampa 5000',
 'dormitorios': '1',
 'expensas': ' 16.000',
 'm2_cub': '47',
 'm2_total': '50',
 'moneda': '$',
 'title': 'Excelente Unidad con Cochera Cubierta en Optima Ubicación / Apto '
          'Profesional',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-unidad-con-cochera-cubierta-en-optima-51242142.html'}
2023-03-27 23:43:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-suarez-al-1400-51387033.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:43:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-suarez-al-1400-51387033.html>
{'ambientes': '2',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Suarez ',
 'dormitorios': '1',
 'expensas': ' 6.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': '2 Ambientes - Suarez Al 1400',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-suarez-al-1400-51387033.html'}
2023-03-27 23:43:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-belgrano-barrancas-t.-51207116.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:43:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-belgrano-barrancas-t.-51207116.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arribeños al 1600',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '171',
 'm2_total': '171',
 'moneda': 'USD',
 'title': 'Alquiler - Departamento - Belgrano Barrancas - T. Belvedere - 171 '
          'm² - 4 Amb - 2 Cocheras - Pileta',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-belgrano-barrancas-t.-51207116.html'}
2023-03-27 23:43:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-san-nicolas.-51288346.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:43:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-san-nicolas.-51288346.html>
{'ambientes': '2',
 'barrio': ', San Nicolás, Capital Federal',
 'direccion': 'Sarmiento 1727',
 'dormitorios': '1',
 'expensas': ' 25.000',
 'm2_cub': '43',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Alquiler Departamento 2 Ambientes, San Nicolás.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-2-ambientes-san-nicolas.-51288346.html'}
2023-03-27 23:43:27 [scrapy.extensions.logstats] INFO: Crawled 1652 pages (at 16 pages/min), scraped 1538 items (at 15 items/min)
2023-03-27 23:43:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-con-balcon-nunez-51349947.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:43:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-con-balcon-nunez-51349947.html>
{'ambientes': '1',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Crisologo Larralde al 2500',
 'expensas': ' 15.000',
 'm2_cub': '35',
 'm2_total': '37',
 'moneda': '$',
 'title': 'Monoambiente con Balcon - Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-con-balcon-nunez-51349947.html'}
2023-03-27 23:43:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-kavanagh-vista-al-rio-y-360-51216107.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-kavanagh-vista-al-rio-y-360-51216107.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Florida 100',
 'dormitorios': '2',
 'expensas': ' 140.000',
 'm2_cub': '180',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Torre Kavanagh - Vista Al Río y 360º',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-kavanagh-vista-al-rio-y-360-51216107.html'}
2023-03-27 23:43:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-villa-devoto-51337039.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-villa-devoto-51337039.html>
{'ambientes': '3',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Habana al 3900',
 'dormitorios': '2',
 'expensas': ' 35.000',
 'm2_cub': '110',
 'm2_total': '113',
 'moneda': 'USD',
 'title': 'Departamento - Villa Devoto',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-villa-devoto-51337039.html'}
2023-03-27 23:43:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-1-dormitorio-en-palermo-51322057.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-1-dormitorio-en-palermo-51322057.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Ugarteche 3000',
 'dormitorios': '1',
 'expensas': ' 14.000',
 'm2_cub': '47',
 'm2_total': '47',
 'moneda': '$',
 'title': 'Departamento en Alquiler de 1 Dormitorio en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-1-dormitorio-en-palermo-51322057.html'}
2023-03-27 23:43:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-barrio-norte-capital-51344063.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-barrio-norte-capital-51344063.html>
{'ambientes': '3',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'SCALABRINI ORTIZ RAUL 2600',
 'dormitorios': '2',
 'expensas': ' 27.600',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes - Barrio Norte, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-barrio-norte-capital-51344063.html'}
2023-03-27 23:43:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-madero-plaza!-51212954.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-madero-plaza!-51212954.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso ',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '50',
 'm2_total': '55',
 'moneda': 'USD',
 'title': 'Hermoso Departamento en Madero Plaza!',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-departamento-en-madero-plaza!-51212954.html'}
2023-03-27 23:43:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/virrey-del-pino-2400-3-ambientes-luminoso-51229338.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/virrey-del-pino-2400-3-ambientes-luminoso-51229338.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'virrey del pino ',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': 'Virrey del Pino 2400 - 3 Ambientes Luminoso',
 'url': 'https://www.zonaprop.com.ar/propiedades/virrey-del-pino-2400-3-ambientes-luminoso-51229338.html'}
2023-03-27 23:43:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-114.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:43:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espect-4-amb-3-dorm-en-ste-a-estrenar-c-coch-bcon-51268566.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espect-4-amb-3-dorm-en-ste-a-estrenar-c-coch-bcon-51268566.html>
{'ambientes': '4',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Avellaneda al 2200 y Gavilan (avellaneda Palace) fte',
 'dormitorios': '3',
 'expensas': ' 70.000',
 'm2_cub': '140',
 'm2_total': '160',
 'moneda': 'USD',
 'title': 'Espect 4 Amb (3 Dorm en Ste) a Estrenar C/coch Bcon Aterr Cfte '
          'Amenities Premium Vig 24 Has',
 'url': 'https://www.zonaprop.com.ar/propiedades/espect-4-amb-3-dorm-en-ste-a-estrenar-c-coch-bcon-51268566.html'}
2023-03-27 23:43:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-2-ambientes-con-aire-acondicionado-51235867.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:43:58 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:43:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-2-ambientes-con-aire-acondicionado-51235867.html>
{'ambientes': '2',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'Combate de los Pozos 1400',
 'dormitorios': '1',
 'expensas': ' 17.000',
 'm2_cub': '37',
 'm2_total': '37',
 'moneda': '$',
 'title': 'Alquiler Depto 2 Ambientes con Aire Acondicionado',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-2-ambientes-con-aire-acondicionado-51235867.html'}
2023-03-27 23:44:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/rivadavia-5800-2-ambientes-c-balcon-caballito-51326445.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/rivadavia-5800-2-ambientes-c-balcon-caballito-51326445.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Av. Rivadavia al 5800',
 'dormitorios': '1',
 'expensas': ' 8.900',
 'm2_cub': '36',
 'm2_total': '44',
 'moneda': '$',
 'title': 'Rivadavia 5800 - 2 Ambientes C/ Balcón - Caballito - Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/rivadavia-5800-2-ambientes-c-balcon-caballito-51326445.html'}
2023-03-27 23:44:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-excelente-estado-todo-luz.-51296709.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-excelente-estado-todo-luz.-51296709.html>
{'ambientes': '2',
 'barrio': ', Constitución, Capital Federal',
 'direccion': '15 de Noviembre 1400',
 'dormitorios': '1',
 'expensas': ' 6.900',
 'm2_cub': '40',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Alquiler 2 Ambientes - Excelente Estado - Todo Luz.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-excelente-estado-todo-luz.-51296709.html'}
2023-03-27 23:44:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51366211.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51366211.html>
{'ambientes': '2',
 'barrio': ', Boedo, Capital Federal',
 'direccion': 'Av. Boedo 1900. Entre Av. chiclana y Metán',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '37',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes con Balcón',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-con-balcon-51366211.html'}
2023-03-27 23:44:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51204280.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51204280.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Arevalo al 1900',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '46',
 'm2_total': '48',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51204280.html'}
2023-03-27 23:44:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-amoblado-en-monserrat-51388833.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-amoblado-en-monserrat-51388833.html>
{'ambientes': '1',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'Monserrat al 500',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Alquiler Monoambiente Amoblado en Monserrat',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-monoambiente-amoblado-en-monserrat-51388833.html'}
2023-03-27 23:44:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-departamento-2-ambientes-sobre-la-calle-51232213.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:23 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-departamento-2-ambientes-sobre-la-calle-51232213.html>
{'ambientes': '1',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'florida 686',
 'dormitorios': '1',
 'expensas': ' 18.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Espectacular Departamento 2 Ambientes Sobre La Calle Florida! '
          'Excelente Estado',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-departamento-2-ambientes-sobre-la-calle-51232213.html'}
2023-03-27 23:44:27 [scrapy.extensions.logstats] INFO: Crawled 1668 pages (at 16 pages/min), scraped 1553 items (at 15 items/min)
2023-03-27 23:44:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-monserrat-capital-federal-51248269.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-monserrat-capital-federal-51248269.html>
{'ambientes': '2',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'SALTA 600',
 'dormitorios': '1',
 'expensas': ' 17.500',
 'm2_cub': '27',
 'm2_total': '27',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes - Monserrat, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-monserrat-capital-federal-51248269.html'}
2023-03-27 23:44:31 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-luis-maria-campos-1500-51268438.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:31 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-luis-maria-campos-1500-51268438.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Luis maría campos ',
 'dormitorios': '1',
 'expensas': ' 19.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Alquiler 2 Ambientes - Luis María Campos 1500 - Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-2-ambientes-luis-maria-campos-1500-51268438.html'}
2023-03-27 23:44:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-115.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:44:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-complejo-up-grade-park-51373843.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-complejo-up-grade-park-51373843.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Av Monroe 1122',
 'dormitorios': '1',
 'expensas': ' 50.000',
 'm2_cub': '55',
 'm2_total': '59',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler en Complejo Up Grade Park Alquiler Cochera '
          'Baulera Seg24hs Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-en-complejo-up-grade-park-51373843.html'}
2023-03-27 23:44:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-2-ambientes-temporario-51327097.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-2-ambientes-temporario-51327097.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Quartier Dorrego',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Quartier Dorrego - Alquiler 2 Ambientes Temporario - Palermo '
          'Hollywood.',
 'url': 'https://www.zonaprop.com.ar/propiedades/quartier-dorrego-alquiler-2-ambientes-temporario-51327097.html'}
2023-03-27 23:44:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/belgrano-rivera-y-moldes-2-amb-en-alquiler-cerca-51267196.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/belgrano-rivera-y-moldes-2-amb-en-alquiler-cerca-51267196.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Rivera al 2700',
 'dormitorios': '1',
 'expensas': ' 6.600',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Belgrano (Rivera y Moldes) - 2 Amb en Alquiler - Cerca de Av '
          'Cabildo y Subte - Muy Buen Estado',
 'url': 'https://www.zonaprop.com.ar/propiedades/belgrano-rivera-y-moldes-2-amb-en-alquiler-cerca-51267196.html'}
2023-03-27 23:44:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-balvanera-capital-federal-51382452.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-balvanera-capital-federal-51382452.html>
{'ambientes': '2',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'TUCUMAN 2300',
 'dormitorios': '1',
 'expensas': ' 18.000',
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes - Balvanera, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-balvanera-capital-federal-51382452.html'}
2023-03-27 23:44:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-jose-hernandez-2200-belgrano-51315751.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:53 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-jose-hernandez-2200-belgrano-51315751.html>
{'ambientes': '2',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'jose hernandez ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '80',
 'm2_total': '80',
 'moneda': 'USD',
 'title': '2 Ambientes - Jose Hernandez 2200, Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-jose-hernandez-2200-belgrano-51315751.html'}
2023-03-27 23:44:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-con-balcon-51368856.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:44:58 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-con-balcon-51368856.html>
{'ambientes': '2',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Dr. Romulo Naon 3800 4°',
 'dormitorios': '1',
 'expensas': ' 14.500',
 'm2_cub': '42',
 'm2_total': '46',
 'moneda': '$',
 'title': 'Excelente 2 Ambientes con Balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-con-balcon-51368856.html'}
2023-03-27 23:45:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto.-3-ambientes-cfte.-primer-piso-luminoso-con-dos-51316048.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto.-3-ambientes-cfte.-primer-piso-luminoso-con-dos-51316048.html>
{'ambientes': '3',
 'barrio': ', Flores Sur, Flores',
 'direccion': 'Culpina 159 ',
 'dormitorios': '2',
 'expensas': ' 18.000',
 'm2_cub': '52',
 'm2_total': '72',
 'moneda': '$',
 'title': 'Depto. 3 Ambientes Cfte. Primer Piso Luminoso con Dos Patios',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto.-3-ambientes-cfte.-primer-piso-luminoso-con-dos-51316048.html'}
2023-03-27 23:45:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-116.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:03 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:45:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/b.-encalada-4400-balcon-terraza-parrilla-51284835.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/b.-encalada-4400-balcon-terraza-parrilla-51284835.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Blanco Encalada ',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_cub': '35',
 'm2_total': '45',
 'moneda': '$',
 'title': 'B. Encalada 4400 - Balcon Terraza - Parrilla - Amoblado y Equipado '
          '- V Urquiza',
 'url': 'https://www.zonaprop.com.ar/propiedades/b.-encalada-4400-balcon-terraza-parrilla-51284835.html'}
2023-03-27 23:45:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-viewpoint-libertador-alquiler-sin-muebles-piso-51308933.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-viewpoint-libertador-alquiler-sin-muebles-piso-51308933.html>
{'ambientes': '4',
 'barrio': ', Las Cañitas, Palermo',
 'direccion': 'AVENIDA DEL LIBERTADOR 5400',
 'dormitorios': '3',
 'expensas': ' 150.000',
 'm2_cub': '170',
 'm2_total': '170',
 'moneda': 'USD',
 'title': 'Torre Viewpoint Libertador Alquiler Sin Muebles Piso Muy Alto La '
          'Mejor Vista',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-viewpoint-libertador-alquiler-sin-muebles-piso-51308933.html'}
2023-03-27 23:45:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amoblado.-3-piso-por-escalera.-cerca-universidad-uade-51285113.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amoblado.-3-piso-por-escalera.-cerca-universidad-uade-51285113.html>
{'ambientes': '2',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Independencia 1400',
 'expensas': ' 20.000',
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Amoblado. 3 Piso por Escalera. Cerca Universidad Uade',
 'url': 'https://www.zonaprop.com.ar/propiedades/amoblado.-3-piso-por-escalera.-cerca-universidad-uade-51285113.html'}
2023-03-27 23:45:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-2-dorm-en-suite.-cochera.-amenities-51211376.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-2-dorm-en-suite.-cochera.-amenities-51211376.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Sanchez de Bustamante 2100',
 'dormitorios': '2',
 'expensas': ' 90.000',
 'm2_cub': '100',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Torre 2 Dorm en Suite. Cochera. Amenities',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-2-dorm-en-suite.-cochera.-amenities-51211376.html'}
2023-03-27 23:45:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente.-piedras-1600-51349165.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente.-piedras-1600-51349165.html>
{'ambientes': '1',
 'barrio': ', San Telmo, Capital Federal',
 'direccion': 'piedras 1600. Entre Avenida caseros',
 'dormitorios': '1',
 'expensas': ' 16.000',
 'm2_cub': '32',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento 1 Ambiente. | Piedras 1600',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-1-ambiente.-piedras-1600-51349165.html'}
2023-03-27 23:45:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/villa-del-parque-cuenca-3100-alquiler-temporario-3-51343794.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/villa-del-parque-cuenca-3100-alquiler-temporario-3-51343794.html>
{'ambientes': '3',
 'barrio': ', Villa del Parque, Capital Federal',
 'direccion': 'CUENCA 3158',
 'dormitorios': '2',
 'expensas': ' 6.000',
 'm2_cub': '65',
 'm2_total': '69',
 'moneda': '$',
 'title': 'Villa del Parque, cuenca 3100 - Alquiler Temporario 3 Ambientes con '
          'Balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/villa-del-parque-cuenca-3100-alquiler-temporario-3-51343794.html'}
2023-03-27 23:45:27 [scrapy.extensions.logstats] INFO: Crawled 1685 pages (at 17 pages/min), scraped 1568 items (at 15 items/min)
2023-03-27 23:45:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-117.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:45:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-temporal-nunez-51258105.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-temporal-nunez-51258105.html>
{'ambientes': '1',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Avenida del Libertador 6836',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '41',
 'm2_total': '41',
 'moneda': 'USD',
 'title': 'Departamento Monoambiente en Alquiler Temporal Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-monoambiente-en-alquiler-temporal-nunez-51258105.html'}
2023-03-27 23:45:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-flores-51379208.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-flores-51379208.html>
{'ambientes': '2',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Gaona al 2500',
 'dormitorios': '1',
 'expensas': ' 8.500',
 'm2_cub': '34',
 'm2_total': '34',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes en Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-flores-51379208.html'}
2023-03-27 23:45:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-ciudad-de-la-paz-3200-belgrano-51132643.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-ciudad-de-la-paz-3200-belgrano-51132643.html>
{'ambientes': '2',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'Ciudad de La Paz ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Hermoso 2 Ambientes - Ciudad de La Paz 3200, Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-2-ambientes-ciudad-de-la-paz-3200-belgrano-51132643.html'}
2023-03-27 23:45:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelentes-2-ambientes-amplios-luminosos-piscina-y-51303901.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelentes-2-ambientes-amplios-luminosos-piscina-y-51303901.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Avda Santa Fe ',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '45',
 'm2_total': '52',
 'moneda': '$',
 'title': 'Excelentes 2 Ambientes Amplios, Luminosos Piscina y Sum',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelentes-2-ambientes-amplios-luminosos-piscina-y-51303901.html'}
2023-03-27 23:45:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-apto-profesional-lateral-luminosos-51190177.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-apto-profesional-lateral-luminosos-51190177.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'San José de Calasanz ',
 'dormitorios': '1',
 'expensas': ' 16.000',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': '2 Ambientes Apto Profesional, Lateral Luminosos',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-apto-profesional-lateral-luminosos-51190177.html'}
2023-03-27 23:45:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-ph-refaccionado-con-gran-terraza-propia!-51340732.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-ph-refaccionado-con-gran-terraza-propia!-51340732.html>
{'ambientes': '3',
 'barrio': ', Chacarita, Capital Federal',
 'direccion': 'Bonpland al 900',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '63',
 'm2_total': '115',
 'moneda': '$',
 'title': 'Excelente PH Refaccionado con Gran Terraza Propia!',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-ph-refaccionado-con-gran-terraza-propia!-51340732.html'}
2023-03-27 23:45:53 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/avda.-belgrano-1700-7-51237239.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/avda.-belgrano-1700-7-51237239.html>
{'ambientes': '2',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'av belgrano ',
 'dormitorios': '1',
 'expensas': ' 12.500',
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Avda. Belgrano 1700, 7°',
 'url': 'https://www.zonaprop.com.ar/propiedades/avda.-belgrano-1700-7-51237239.html'}
2023-03-27 23:45:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51290975.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:45:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51290975.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Martin de Gainza al 900',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Departamento en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51290975.html'}
2023-03-27 23:46:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-de-diseno-en-av-de-mayo-51307321.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-de-diseno-en-av-de-mayo-51307321.html>
{'ambientes': '3',
 'barrio': ', Centro / Microcentro, Capital Federal',
 'direccion': 'Avenida de Mayo al 700',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '58',
 'm2_total': '58',
 'moneda': 'USD',
 'title': 'Departamento de Diseño en Av de Mayo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-de-diseno-en-av-de-mayo-51307321.html'}
2023-03-27 23:46:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dpto.-2-ambientes-lateral-a-m-de-universidad-51256644.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dpto.-2-ambientes-lateral-a-m-de-universidad-51256644.html>
{'ambientes': '2',
 'barrio': ', Caballito Norte, Caballito',
 'direccion': 'Hidalgo 765',
 'expensas': ' 12.000',
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Dpto. 2 Ambientes - Lateral - a m de Universidad Maimonides',
 'url': 'https://www.zonaprop.com.ar/propiedades/dpto.-2-ambientes-lateral-a-m-de-universidad-51256644.html'}
2023-03-27 23:46:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-frente-balcon-dep-de-servicio-cochera-51157231.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:07 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-frente-balcon-dep-de-servicio-cochera-51157231.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'FRAY JUSTO SANTA MARIA DE ORO 2400, Palermo, Capital Federal, '
              'Argentina.',
 'dormitorios': '2',
 'expensas': ' 65.000',
 'm2_cub': '64',
 'm2_total': '74',
 'moneda': '$',
 'title': '3 Ambientes Frente Balcon, Dep de Servicio, Cochera, Super '
          'Luminoso, Palermo.',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-frente-balcon-dep-de-servicio-cochera-51157231.html'}
2023-03-27 23:46:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-118.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:10 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:46:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporal-palermo-dos-ambientes-remodelado-51295692.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:15 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporal-palermo-dos-ambientes-remodelado-51295692.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Bulnes 1814',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': 'USD',
 'title': 'Alquiler Temporal, Palermo, Dos Ambientes, Remodelado, Equipado',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporal-palermo-dos-ambientes-remodelado-51295692.html'}
2023-03-27 23:46:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/pichincha-al-400-2-amb-c-balcon-balvanera-51365705.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/pichincha-al-400-2-amb-c-balcon-balvanera-51365705.html>
{'ambientes': '2',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Pichincha al 400',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '40',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Pichincha Al 400 - 2 Amb C/balcón - Balvanera - Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/pichincha-al-400-2-amb-c-balcon-balvanera-51365705.html'}
2023-03-27 23:46:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-barracas-alquiler-temporal-51178545.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-barracas-alquiler-temporal-51178545.html>
{'ambientes': '3',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Departamento Aristobulo Del Valle 1301',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '100',
 'm2_total': '100',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes en Barracas Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-barracas-alquiler-temporal-51178545.html'}
2023-03-27 23:46:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-semipiso-2-ambientes-frente-c-balcon.-super-51261835.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:24 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-semipiso-2-ambientes-frente-c-balcon.-super-51261835.html>
{'ambientes': '2',
 'barrio': ', Parque Chacabuco, Capital Federal',
 'direccion': 'Av. Asamblea 1400',
 'dormitorios': '1',
 'expensas': ' 10.600',
 'm2_cub': '44',
 'm2_total': '49',
 'moneda': '$',
 'title': 'Excelente Semipiso 2 Ambientes Frente C/ Balcón. Super Luminoso!',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-semipiso-2-ambientes-frente-c-balcon.-super-51261835.html'}
2023-03-27 23:46:27 [scrapy.extensions.logstats] INFO: Crawled 1702 pages (at 17 pages/min), scraped 1583 items (at 15 items/min)
2023-03-27 23:46:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51218991.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51218991.html>
{'ambientes': '5',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Terrazas DEL Yacht Juana Manso al 400',
 'dormitorios': '4',
 'expensas': ' 70.000',
 'm2_cub': '242',
 'm2_total': '250',
 'moneda': 'USD',
 'title': 'Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-puerto-madero-51218991.html'}
2023-03-27 23:46:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-almagro-11-ambientes-alquiler-comercial-51166877.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-almagro-11-ambientes-alquiler-comercial-51166877.html>
{'ambientes': '11',
 'barrio': ', Almagro, Capital Federal',
 'direccion': 'Colombres 100',
 'dormitorios': '6',
 'expensas': ' 70.000',
 'm2_cub': '395',
 'm2_total': '600',
 'moneda': '$',
 'title': 'PH Almagro 11 Ambientes Alquiler Comercial',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-almagro-11-ambientes-alquiler-comercial-51166877.html'}
2023-03-27 23:46:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-3-amb-con-patios-y-terraza-51374343.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-3-amb-con-patios-y-terraza-51374343.html>
{'ambientes': '3',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Tandil al 2600',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '61',
 'm2_total': '124',
 'moneda': '$',
 'title': 'PH 3 Amb con Patios y Terraza',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-3-amb-con-patios-y-terraza-51374343.html'}
2023-03-27 23:46:39 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-av-santa-fe-51238098.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:39 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-av-santa-fe-51238098.html>
{'ambientes': '3',
 'barrio': ', Retiro, Capital Federal',
 'direccion': 'Av. Santa Fe al 800',
 'dormitorios': '2',
 'expensas': ' 25.000',
 'm2_cub': '80',
 'm2_total': '89',
 'moneda': '$',
 'title': 'Departamento 3 Ambientes en Av Santa Fe',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-av-santa-fe-51238098.html'}
2023-03-27 23:46:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/bustamante-2-ambientes-al-frente-con-balcon!-51340090.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:44 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/bustamante-2-ambientes-al-frente-con-balcon!-51340090.html>
{'ambientes': '2',
 'barrio': ', Barrio Norte, Capital Federal',
 'direccion': 'sanchez de bustamante 1006',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '42',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Bustamante - 2 Ambientes Al Frente con Balcón!',
 'url': 'https://www.zonaprop.com.ar/propiedades/bustamante-2-ambientes-al-frente-con-balcon!-51340090.html'}
2023-03-27 23:46:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/barrio-retiro-monoambiente-luminoso-con-patio-51374129.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:46 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/barrio-retiro-monoambiente-luminoso-con-patio-51374129.html>
{'ambientes': '1',
 'barrio': ', Puerto Retiro, Retiro',
 'direccion': 'Talcahuano 1071',
 'expensas': ' 9.500',
 'm2_cub': '22',
 'm2_total': '44',
 'moneda': '$',
 'title': 'Barrio Retiro, Monoambiente Luminoso con Patio',
 'url': 'https://www.zonaprop.com.ar/propiedades/barrio-retiro-monoambiente-luminoso-con-patio-51374129.html'}
2023-03-27 23:46:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-170-m-sup2--3-51367020.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-170-m-sup2--3-51367020.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Parera al 100',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '150',
 'm2_total': '170',
 'moneda': 'USD',
 'title': 'Alquiler - Departamento - Recoleta - 170 m² - 3 Dorm. - 1 Cochera - '
          '1 Dependencia',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-departamento-recoleta-170-m-sup2--3-51367020.html'}
2023-03-27 23:46:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-colegiales-51365444.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-colegiales-51365444.html>
{'ambientes': '3',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Dorrego al 1500',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '90',
 'moneda': 'USD',
 'title': 'PH - Colegiales',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-colegiales-51365444.html'}
2023-03-27 23:46:57 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/espectacular-depto-amplio-balcon-corrido!-51375520.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:46:57 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/espectacular-depto-amplio-balcon-corrido!-51375520.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'DOBLAS . Entre Formosa y Guayaquil',
 'dormitorios': '1',
 'expensas': ' 18',
 'm2_cub': '60',
 'm2_total': '70',
 'moneda': '$',
 'title': 'Espectacular Depto, Amplio, Balcon Corrido!',
 'url': 'https://www.zonaprop.com.ar/propiedades/espectacular-depto-amplio-balcon-corrido!-51375520.html'}
2023-03-27 23:47:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-acaballito-alquiler-51237161.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-acaballito-alquiler-51237161.html>
{'ambientes': '3',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'AV Directorio 1317',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Departamento 3 Ambientes en Acaballito Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-ambientes-en-acaballito-alquiler-51237161.html'}
2023-03-27 23:47:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-119.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:04 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:47:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51179052.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51179052.html>
{'ambientes': '4',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Montevideo 1920, Piso 10 dp 41, Caba, Argentina',
 'dormitorios': '2',
 'expensas': 0,
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51179052.html'}
2023-03-27 23:47:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-120.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:47:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-duplex-en-recoleta-oportunidad!-51242629.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-duplex-en-recoleta-oportunidad!-51242629.html>
{'ambientes': '6',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Quintana al 500',
 'dormitorios': '4',
 'expensas': ' 190.000',
 'm2_cub': '196',
 'm2_total': '228',
 'moneda': 'USD',
 'title': 'Excelente Duplex en Recoleta - ¡Oportunidad!',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-duplex-en-recoleta-oportunidad!-51242629.html'}
2023-03-27 23:47:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-villa-pueyrredon-51315249.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-villa-pueyrredon-51315249.html>
{'ambientes': '2',
 'barrio': ', Villa Pueyrredón, Capital Federal',
 'direccion': 'Habana ',
 'dormitorios': '1',
 'expensas': ' 5.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes - Villa Pueyrredon',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-villa-pueyrredon-51315249.html'}
2023-03-27 23:47:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-belgrano-r-51347595.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-belgrano-r-51347595.html>
{'ambientes': '5',
 'barrio': ', Belgrano R, Belgrano',
 'direccion': 'Olazabal al 3200',
 'dormitorios': '4',
 'expensas': ' 60.000',
 'm2_cub': '100',
 'm2_total': '115',
 'moneda': '$',
 'title': 'Departamento - Belgrano R',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-belgrano-r-51347595.html'}
2023-03-27 23:47:27 [scrapy.extensions.logstats] INFO: Crawled 1718 pages (at 16 pages/min), scraped 1597 items (at 14 items/min)
2023-03-27 23:47:29 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/2-ambientes-recoleta-51223475.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/2-ambientes-recoleta-51223475.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Vicente Lopez ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '36',
 'm2_total': '36',
 'moneda': 'USD',
 'title': '2 Ambientes Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/2-ambientes-recoleta-51223475.html'}
2023-03-27 23:47:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dpto-2-amb-1-bano-nunez-51300058.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dpto-2-amb-1-bano-nunez-51300058.html>
{'ambientes': '2',
 'barrio': ', Lomas de Núñez, Núñez',
 'direccion': 'Arias 1600',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '42',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Dpto 2 Amb/1 Baño Núñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/dpto-2-amb-1-bano-nunez-51300058.html'}
2023-03-27 23:47:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-nunez-51176522.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:37 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-nunez-51176522.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Arcos y Av congreso',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '96',
 'm2_total': '96',
 'moneda': 'USD',
 'title': 'Departamento en Alquiler Temporal 3 Ambientes Nuñez',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-temporal-3-ambientes-nunez-51176522.html'}
2023-03-27 23:47:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-villa-devoto-a-m-de-plaza-51279282.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-villa-devoto-a-m-de-plaza-51279282.html>
{'ambientes': '2',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Mercedes 4324 Lindisimo 2 AMB Amplio',
 'dormitorios': '1',
 'expensas': ' 13.000',
 'm2_cub': '47',
 'm2_total': '47',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes - Villa Devoto - a m de Plaza Arenales',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-villa-devoto-a-m-de-plaza-51279282.html'}
2023-03-27 23:47:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-juan-maria-gutierrez-3700-51354391.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-juan-maria-gutierrez-3700-51354391.html>
{'ambientes': '2',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Juan Maria Gutiérrez ',
 'expensas': 0,
 'm2_cub': '43',
 'm2_total': '43',
 'moneda': '$',
 'title': 'Excelente Departamento Juan Maria Gutiérrez 3700',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-juan-maria-gutierrez-3700-51354391.html'}
2023-03-27 23:47:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impecable-2-ambientes-en-caballito!-1-cochera-51251889.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impecable-2-ambientes-en-caballito!-1-cochera-51251889.html>
{'ambientes': '2',
 'barrio': '',
 'direccion': '',
 'dormitorios': '1',
 'expensas': ' 23.000',
 'm2_cub': '54',
 'm2_total': '54',
 'moneda': '$',
 'title': 'Impecable 2 Ambientes en Caballito! 1 Cochera',
 'url': 'https://www.zonaprop.com.ar/propiedades/impecable-2-ambientes-en-caballito!-1-cochera-51251889.html'}
2023-03-27 23:47:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-palermo-chico-capital-51262867.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-palermo-chico-capital-51262867.html>
{'ambientes': '4',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'GODOY CRUZ 3000',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '140',
 'm2_total': '145',
 'moneda': 'USD',
 'title': 'Departamento 3 Dor. C/dep - Palermo Chico, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-dor.-c-dep-palermo-chico-capital-51262867.html'}
2023-03-27 23:47:56 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-3-ambientes-en-villa-crespo.-51240229.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:47:56 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-3-ambientes-en-villa-crespo.-51240229.html>
{'ambientes': '3',
 'barrio': ', Palermo Nuevo, Palermo',
 'direccion': 'Padilla 681',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '65',
 'm2_total': '65',
 'moneda': 'USD',
 'title': 'Alquiler Temporario 3 Ambientes en Villa Crespo.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-3-ambientes-en-villa-crespo.-51240229.html'}
2023-03-27 23:48:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-alquiler-recoleta-51365446.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:00 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-alquiler-recoleta-51365446.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Alquiler 2 AMB Recoleta - Juncal 1300',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '75',
 'm2_total': '109',
 'moneda': 'USD',
 'title': 'Departamento - Alquiler - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-alquiler-recoleta-51365446.html'}
2023-03-27 23:48:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/cabildo-900-3-amb-c-balcon-51155675.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:04 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/cabildo-900-3-amb-c-balcon-51155675.html>
{'ambientes': '3',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Avenida Cabildo 900',
 'dormitorios': '2',
 'expensas': ' 30.000',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Cabildo 900 3 Amb C/balcon',
 'url': 'https://www.zonaprop.com.ar/propiedades/cabildo-900-3-amb-c-balcon-51155675.html'}
2023-03-27 23:48:08 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/disponible-a-partir-del-01-04-2023-u$s-3.000-3-amb-51271679.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:08 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/disponible-a-partir-del-01-04-2023-u$s-3.000-3-amb-51271679.html>
{'ambientes': '3',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor al 500',
 'dormitorios': '2',
 'expensas': ' 1',
 'm2_cub': '135',
 'm2_total': '135',
 'moneda': 'USD',
 'title': 'Disponible a Partir del 01/04/2023 - U$s 3.000 - 3 Amb - Puerto '
          'Madero - Azucena Villaflor 500 (Ram)',
 'url': 'https://www.zonaprop.com.ar/propiedades/disponible-a-partir-del-01-04-2023-u$s-3.000-3-amb-51271679.html'}
2023-03-27 23:48:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-121.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:48:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-122.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:48:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casas-casa-nunez-capital-federal-51265891.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:19 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casas-casa-nunez-capital-federal-51265891.html>
{'ambientes': '4',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'ARCOS 4300',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '300',
 'm2_total': '247',
 'moneda': 'USD',
 'title': 'Casas - Casa - Nuñez, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/casas-casa-nunez-capital-federal-51265891.html'}
2023-03-27 23:48:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-recoleta-51340566.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:20 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:48:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-recoleta-51340566.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Vidt al 2000',
 'expensas': ' 15.000',
 'm2_cub': '30',
 'm2_total': '33',
 'moneda': '$',
 'title': 'Monoambiente en Alquiler Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/monoambiente-en-alquiler-recoleta-51340566.html'}
2023-03-27 23:48:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282666.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:25 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:48:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282666.html>
{'ambientes': '3',
 'barrio': ', Caballito Sur, Caballito',
 'direccion': 'General Urquiza al 1000',
 'dormitorios': '2',
 'expensas': ' 23.700',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': '3amb · 60 m² · Nvo! S/ambl! Bcón Fte! 2 Aa! Pile! Sum! Parr! Gym! '
          'Full Amenities!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51282666.html'}
2023-03-27 23:48:27 [scrapy.extensions.logstats] INFO: Crawled 1734 pages (at 16 pages/min), scraped 1611 items (at 14 items/min)
2023-03-27 23:48:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-torres-el-faro-2-suites-dependencia-191-51151086.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:28 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:48:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-torres-el-faro-2-suites-dependencia-191-51151086.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Azucena Villaflor al 600',
 'dormitorios': '3',
 'expensas': ' 125.668',
 'm2_cub': '191',
 'm2_total': '191',
 'moneda': 'USD',
 'title': 'Alquiler Torres El Faro, 2 Suites, Dependencia, 191 m² - Puerto '
          'Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-torres-el-faro-2-suites-dependencia-191-51151086.html'}
2023-03-27 23:48:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-paquete-51221380.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:30 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:48:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-paquete-51221380.html>
{'ambientes': '3',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'LAFINUR 3100',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '64',
 'm2_total': '64',
 'moneda': 'USD',
 'title': 'Alquiler Paquete',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-paquete-51221380.html'}
2023-03-27 23:48:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/1-amb-luminoso-al-frente-51377991.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:33 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:48:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/1-amb-luminoso-al-frente-51377991.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'honduras 4004',
 'expensas': ' 11.000',
 'm2_cub': '25',
 'm2_total': '25',
 'moneda': '$',
 'title': '1 Amb Luminoso Al Frente',
 'url': 'https://www.zonaprop.com.ar/propiedades/1-amb-luminoso-al-frente-51377991.html'}
2023-03-27 23:48:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-depto-de-2-amplios-ambientes-con-patio-en-51317950.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-depto-de-2-amplios-ambientes-con-patio-en-51317950.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Soria al 5000',
 'dormitorios': '1',
 'expensas': ' 41.000',
 'm2_cub': '79',
 'm2_total': '103',
 'moneda': '$',
 'title': 'Excelente Depto de 2 Amplios Ambientes con Patio en Edificio '
          'Refaccionado Premiado en La Bienal de a',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-depto-de-2-amplios-ambientes-con-patio-en-51317950.html'}
2023-03-27 23:48:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51365578.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:41 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51365578.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Junin al 1100',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '87',
 'm2_total': '87',
 'moneda': 'USD',
 'title': 'Departamento - Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-recoleta-51365578.html'}
2023-03-27 23:48:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-las-canitas-alquiler-51258100.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:45 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-las-canitas-alquiler-51258100.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Dorrego 2765',
 'expensas': ' 1',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes en Las Cañitas Alquiler Temporal',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-en-las-canitas-alquiler-51258100.html'}
2023-03-27 23:48:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51380921.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51380921.html>
{'ambientes': '3',
 'barrio': ', San Cristobal, Capital Federal',
 'direccion': 'General Urquiza al 1000',
 'dormitorios': '2',
 'expensas': ' 23.700',
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': '$',
 'title': '3amb · 60 m² · Nvo! S/ambl! Bcón Fte! 2 Aa! Pile! Sum! Parr! Gym! '
          'Full Amenities!',
 'url': 'https://www.zonaprop.com.ar/propiedades/3amb-60-m-sup2--nvo!-s-ambl!-bcon-fte!-2-aa!-pile!-51380921.html'}
2023-03-27 23:48:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-mirabilia-palermo-al-rio-piso-40-completo-51153771.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-mirabilia-palermo-al-rio-piso-40-completo-51153771.html>
{'ambientes': '6',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'Humboltd 2000',
 'dormitorios': '5',
 'expensas': 0,
 'm2_cub': '326',
 'm2_total': '326',
 'moneda': 'USD',
 'title': 'Torre Mirabilia Palermo - Al Rio - Piso 40 Completo 326 m²',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-mirabilia-palermo-al-rio-piso-40-completo-51153771.html'}
2023-03-27 23:48:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/ph-de-2-ambientes-daniel-cerri-al-1600-51148380.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/ph-de-2-ambientes-daniel-cerri-al-1600-51148380.html>
{'ambientes': '2',
 'barrio': ', Barracas, Capital Federal',
 'direccion': 'Daniel cerri ',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '55',
 'm2_total': '59',
 'moneda': '$',
 'title': 'PH de 2 Ambientes - Daniel Cerri Al 1600',
 'url': 'https://www.zonaprop.com.ar/propiedades/ph-de-2-ambientes-daniel-cerri-al-1600-51148380.html'}
2023-03-27 23:48:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/impecable-piso-en-torre-de-categoria-amoblado-primer-51355543.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:48:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/impecable-piso-en-torre-de-categoria-amoblado-primer-51355543.html>
{'ambientes': '5',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Arcos al 1900',
 'dormitorios': '4',
 'expensas': ' 200.000',
 'm2_cub': '330',
 'm2_total': '360',
 'moneda': 'USD',
 'title': 'Impecable Piso en Torre de Categoría Amoblado Primer Nivel. '
          'Inmejorable Zona Casa del Ángel. 2 Coche',
 'url': 'https://www.zonaprop.com.ar/propiedades/impecable-piso-en-torre-de-categoria-amoblado-primer-51355543.html'}
2023-03-27 23:49:03 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-de-2-ambientes-en-palermo-51387159.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-de-2-ambientes-en-palermo-51387159.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Jose A Cabrera 3700',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '45',
 'm2_total': '50',
 'moneda': 'USD',
 'title': 'Alquiler Temporario de 2 Ambientes en Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-de-2-ambientes-en-palermo-51387159.html'}
2023-03-27 23:49:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-hermoso-departamento-a-estrenar-51298024.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-hermoso-departamento-a-estrenar-51298024.html>
{'ambientes': '2',
 'barrio': ', Caballito Norte, Caballito',
 'direccion': 'Juan B. Ambrosetti 245',
 'dormitorios': '1',
 'expensas': ' 12.000',
 'm2_cub': '38',
 'm2_total': '38',
 'moneda': '$',
 'title': 'Alquiler Temporario Hermoso Departamento a Estrenar',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-hermoso-departamento-a-estrenar-51298024.html'}
2023-03-27 23:49:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-categoria-en-alquiler-en-51373366.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-categoria-en-alquiler-en-51373366.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'La Pampa al 700',
 'dormitorios': '3',
 'expensas': ' 90.000',
 'm2_cub': '100',
 'm2_total': '120',
 'moneda': 'USD',
 'title': 'Excelente Departamento de Categoría en Alquiler en Bajo Belgrano - '
          'La Pampa Residence',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-departamento-de-categoria-en-alquiler-en-51373366.html'}
2023-03-27 23:49:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-123.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:49:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-depto-4-amb-seg.24hs.-balcon-caballito-51386991.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-depto-4-amb-seg.24hs.-balcon-caballito-51386991.html>
{'ambientes': '4',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Emilio Mitre 200',
 'dormitorios': '3',
 'expensas': ' 27.000',
 'm2_cub': '73',
 'm2_total': '78',
 'moneda': '$',
 'title': 'Alquiler Depto 4 Amb Seg.24hs. Balcon Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-depto-4-amb-seg.24hs.-balcon-caballito-51386991.html'}
2023-03-27 23:49:22 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-51159329.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:22 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-51159329.html>
{'ambientes': '3',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Republica Arabe Siria al 3000',
 'dormitorios': '2',
 'expensas': ' 46.000',
 'm2_cub': '54',
 'm2_total': '57',
 'moneda': '$',
 'title': 'Departamento - Palermo',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-51159329.html'}
2023-03-27 23:49:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alq-3-amb-a-estrenar-2-banos-balcon-cochera-51318371.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:26 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alq-3-amb-a-estrenar-2-banos-balcon-cochera-51318371.html>
{'ambientes': '3',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'BAUNESS 1950',
 'dormitorios': '2',
 'expensas': ' 13.200',
 'm2_cub': '75',
 'm2_total': '85',
 'moneda': '$',
 'title': 'Alq - 3 Amb a Estrenar - 2 Baños - Balcon - Cochera - Bauness 1950 '
          '- C. A. b. a',
 'url': 'https://www.zonaprop.com.ar/propiedades/alq-3-amb-a-estrenar-2-banos-balcon-cochera-51318371.html'}
2023-03-27 23:49:27 [scrapy.extensions.logstats] INFO: Crawled 1751 pages (at 17 pages/min), scraped 1627 items (at 16 items/min)
2023-03-27 23:49:30 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-recoleta-51303069.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:30 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-recoleta-51303069.html>
{'ambientes': '2',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Junin 1300',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '45',
 'm2_total': '45',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes Alquiler Temporal en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-recoleta-51303069.html'}
2023-03-27 23:49:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-contra-frente-luminoso-frias-51348522.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:34 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-contra-frente-luminoso-frias-51348522.html>
{'ambientes': '2',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'TENIENTE GENERAL EUSTOQUIO FRIAS 334',
 'dormitorios': '1',
 'expensas': ' 17.000',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Departamento 2 Ambientes Contra Frente Luminoso Frias y Av '
          'Corrientes',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-contra-frente-luminoso-frias-51348522.html'}
2023-03-27 23:49:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-124.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:38 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:49:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-dpto-3-amb-con-balcon-corrido-51191788.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-dpto-3-amb-con-balcon-corrido-51191788.html>
{'ambientes': '3',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'AGUILAR 2200',
 'dormitorios': '2',
 'expensas': ' 22.000',
 'm2_cub': '80',
 'm2_total': '90',
 'moneda': '$',
 'title': 'Excelente Dpto 3 Amb con Balcón Corrido',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-dpto-3-amb-con-balcon-corrido-51191788.html'}
2023-03-27 23:49:47 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-flores-51299783.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-flores-51299783.html>
{'ambientes': '5',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Aranguren al 2200',
 'dormitorios': '4',
 'expensas': ' 24.000',
 'm2_cub': '130',
 'm2_total': '130',
 'moneda': '$',
 'title': 'Departamento - Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-flores-51299783.html'}
2023-03-27 23:49:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51376515.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51376515.html>
{'ambientes': '1',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Planes al 600',
 'expensas': ' 7.500',
 'm2_cub': '28',
 'm2_total': '31',
 'moneda': '$',
 'title': 'Departamento en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-caballito-51376515.html'}
2023-03-27 23:49:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-flores-51299798.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:51 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-flores-51299798.html>
{'ambientes': '6',
 'barrio': ', Flores, Capital Federal',
 'direccion': 'Av Avellaneda al 2900',
 'dormitorios': '5',
 'expensas': ' 72.000',
 'm2_cub': '168',
 'm2_total': '170',
 'moneda': '$',
 'title': 'Departamento - Flores',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-flores-51299798.html'}
2023-03-27 23:49:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-125.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:54 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:49:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-recoleta-51340099.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:49:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-recoleta-51340099.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'French 2900,',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '35',
 'm2_total': '35',
 'moneda': 'USD',
 'title': 'Departamento 2 Ambientes Alquiler Temporal en Recoleta',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-2-ambientes-alquiler-temporal-en-recoleta-51340099.html'}
2023-03-27 23:50:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51295341.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:02 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:03 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51295341.html>
{'ambientes': '2',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': 'Virrey del Pino al 2600',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': 'USD',
 'title': 'Departamento en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-belgrano-51295341.html'}
2023-03-27 23:50:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-amoblado-y-equipado-paquete-51379738.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-amoblado-y-equipado-paquete-51379738.html>
{'ambientes': '2',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Jose Pacheco de Melo al 3000',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '35',
 'm2_total': '37',
 'moneda': 'USD',
 'title': 'Departamento en Palermo Amoblado y Equipado Paquete',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-palermo-amoblado-y-equipado-paquete-51379738.html'}
2023-03-27 23:50:09 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casas-casa-belgrano-c-chico-barrancas-capital-51353117.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:09 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:09 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casas-casa-belgrano-c-chico-barrancas-capital-51353117.html>
{'ambientes': '4',
 'barrio': ', Belgrano, Capital Federal',
 'direccion': "O'HIGGINS 2300",
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '266',
 'm2_total': '382',
 'moneda': 'USD',
 'title': 'Casas - Casa - Belgrano C/chico/barrancas, Capital Federal',
 'url': 'https://www.zonaprop.com.ar/propiedades/casas-casa-belgrano-c-chico-barrancas-capital-51353117.html'}
2023-03-27 23:50:12 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/torre-el-faro-unico-2-suite-mas-dependencia-1-o-2-51159566.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:12 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:12 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/torre-el-faro-unico-2-suite-mas-dependencia-1-o-2-51159566.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Julieta Lanteri al 1200',
 'dormitorios': '3',
 'expensas': ' 140.000',
 'm2_cub': '196',
 'm2_total': '196',
 'moneda': 'USD',
 'title': 'Torre El Faro Unico 2 Suite Mas Dependencia 1 o 2 Cocheras',
 'url': 'https://www.zonaprop.com.ar/propiedades/torre-el-faro-unico-2-suite-mas-dependencia-1-o-2-51159566.html'}
2023-03-27 23:50:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-5-ambientes-c-cochera-51205244.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:17 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-5-ambientes-c-cochera-51205244.html>
{'ambientes': '5',
 'barrio': ', Palermo Chico, Palermo',
 'direccion': 'Aguado al 2800',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '280',
 'm2_total': '320',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Chico - 5 Ambientes C/cochera - Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-chico-5-ambientes-c-cochera-51205244.html'}
2023-03-27 23:50:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51230360.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51230360.html>
{'ambientes': '2',
 'barrio': ', Palermo Hollywood, Palermo',
 'direccion': 'José A. Cabrera al 5600',
 'dormitorios': '1',
 'expensas': ' 35.000',
 'm2_cub': '63',
 'm2_total': '67',
 'moneda': 'USD',
 'title': 'Departamento - Palermo Hollywood',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-palermo-hollywood-51230360.html'}
2023-03-27 23:50:25 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/exclusivo-penthouse-en-link-tower!-departamento-51157768.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/exclusivo-penthouse-en-link-tower!-departamento-51157768.html>
{'ambientes': '4',
 'barrio': ', Puerto Madero, Capital Federal',
 'direccion': 'Juana Manso al 1700',
 'dormitorios': '3',
 'expensas': ' 120.000',
 'm2_cub': '262',
 'm2_total': '456',
 'moneda': 'USD',
 'title': 'Exclusivo Penthouse en Link Tower! Departamento - Puerto Madero',
 'url': 'https://www.zonaprop.com.ar/propiedades/exclusivo-penthouse-en-link-tower!-departamento-51157768.html'}
2023-03-27 23:50:27 [scrapy.extensions.logstats] INFO: Crawled 1767 pages (at 16 pages/min), scraped 1641 items (at 14 items/min)
2023-03-27 23:50:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-126.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:29 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/depto-1-1-2-amb-amplio-y-divisible-con-balcon-a-la-51376767.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/depto-1-1-2-amb-amplio-y-divisible-con-balcon-a-la-51376767.html>
{'ambientes': '1',
 'barrio': ', Flores Norte, Flores',
 'direccion': 'Fray Luis Beltrán 31',
 'expensas': ' 14.000',
 'm2_cub': '33',
 'm2_total': '35',
 'moneda': '$',
 'title': 'Depto 1 1/2 Amb Amplio y Divisible con Balcón a La Calle',
 'url': 'https://www.zonaprop.com.ar/propiedades/depto-1-1-2-amb-amplio-y-divisible-con-balcon-a-la-51376767.html'}
2023-03-27 23:50:36 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/hermoso-dpto-zona-plaza-san-martin-retiro-caba-51160345.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:36 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:36 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/hermoso-dpto-zona-plaza-san-martin-retiro-caba-51160345.html>
{'ambientes': '4',
 'barrio': ', Puerto Retiro, Retiro',
 'direccion': 'Retiro',
 'dormitorios': '3',
 'expensas': ' 30.000',
 'm2_cub': '87',
 'm2_total': '87',
 'moneda': '$',
 'title': 'Hermoso Dpto Zona Plaza San Martín (Retiro) - Caba',
 'url': 'https://www.zonaprop.com.ar/propiedades/hermoso-dpto-zona-plaza-san-martin-retiro-caba-51160345.html'}
2023-03-27 23:50:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departemento-a-la-calle-51218400.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:40 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departemento-a-la-calle-51218400.html>
{'ambientes': '2',
 'barrio': ', Flores Norte, Flores',
 'direccion': 'José Bonifacio 1706',
 'dormitorios': '1',
 'expensas': ' 15.000',
 'm2_cub': '45',
 'm2_total': '48',
 'moneda': '$',
 'title': 'Departemento a La Calle',
 'url': 'https://www.zonaprop.com.ar/propiedades/departemento-a-la-calle-51218400.html'}
2023-03-27 23:50:43 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/casa-villa-devoto-51207689.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:43 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:43 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/casa-villa-devoto-51207689.html>
{'ambientes': '7',
 'barrio': ', Villa Devoto, Capital Federal',
 'direccion': 'Cantilo al 5300',
 'dormitorios': '5',
 'expensas': 0,
 'moneda': '$',
 'title': 'Casa - Villa Devoto',
 'url': 'https://www.zonaprop.com.ar/propiedades/casa-villa-devoto-51207689.html'}
2023-03-27 23:50:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-en-alquiler-san-martin-de-51293828.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:48 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:48 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-en-alquiler-san-martin-de-51293828.html>
{'ambientes': '4',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Departamento 4 Ambientes en Alquiler San Martin de Tours al '
              '3100',
 'dormitorios': '3',
 'expensas': 0,
 'm2_total': '250',
 'moneda': 'USD',
 'title': 'Departamento 4 Ambientes en Alquiler San Martin de Tours Al 3100',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-4-ambientes-en-alquiler-san-martin-de-51293828.html'}
2023-03-27 23:50:51 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-balvanera-frente-a-la-plaza-miserere-51318818.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:51 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:52 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-balvanera-frente-a-la-plaza-miserere-51318818.html>
{'ambientes': '7',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Avenida Rivadavia 3002',
 'dormitorios': '5',
 'expensas': ' 39.000',
 'm2_cub': '159',
 'm2_total': '159',
 'moneda': '$',
 'title': 'Departamento en Balvanera Frente a La Plaza Miserere',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-balvanera-frente-a-la-plaza-miserere-51318818.html'}
2023-03-27 23:50:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-a-estrenar-en-alquiler-reservado-51346828.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:55 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:55 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-a-estrenar-en-alquiler-reservado-51346828.html>
{'ambientes': '4',
 'barrio': ', Liniers, Capital Federal',
 'direccion': 'Pieres al 500',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '106',
 'm2_total': '118',
 'moneda': '$',
 'title': 'Semipiso a Estrenar en Alquiler - Reservado',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-a-estrenar-en-alquiler-reservado-51346828.html'}
2023-03-27 23:50:59 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-recoleta-facultades-51179073.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:50:59 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:50:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-recoleta-facultades-51179073.html>
{'ambientes': '3',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'Marcelo t Alvear',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': 'USD',
 'title': 'Alquiler Temporario Recoleta / Facultades',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-recoleta-facultades-51179073.html'}
2023-03-27 23:51:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/1-ambiente-en-parque-chacabuco-51165996.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:01 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:51:01 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/1-ambiente-en-parque-chacabuco-51165996.html>
{'ambientes': '1',
 'barrio': '',
 'direccion': '',
 'expensas': ' 5.300',
 'm2_cub': '21',
 'm2_total': '21',
 'moneda': '$',
 'title': '1 Ambiente en Parque Chacabuco',
 'url': 'https://www.zonaprop.com.ar/propiedades/1-ambiente-en-parque-chacabuco-51165996.html'}
2023-03-27 23:51:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/-propiedad-de-prueba-no-contactar-alquiler-ph-3-51280014.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:06 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:51:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/-propiedad-de-prueba-no-contactar-alquiler-ph-3-51280014.html>
{'ambientes': '3',
 'barrio': ', Saavedra, Capital Federal',
 'direccion': 'Zapiola al 4200',
 'dormitorios': '3',
 'expensas': ' 12.000',
 'm2_cub': '93',
 'm2_total': '100',
 'moneda': 'USD',
 'title': '(Propiedad de Prueba - No Contactar) Alquiler PH 3 Ambientes en '
          'Saavedra',
 'url': 'https://www.zonaprop.com.ar/propiedades/-propiedad-de-prueba-no-contactar-alquiler-ph-3-51280014.html'}
2023-03-27 23:51:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/muy-lindo-3-ambientes-con-dependencia-o-escritorio-51267133.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:11 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:51:11 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/muy-lindo-3-ambientes-con-dependencia-o-escritorio-51267133.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Av. Del libertador 8190',
 'dormitorios': '2',
 'expensas': ' 27.800',
 'm2_cub': '74',
 'm2_total': '86',
 'moneda': '$',
 'title': 'Muy Lindo 3 Ambientes con Dependencia o Escritorio',
 'url': 'https://www.zonaprop.com.ar/propiedades/muy-lindo-3-ambientes-con-dependencia-o-escritorio-51267133.html'}
2023-03-27 23:51:13 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/se-alquila-hermoso-departamento-con-garaje-apto-51378315.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:13 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:51:13 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/se-alquila-hermoso-departamento-con-garaje-apto-51378315.html>
{'ambientes': '3',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'Montañeses ',
 'dormitorios': '2',
 'expensas': ' 75.000',
 'm2_cub': '73',
 'm2_total': '74',
 'moneda': 'USD',
 'title': 'Se Alquila Hermoso Departamento con Garaje Apto Profesional',
 'url': 'https://www.zonaprop.com.ar/propiedades/se-alquila-hermoso-departamento-con-garaje-apto-51378315.html'}
2023-03-27 23:51:16 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-zona-abasto-51368981.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:16 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:51:16 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-zona-abasto-51368981.html>
{'ambientes': '3',
 'barrio': ', Abasto, Capital Federal',
 'direccion': 'Carlos Gardel 3185',
 'dormitorios': '2',
 'expensas': ' 5.000',
 'm2_cub': '70',
 'm2_total': '70',
 'moneda': '$',
 'title': '3 Ambientes Zona Abasto',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-zona-abasto-51368981.html'}
2023-03-27 23:51:19 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/casas-departamentos-ph-alquiler-capital-federal-publicado-hace-menos-de-45-dias-pagina-127.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:19 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:51:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-piso-luminoso-belgrano-cochera-51382150.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:24 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:51:25 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-piso-luminoso-belgrano-cochera-51382150.html>
{'ambientes': '5',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'Arcos 1929',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '160',
 'm2_total': '180',
 'moneda': 'USD',
 'title': 'Alquiler - Piso Luminoso - Belgrano - Cochera - Dependencia.',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-piso-luminoso-belgrano-cochera-51382150.html'}
2023-03-27 23:51:27 [scrapy.extensions.logstats] INFO: Crawled 1783 pages (at 16 pages/min), scraped 1655 items (at 14 items/min)
2023-03-27 23:51:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dueno-alquila-2-ambientes-en-balvanera-51353552.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:27 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:51:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dueno-alquila-2-ambientes-en-balvanera-51353552.html>
{'ambientes': '2',
 'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Adolfo Alsina 2200',
 'dormitorios': '1',
 'expensas': ' 20.000',
 'm2_cub': '50',
 'm2_total': '52',
 'moneda': '$',
 'title': 'Dueño Alquila 2 Ambientes en Balvanera',
 'url': 'https://www.zonaprop.com.ar/propiedades/dueno-alquila-2-ambientes-en-balvanera-51353552.html'}
2023-03-27 23:51:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-luminoso-con-balcon-en-salguero-y-castex-51303075.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:32 [py.warnings] WARNING: /home/faraday/.venvs/facultad/lib/python3.8/site-packages/scrapy_splash/dupefilter.py:20: ScrapyDeprecationWarning: Call to deprecated function scrapy.utils.request.request_fingerprint().

If you are using this function in a Scrapy component, and you are OK with users of your component changing the fingerprinting algorithm through settings, use crawler.request_fingerprinter.fingerprint() instead in your Scrapy component (you can get the crawler object from the 'from_crawler' class method).

Otherwise, consider using the scrapy.utils.request.fingerprint() function instead.

Either way, the resulting fingerprints will be returned as bytes, not as a string, and they will also be different from those generated by 'request_fingerprint()'. Before you switch, make sure that you understand the consequences of this (e.g. cache invalidation) and are OK with them; otherwise, consider implementing your own function which returns the same fingerprints as the deprecated 'request_fingerprint()' function.
  fp = request_fingerprint(request, include_headers=include_headers)

2023-03-27 23:51:32 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-luminoso-con-balcon-en-salguero-y-castex-51303075.html>
{'ambientes': '1',
 'barrio': ', Palermo, Capital Federal',
 'direccion': 'Jerónimo Salguero 3000',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '40',
 'm2_total': '42',
 'moneda': 'USD',
 'title': 'Departamento Luminoso con Balcón en Salguero y Castex',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-luminoso-con-balcon-en-salguero-y-castex-51303075.html'}
2023-03-27 23:51:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/muy-luminoso-y-alegre-51366235.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:35 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/muy-luminoso-y-alegre-51366235.html>
{'ambientes': '1',
 'barrio': ', Recoleta, Capital Federal',
 'direccion': 'French 2850',
 'expensas': ' 14.800',
 'm2_cub': '40',
 'm2_total': '40',
 'moneda': '$',
 'title': 'Muy Luminoso y Alegre',
 'url': 'https://www.zonaprop.com.ar/propiedades/muy-luminoso-y-alegre-51366235.html'}
2023-03-27 23:51:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/amplio-departamento-en-doho-todo-luz-51356504.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:40 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/amplio-departamento-en-doho-todo-luz-51356504.html>
{'ambientes': '4',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Mariscal Antonio José de Sucre 4225',
 'dormitorios': '3',
 'expensas': 0,
 'm2_cub': '132',
 'm2_total': '145',
 'moneda': 'USD',
 'title': 'Amplio Departamento en Doho Todo Luz',
 'url': 'https://www.zonaprop.com.ar/propiedades/amplio-departamento-en-doho-todo-luz-51356504.html'}
2023-03-27 23:51:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-dos-ambientes-en-alquiler-51154105.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:42 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-dos-ambientes-en-alquiler-51154105.html>
{'ambientes': '2',
 'barrio': ', Villa Crespo, Capital Federal',
 'direccion': 'Av. Corrientes 5400',
 'dormitorios': '1',
 'expensas': ' 30.000',
 'm2_cub': '46',
 'm2_total': '49',
 'moneda': '$',
 'title': 'Excelente Dos Ambientes en Alquiler',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-dos-ambientes-en-alquiler-51154105.html'}
2023-03-27 23:51:46 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/cerreti-tower-spa-51376805.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:47 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/cerreti-tower-spa-51376805.html>
{'ambientes': '2',
 'barrio': ', Villa Urquiza, Capital Federal',
 'direccion': 'Ceretti & Avenida Olazábal',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '55',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Cerreti Tower & Spa',
 'url': 'https://www.zonaprop.com.ar/propiedades/cerreti-tower-spa-51376805.html'}
2023-03-27 23:51:49 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-ambientes-en-duplex-51261999.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:49 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-ambientes-en-duplex-51261999.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Amenabar ',
 'dormitorios': '2',
 'expensas': ' 15.000',
 'm2_cub': '60',
 'm2_total': '65',
 'moneda': '$',
 'title': '3 Ambientes en Duplex',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-ambientes-en-duplex-51261999.html'}
2023-03-27 23:51:54 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-3-amb-con-dep-87-m-sup2-51367884.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:54 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-3-amb-con-dep-87-m-sup2-51367884.html>
{'ambientes': '3',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'Av. Belgrano 225',
 'dormitorios': '2',
 'expensas': ' 50.000',
 'm2_cub': '81',
 'm2_total': '87',
 'moneda': '$',
 'title': 'Departamento 3 Amb con Dep · 87 m²',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-3-amb-con-dep-87-m-sup2-51367884.html'}
2023-03-27 23:51:58 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/3-amb-t-casa-pb-fte-sin-expensas-51309546.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:51:59 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/3-amb-t-casa-pb-fte-sin-expensas-51309546.html>
{'ambientes': '3',
 'barrio': ', Monte Castro, Capital Federal',
 'direccion': 'Cervantes 1503',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '55',
 'm2_total': '55',
 'moneda': '$',
 'title': '3 Amb T/ Casa Pb Fte Sin Expensas',
 'url': 'https://www.zonaprop.com.ar/propiedades/3-amb-t-casa-pb-fte-sin-expensas-51309546.html'}
2023-03-27 23:52:02 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-1-dormitorio-en-caballito-51386529.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:52:02 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-1-dormitorio-en-caballito-51386529.html>
{'ambientes': '2',
 'barrio': ', Caballito, Capital Federal',
 'direccion': 'Avenida Díaz Vélez al 5000',
 'dormitorios': '1',
 'expensas': ' 12.500',
 'm2_cub': '39',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Departamento en Alquiler de 1 Dormitorio en Caballito',
 'url': 'https://www.zonaprop.com.ar/propiedades/departamento-en-alquiler-de-1-dormitorio-en-caballito-51386529.html'}
2023-03-27 23:52:06 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/duplex-2-ambientes-luminoso-en-cespedes-y-conde-51367325.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:52:06 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/duplex-2-ambientes-luminoso-en-cespedes-y-conde-51367325.html>
{'ambientes': '2',
 'barrio': ', Colegiales, Capital Federal',
 'direccion': 'Céspedes 3200',
 'dormitorios': '1',
 'expensas': 0,
 'm2_cub': '60',
 'm2_total': '60',
 'moneda': 'USD',
 'title': 'Dúplex 2 Ambientes Luminoso en Cespedes y Conde',
 'url': 'https://www.zonaprop.com.ar/propiedades/duplex-2-ambientes-luminoso-en-cespedes-y-conde-51367325.html'}
2023-03-27 23:52:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-amoblado-51258217.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:52:10 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-amoblado-51258217.html>
{'barrio': ', Balvanera, Capital Federal',
 'direccion': 'Catamarca 500',
 'expensas': 0,
 'm2_cub': '30',
 'm2_total': '30',
 'moneda': '$',
 'title': 'Alquiler Temporario Monoambiente Amoblado',
 'url': 'https://www.zonaprop.com.ar/propiedades/alquiler-temporario-monoambiente-amoblado-51258217.html'}
2023-03-27 23:52:14 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/dueno-alquila-ph-en-villa-ortuzar-51274526.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:52:14 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/dueno-alquila-ph-en-villa-ortuzar-51274526.html>
{'ambientes': '4',
 'barrio': ', Villa Ortuzar, Capital Federal',
 'direccion': 'Fraga & Holmberg',
 'dormitorios': '2',
 'expensas': 0,
 'm2_cub': '100',
 'm2_total': '110',
 'moneda': '$',
 'title': 'Dueño Alquila PH en Villa Ortuzar',
 'url': 'https://www.zonaprop.com.ar/propiedades/dueno-alquila-ph-en-villa-ortuzar-51274526.html'}
2023-03-27 23:52:18 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-semipiso-51299952.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:52:18 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-semipiso-51299952.html>
{'ambientes': '2',
 'barrio': ', Monserrat, Capital Federal',
 'direccion': 'Solís 787',
 'dormitorios': '1',
 'expensas': ' 18.665',
 'm2_cub': '42',
 'm2_total': '42',
 'moneda': '$',
 'title': 'Excelente 2 Ambientes - Semipiso',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-2-ambientes-semipiso-51299952.html'}
2023-03-27 23:52:21 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/oportunidad-3-amplios-ambientes-en-belgrano-51203159.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:52:21 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/oportunidad-3-amplios-ambientes-en-belgrano-51203159.html>
{'ambientes': '3',
 'barrio': ', Belgrano C, Belgrano',
 'direccion': 'Avenida Congreso 2200',
 'dormitorios': '2',
 'expensas': ' 8.000',
 'm2_cub': '72',
 'm2_total': '80',
 'moneda': '$',
 'title': 'Oportunidad 3 Amplios Ambientes en Belgrano',
 'url': 'https://www.zonaprop.com.ar/propiedades/oportunidad-3-amplios-ambientes-en-belgrano-51203159.html'}
2023-03-27 23:52:27 [scrapy.extensions.logstats] INFO: Crawled 1798 pages (at 15 pages/min), scraped 1670 items (at 15 items/min)
2023-03-27 23:52:27 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/semipiso-avda.-libertador-zona-clubes-51139152.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:52:28 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/semipiso-avda.-libertador-zona-clubes-51139152.html>
{'ambientes': '3',
 'barrio': ', Núñez, Capital Federal',
 'direccion': 'Avenida del Libertador 7400',
 'dormitorios': '2',
 'expensas': ' 23.000',
 'm2_cub': '60',
 'm2_total': '66',
 'moneda': '$',
 'title': 'Semipiso Avda. Libertador Zona Clubes',
 'url': 'https://www.zonaprop.com.ar/propiedades/semipiso-avda.-libertador-zona-clubes-51139152.html'}
2023-03-27 23:52:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/excelente-ubicacion-sin-expensas.-51257832.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:52:29 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/excelente-ubicacion-sin-expensas.-51257832.html>
{'ambientes': '2',
 'barrio': ', Palermo Soho, Palermo',
 'direccion': 'Guatemala 4800',
 'dormitorios': '1',
 'expensas': ' 1',
 'm2_cub': '40',
 'm2_total': '45',
 'moneda': '$',
 'title': 'Excelente Ubicación, Sin Expensas.',
 'url': 'https://www.zonaprop.com.ar/propiedades/excelente-ubicacion-sin-expensas.-51257832.html'}
2023-03-27 23:52:32 [scrapy.core.engine] DEBUG: Crawled (200) <GET https://www.zonaprop.com.ar/propiedades/lindisimo-departamento-senorial-de-estilo-pisos-51266823.html via http://0.0.0.0:8050/render.html> (referer: None)
2023-03-27 23:52:33 [scrapy.core.scraper] DEBUG: Scraped from <200 https://www.zonaprop.com.ar/propiedades/lindisimo-departamento-senorial-de-estilo-pisos-51266823.html>
{'ambientes': '5',
 'barrio': ', Tribunales, Capital Federal',
 'direccion': 'Viamonte 1342',
 'dormitorios': '4',
 'expensas': ' 40.000',
 'm2_cub': '142',
 'm2_total': '142',
 'moneda': '$',
 'title': 'Lindisimo Departamento Señorial de Estilo, Pisos Parquet, Puertas '
          'Lustrada',
 'url': 'https://www.zonaprop.com.ar/propiedades/lindisimo-departamento-senorial-de-estilo-pisos-51266823.html'}
2023-03-27 23:52:33 [scrapy.core.engine] INFO: Closing spider (finished)
2023-03-27 23:52:33 [scrapy.statscollectors] INFO: Dumping Scrapy stats:
{'downloader/request_bytes': 2051029,
 'downloader/request_count': 1801,
 'downloader/request_method_count/POST': 1801,
 'downloader/response_bytes': 629547218,
 'downloader/response_count': 1801,
 'downloader/response_status_count/200': 1801,
 'dupefilter/filtered': 846,
 'elapsed_time_seconds': 6545.705842,
 'finish_reason': 'finished',
 'finish_time': datetime.datetime(2023, 3, 28, 2, 52, 33, 115312),
 'item_scraped_count': 1673,
 'log_count/DEBUG': 3478,
 'log_count/ERROR': 1,
 'log_count/INFO': 119,
 'log_count/WARNING': 1437,
 'memusage/max': 105512960,
 'memusage/startup': 61476864,
 'request_depth_max': 126,
 'response_received_count': 1801,
 'scheduler/dequeued': 3602,
 'scheduler/dequeued/memory': 3602,
 'scheduler/enqueued': 3602,
 'scheduler/enqueued/memory': 3602,
 'splash/render.html/request_count': 1801,
 'splash/render.html/response_count/200': 1801,
 'start_time': datetime.datetime(2023, 3, 28, 1, 3, 27, 409470)}
2023-03-27 23:52:33 [scrapy.core.engine] INFO: Spider closed (finished)
